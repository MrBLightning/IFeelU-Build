{"version":3,"sources":["serviceWorker.js","Pages/page.Page.js","Pages/page.login.js","Commons/comon.toggle.js","Pages/page.symptoms.js","Pages/page.graph.js","Pages/page.selectState.js","Pages/page.addText.js","Commons/comon.navbar.js","index.js"],"names":["Boolean","window","location","hostname","match","Page","_ref","react_default","a","createElement","className","id","params","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","redirect","username","password","UserId","renderRedirect","bind","assertThisInitialized","setRedirect","loginHandler","handleChangeUsername","handleChangePassword","handleClickUsername","console","log","Redirect","method","to","setState","fetch","headers","Accept","Content-Type","body","JSON","stringify","then","response","json","data","FirstName","undefined","_this2","userName","_id","catch","Error","SentUserName","SentPassword","_this3","sessionStorage","setItem","userFromSession","parse","getItem","dir","getStoredUser","event","target","value","_this4","type","onChange","onClick","name","e","React","Component","login","page_login_Login","Toggle","checked","toggleName","lib_default","onColor","toggleChecked","Symptoms","GeneralFeeling","Appetite","Nausea","BowelMovements","Motivation","Pain","Dizziness","Exhaustion","redirectBack","redirectNext","BackHandler","NextHandler","switchGeneralFeelingHandler","switchAppetiteHandler","switchNauseaHandler","switchBowelMovementsHandler","switchMotivationHandler","switchPainHandler","switchDizzinessHandler","switchExhaustionHandler","UpdateTracking","TrackingGeneralFeeling","TrackingAppetite","TrackingNausea","TrackingBowelMovements","TrackingMotivation","TrackingPain","TrackingDizziness","TrackingExhaustion","success","res","comon_toggle","Chart","require","Graph","renderExtraText","array","index","adedText","extraText","TrackGeneralFeeling","TrackAppetite","TrackNausea","TrackBowelMovements","TrackMotivation","TrackPain","TrackDizziness","TrackExhaustion","currentComponent","GeneralFeelingIsMarked","AppetiteIsMarked","NauseaIsMarked","BowelMovementsIsMarked","MotivationIsMarked","PainIsMarked","DizzinessIsMarked","ExhaustionIsMarked","GeneralFeelingLastValue","AppetiteLastValue","NauseaLastValue","BowelMovementsLastValue","MotivationLastValue","PainLastValue","DizzinessLastValue","ExhaustionLastValue","currDateCombo","currDate","myLabels","myDataGeneralFeeling","GeneralFeelingTexts","myDataAppetite","AppetiteTexts","myDataNausea","NauseaTexts","myDataBowelMovements","BowelMovementsTexts","myDataMotivation","MotivationTexts","myDataPain","PainTexts","myDataDizziness","DizzinessTexts","myDataExhaustion","ExhaustionTexts","node","toDate","dateStr","Date","daysdifference","date1","date2","date1_ms","getTime","date2_ms","difference_ms","Math","abs","round","fetchUserData","_x","_fetchUserData","apply","arguments","asyncToGenerator","regenerator_default","mark","_callee","userId","URL","wrap","_context","prev","next","lng","length","i","dateTimeCombo","date","toLocaleString","day","month","year","check","includes","tempDate","setDate","getDate","push","RecordTracking","ExtraText","stop","_x2","_getStoredUser","_callee2","_context2","fillChartData","datasetsData","datasetsText","label","backgroundColor","borderColor","borderWidth","fill","pointRadius","pointHoverRadius","pointHitRadius","myChart","labels","datasets","options","legend","position","boxWidth","evt","item","thisPoint","getElementAtEvent","_chart","legendItems","_datasetIndex","text","addedText","_index","scales","scaleOverride","scaleSteps","scaleStepWidth","scaleStartValue","yAxes","ticks","beginAtZero","max","min","stepSize","xAxes","minRotation","maxRotation","pan","enabled","mode","zoom","_commitGraph","_callee3","_context3","_x3","commitGraph","ref","RadioContainer","LastName","currentDate","currentTime","conditions","treatments","setGeneralFeeling","setAppetite","setNausea","setBowelMovements","setMotivation","setPain","setDizziness","setExhaustion","getCurrentDate","getCurrentTime","separator","newDate","getMonth","getFullYear","concat","newTime","hours","getHours","minutes","getMinutes","WriteRecord","Fragment","style","display","src","alt","marginRight","TextContainer","GeneralFeelingText","AppetiteText","NauseaText","BowelMovementsText","MotivationText","PainText","DizzinessText","ExhaustionText","setGeneralFeelingText","setAppetiteText","setNauseaText","setBowelMovementsText","setMotivationText","setPainText","setDizzinessText","setExhaustionText","rows","cols","Navbar","cName","isMenuOpen","BrowserRouter","href","menuState","htmlFor","Link","Route","exact","path","component","SelectState","addText","PageWrap","comon_navbar","ReactDOM","render","src_PageWrap","pageWrapId","outerContainerId","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d2cafe8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Page = ({ match }) => {\n\n    return (\n        <div className=\"pageContent\" id=\"pageContent\">\n            <div className=\"pageTopText\">\n            Page ID {match.params.id}\n            </div>\n        </div>\n    )\n}\n\nexport default Page","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { redirect: false, \n                       username: \"Username\", \n                       password: \"\",\n                       UserId: \"\"\n            }\n        this.renderRedirect = this.renderRedirect.bind(this);\n        this.setRedirect = this.setRedirect.bind(this);\n        this.loginHandler = this.loginHandler.bind(this);\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleClickUsername = this.handleClickUsername.bind(this);\n\n    }\n\n    renderRedirect() {\n        console.log(\"renderRedirect\");\n        if (this.state.redirect) {\n            return <Redirect method=\"post\" to={\"/tracksymptoms\"}></Redirect>\n        } \n    }\n\n    setRedirect() {\n        console.log(\"setRedirect\");\n        this.setState({\n            redirect: true\n        })\n    }\n\n    //this function is for getting user data from server for an existing user in sessionStorage\n    async getStoredUser(id){\n        console.log(\"getStoredUser\");\n        //await fetch('http://localhost:4000/fetch', {\n        await fetch('fetch', {    \n            method: \"post\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                UserId: id\n            })\n        }).then(response => {\n            return response.json();\n            }).then((data) => {\n                console.log(data.FirstName);\n                if (data !== undefined) {\n                    this.setState({ \n                        username: data.userName, \n                        password: data.password,\n                        UserId: data._id});\n                    console.log(\"got data from session: \" + data._id);\n                    //user found - go to path of existing user\n                    this.setState({\n                        redirect: true\n                    })\n                }\n            }).catch(Error => {\n            console.log(\"Error whith _ID from session: \" + Error)\n        })\n    }\n\n    //this function is for getting user data from server for an new login user in login.js\n    //using the passed username and password the user entered in the login.js page\n    async loginHandler(SentUserName, SentPassword){\n        console.log(\"loginHandler\");\n        console.log(SentUserName);\n        //await fetch('http://localhost:4000/fetch', {\n        await fetch('fetch', {       \n            method: \"post\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: SentUserName,\n                password: SentPassword\n            })\n        }).then(response => {\n            console.log(response);\n            return response.json();\n            }).then((data) => {\n                if (data !== undefined) {\n                    this.setState({ \n                        username: data.userName, \n                        password: data.password,\n                        UserId: data._id});\n                    console.log(\"got data from login: \" + data._id);\n                    //connected login user - write to sessionStorage\n                    window.sessionStorage.setItem('id', JSON.stringify(data._id));\n                    //user found - go to path of login user\n                    this.setState({\n                        redirect: true\n                    })\n                }\n            }).catch(Error => {\n            console.log(\"Error with user + pass from login: \" + Error)\n        })\n    }\n\n    //this is the initial check if we have a sessionStorage that holds a user\n    componentWillMount() {\n        //First we'll check if the sessionStorage has a user id saved\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        console.dir(userFromSession);\n        //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n        if (userFromSession != null) {\n            console.log(\"there is a user saved in this session\");\n            this.setState({ UserId: userFromSession });\n            this.getStoredUser(userFromSession);\n        } \n        //if I do not have sessionStorage then I redirect to the login page\n        else {\n            console.log(\"there is NO user saved in this session\");\n        }\n    }\n\n    handleChangeUsername(event) {\n        this.setState({ username: event.target.value });\n    }\n\n    handleChangePassword(event) {\n        this.setState({ password: event.target.value });\n    }\n\n    handleClickUsername() {\n        if (this.state.username === \"Username\") {\n            this.setState({ username: \"\" })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"pageContent\" id=\"pageContent\">\n                <div className=\"loginWrapper\">\n                    <div className=\"loginSecWrapper\">\n                        <div className=\"loginTitel\">Welcome</div>\n                        <div className=\"loginImg\"></div>\n                        <div className=\"inputsWrapper\">\n                            <div className=\"imputWrapper\"><input type=\"text\" className=\"loginInput\" onChange={this.handleChangeUsername} value={this.state.username} onClick={this.handleClickUsername}></input></div>\n                            <div className=\"imputWrapper\"><input type=\"password\" className=\"loginInput\" onChange={this.handleChangePassword} ></input></div>\n                        </div>\n                        <input id=\"button\" className=\"button loginSubmit\" type=\"submit\" name=\"button\"\n                            value=\"login\" onClick={(e)=>this.loginHandler(this.state.username, this.state.password)} />\n                        {this.renderRedirect()}    \n                    </div >\n                </div >\n            </div>\n            )\n    }\n}\n\n\nconst login = ({ match }) => {\n\n    return (\n        <div>\n            <Login />\n        </div>\n    )\n}\n\nexport default login\n\n\n","import React from \"react\";\nimport Switch from 'react-ios-switch';\n\nclass Toggle extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: true,\n        }; \n    }\n\n    render() {\n        //const { checked } = this.state;\n        //console.dir(this.props.toggleName + \" \" + this.props.initToggle + \" \" + this.state.checked);\n\n        return (\n            <div className=\"trackItem\">\n                <div className=\"trackName\">{this.props.toggleName}</div>\n                <Switch\n                    checked={this.props.checked}\n                    onColor=\"#22aee4\"\n                    className=\"switch\"\n                    onChange={() => this.props.toggleChecked()}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Toggle;","import React from 'react';\n/*Toggle is the Toggle select element */\nimport Toggle from '../Commons/comon.toggle';\nimport { Redirect } from 'react-router-dom'\n\nclass Symptoms extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            GeneralFeeling: false,\n            Appetite: false,\n            Nausea: false,\n            BowelMovements: false,\n            Motivation: false,\n            Pain: false,\n            Dizziness: false,\n            Exhaustion: false,\n            redirectBack: false,\n            redirectNext: false,\n            UserId: \"\"\n        }\n        this.renderRedirect = this.renderRedirect.bind(this);\n        this.setRedirect = this.setRedirect.bind(this);\n        this.BackHandler = this.BackHandler.bind(this);\n        this.NextHandler = this.NextHandler.bind(this);\n        this.switchGeneralFeelingHandler = this.switchGeneralFeelingHandler.bind(this);\n        this.switchAppetiteHandler = this.switchAppetiteHandler.bind(this);\n        this.switchNauseaHandler = this.switchNauseaHandler.bind(this);\n        this.switchBowelMovementsHandler = this.switchBowelMovementsHandler.bind(this);\n        this.switchMotivationHandler = this.switchMotivationHandler.bind(this);\n        this.switchPainHandler = this.switchPainHandler.bind(this);\n        this.switchDizzinessHandler = this.switchDizzinessHandler.bind(this);\n        this.switchExhaustionHandler = this.switchExhaustionHandler.bind(this);\n        this.UpdateTracking = this.UpdateTracking.bind(this);\n    }\n\n    renderRedirect() {\n        if (this.state.redirectBack) {\n            console.log(\"renderRedirect Back\");\n            return <Redirect method=\"post\" to={\"/login\"}></Redirect>\n        }\n        if (this.state.redirectNext) {\n            console.log(\"renderRedirect Next\");\n            return <Redirect method=\"post\" to={\"/selectState\"}></Redirect>\n        }\n    }\n\n    setRedirect() {\n        console.log(\"setRedirect\");\n        this.setState({\n            redirect: true\n        })\n    }\n\n    //this function is for getting user data from server for an existing user in sessionStorage\n    async getStoredUser(id) {\n        console.log(\"getStoredUser\");\n        //await fetch('http://localhost:4000/fetch', {\n        await fetch('fetch', {    \n            method: \"post\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                UserId: id\n            })\n        }).then(response => {\n            return response.json();\n        }).then((data) => {\n            console.log(\"Setting State\");\n            if (data !== undefined) {\n                this.setState({\n                    GeneralFeeling: data.TrackingGeneralFeeling,\n                    Appetite: data.TrackingAppetite,\n                    Nausea: data.TrackingNausea,\n                    BowelMovements: data.TrackingBowelMovements,\n                    Motivation: data.TrackingMotivation,\n                    Pain: data.TrackingPain,\n                    Dizziness: data.TrackingDizziness,\n                    Exhaustion: data.TrackingExhaustion,\n                    UserId: data._id\n                });\n                console.log(\"Symptoms - got data from session: \" + data.TrackingGeneralFeeling);\n            }\n        }).catch(Error => {\n            console.log(\"Error with _ID from session: \" + Error)\n        })\n    }\n\n    //this function is for setting the symptom tracking variables for the user in the DB\n    //once we pressed 'Next'\n    async UpdateTracking(id) {\n        console.log(\"UpdateTracking\");\n        //if the user didn't touch the buttons there is a chance some or all of the trackers\n        //will be undefined. these tests make sure that if a tracker is undefined it is set as false\n        if(this.state.GeneralFeeling === undefined){this.setState({ GeneralFeeling: false })}\n        if(this.state.Appetite === undefined){this.setState({ Appetite: false })}\n        if(this.state.Nausea === undefined){this.setState({ Nausea: false })}\n        if(this.state.BowelMovements === undefined){this.setState({ BowelMovements: false })}\n        if(this.state.Motivation === undefined){this.setState({ Motivation: false })}\n        if(this.state.Pain === undefined){this.setState({ Pain: false })}\n        if(this.state.Dizziness === undefined){this.setState({ Dizziness: false })}\n        if(this.state.Exhaustion === undefined){this.setState({ Exhaustion: false })}\n        //await fetch('http://localhost:4000/get', {\n        await fetch('get', {    \n            method: \"put\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                UserId: id,\n                GeneralFeeling: this.state.GeneralFeeling,\n                Appetite: this.state.Appetite,\n                Nausea: this.state.Nausea,\n                BowelMovements: this.state.BowelMovements,\n                Motivation: this.state.Motivation,\n                Pain: this.state.Pain,\n                Dizziness: this.state.Dizziness,\n                Exhaustion: this.state.Exhaustion\n            }),\n            success: (res) => {\n                console.log(res);\n                console.log(\"this is a UpdateTracking success\");\n            }\n        })\n    }\n\n    //this is the initial check if we have a sessionStorage that holds a user\n    componentWillMount() {\n        //First we'll check if the sessionStorage has a user id saved\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        console.dir(userFromSession);\n        //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n        if (userFromSession != null) {\n            console.log(\"there is a user saved in this session\");\n            this.setState({ UserId: userFromSession });\n            this.getStoredUser(userFromSession);\n        }\n        //if I do not have sessionStorage then I redirect to the login page\n        else {\n            console.log(\"there is a NO user saved in this session\");\n        }\n    }\n\n\n    switchGeneralFeelingHandler() {\n        this.setState({ GeneralFeeling: !this.state.GeneralFeeling });\n        console.log(\"GeneralFeeling: \" + this.state.GeneralFeeling);\n    }\n\n    switchAppetiteHandler() {\n        this.setState({ Appetite: !this.state.Appetite });\n        console.log(\"Appetite: \" + this.state.Appetite);\n    }\n\n    switchNauseaHandler() {\n        this.setState({ Nausea: !this.state.Nausea });\n        console.log(\"Nausea: \" + this.state.Nausea);\n    }\n\n    switchBowelMovementsHandler() {\n        this.setState({ BowelMovements: !this.state.BowelMovements });\n        console.log(\"BowelMovements: \" + this.state.BowelMovements);\n    }\n\n    switchMotivationHandler() {\n        this.setState({ Motivation: !this.state.Motivation });\n        console.log(\"Motivation: \" + this.state.Motivation);\n    }\n\n    switchPainHandler() {\n        this.setState({ Pain: !this.state.Pain });\n        console.log(\"Pain: \" + this.state.Pain);\n    }\n\n    switchDizzinessHandler() {\n        this.setState({ Dizziness: !this.state.Dizziness });\n        console.log(\"Dizziness: \" + this.state.Dizziness);\n    }\n\n    switchExhaustionHandler() {\n        this.setState({ Exhaustion: !this.state.Exhaustion });\n        console.log(\"Exhaustion: \" + this.state.Exhaustion);\n    }\n\n    BackHandler() {\n        this.setState({ redirectBack: true });\n    }\n\n    NextHandler() {\n        console.log(this.GeneralFeeling + \" \" + this.Appetite);\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        console.dir(userFromSession);\n        //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n        if (userFromSession != null) {\n            this.setState({ UserId: userFromSession });\n            this.UpdateTracking(userFromSession);\n        }\n        this.setState({ redirectNext: true });\n    }\n\n    render() {\n        //console.log(\"render\");\n        return (\n            <div className=\"pageContent\" id=\"pageContent\">\n                <div className=\"pageTopText\">I would like to track:</div>\n                <div className=\"trackBox\">\n                    <Toggle toggleName={\"General Feeling\"} checked={this.state.GeneralFeeling} toggleChecked={this.switchGeneralFeelingHandler} />\n                    <Toggle toggleName={\"Appetite\"} checked={this.state.Appetite} toggleChecked={this.switchAppetiteHandler} />\n                    <Toggle toggleName={\"Nausea\"} checked={this.state.Nausea} toggleChecked={this.switchNauseaHandler} />\n                    <Toggle toggleName={\"Bowel Movements\"} checked={this.state.BowelMovements} toggleChecked={this.switchBowelMovementsHandler} />\n                    <Toggle toggleName={\"Motivation\"} checked={this.state.Motivation} toggleChecked={this.switchMotivationHandler} />\n                    <Toggle toggleName={\"Pain\"} checked={this.state.Pain} toggleChecked={this.switchPainHandler} />\n                    <Toggle toggleName={\"Dizziness\"} checked={this.state.Dizziness} toggleChecked={this.switchDizzinessHandler} />\n                    <Toggle toggleName={\"Exhaustion\"} checked={this.state.Exhaustion} toggleChecked={this.switchExhaustionHandler} />\n                </div>\n                <div className=\"buttonArea\">\n                    <input id=\"button\" className=\"button buttonBack\" type=\"submit\" name=\"button\" value=\"Back\"\n                        onClick={(e) => this.BackHandler()} />\n                    <input id=\"button\" className=\"button buttonNext\" type=\"submit\" name=\"button\" value=\"Next\"\n                        onClick={(e) => this.NextHandler()} />\n                    {this.renderRedirect()}\n                </div>\n            </div>\n        )  \n    }\n}\n\nexport default Symptoms\n\n\n","import React from 'react';\n/*To enable Pan and Zoom that are defined in chartjs-plugin-zoom*/\nimport * as zoom from 'chartjs-plugin-zoom';\n// import { finished } from 'stream';\n\nvar Chart = require(\"chart.js\");\n\nclass Graph extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\textraText: '',\n\t\t\tTrackGeneralFeeling: false,\n\t\t\tTrackAppetite: false,\n\t\t\tTrackNausea: false,\n\t\t\tTrackBowelMovements: false,\n\t\t\tTrackMotivation: false,\n\t\t\tTrackPain: false,\n\t\t\tTrackDizziness: false,\n\t\t\tTrackExhaustion: false,\n\t\t\tUserId: ''\n\t\t};\n\n\t\t//this binding is needed to make 'this' work in the callback \n\t\tthis.renderExtraText = this.renderExtraText.bind(this);\n\t}\n\n\t//this will redraw the page WITH the added text at the bottom\n\trenderExtraText = (array, index, adedText) => {\n\t\tthis.setState({ extraText: adedText + array[index] });\n\t}\n\n\tcomponentDidMount() {\n\t\tlet currentComponent = this;\n\t\t//This is where we define local variables that will be familiar to all functions\n\t\t//inside the componentDidMount functions\n\t\t//We start by defining 'listners' that will later tell us if a certain dataset was marked or not\t\n\t\tlet GeneralFeelingIsMarked = false;\n\t\tlet AppetiteIsMarked = false;\n\t\tlet NauseaIsMarked = false;\n\t\tlet BowelMovementsIsMarked = false;\n\t\tlet MotivationIsMarked = false;\n\t\tlet PainIsMarked = false;\n\t\tlet DizzinessIsMarked = false;\n\t\tlet ExhaustionIsMarked = false;\n\n\t\tlet GeneralFeelingLastValue = 0;\n\t\tlet AppetiteLastValue = 0;\n\t\tlet NauseaLastValue = 0;\n\t\tlet BowelMovementsLastValue = 0;\n\t\tlet MotivationLastValue = 0;\n\t\tlet PainLastValue = 0;\n\t\tlet DizzinessLastValue = 0;\n\t\tlet ExhaustionLastValue = 0;\n\t\t//let conditionsLastValue = 0;\n\t\t//let treatmentsLastValue = 0;\n\n\t\tlet currDateCombo = \"\";\n\t\tlet currDate = \"\";\n\n\t\t//this will be the list of labels for the X Axis of the graph\n\t\tlet myLabels = [];\n\n\t\t//these are the various data sets. \n\t\t//Each set has the data on it's state and the text written at that time.\n\t\tlet myDataGeneralFeeling = [];\n\t\tlet GeneralFeelingTexts = [];\n\t\tlet myDataAppetite = [];\n\t\tlet AppetiteTexts = [];\n\t\tlet myDataNausea = [];\n\t\tlet NauseaTexts = [];\n\t\tlet myDataBowelMovements = [];\n\t\tlet BowelMovementsTexts = [];\n\t\tlet myDataMotivation = [];\n\t\tlet MotivationTexts = [];\n\t\tlet myDataPain = [];\n\t\tlet PainTexts = [];\n\t\tlet myDataDizziness = [];\n\t\tlet DizzinessTexts = [];\n\t\tlet myDataExhaustion = [];\n\t\tlet ExhaustionTexts = [];\n\n\t\tconst node = this.node;\n\n\t\t//Here are a bunch of Functions that I'll be using:\n\t\t//function to convert string in the format of yyyy-mm-dd into a valid date object\n\t\tfunction toDate(dateStr) {\n\t\t\treturn new Date(dateStr)\n\t\t}\n\t\t//function to get the number of days differentiating two dates given as strings of format dd/mm/yyyy\n\t\tfunction daysdifference(date1, date2) {\n\t\t\t// The number of milliseconds in one day\n\t\t\tvar ONEDAY = 1000 * 60 * 60 * 24;\n\t\t\t// Convert both dates to milliseconds\n\t\t\tvar date1_ms = toDate(date1).getTime();\n\t\t\tvar date2_ms = toDate(date2).getTime();\n\t\t\t// Calculate the difference in milliseconds\n\t\t\tvar difference_ms = Math.abs(date1_ms - date2_ms);\n\n\t\t\t// Convert back to days and return\n\t\t\treturn Math.round(difference_ms / ONEDAY);\n\t\t}\n\n\t\t//function to fetch the information about the user from the DB\n\t\tasync function fetchUserData(userId) {\n\t\t\t//let URL = \"http://localhost:4000/fetch/\" + userId;\n\t\t\tlet URL = \"fetch/\" + userId;\n\t\t\tawait fetch(URL).then(response => {\n\t\t\t\treturn response.json();\n\t\t\t}).then(data => {\n\t\t\t\t//This is where we start to break down the data we got about the user from the DB \n\t\t\t\t//into seperate data sets (like 'pain', 'general feeling' etc')\n\n\t\t\t\t//This loop goes over every document in the DB that belongs to this user \n\t\t\t\t//and seperates each document to it's proper data set\n\t\t\t\tlet lng = data.length;\n\t\t\t\t//this makes sure we have some value here even if we didn't get back any record from the DB\n\t\t\t\t//if(lng === undefined) {lng = 0}; \n\t\t\t\tfor (var i = 0; i < lng; i++) {\n\t\t\t\t\tlet dateTimeCombo = toDate(data[i].date).toLocaleString(undefined, {\n\t\t\t\t\t\tday: 'numeric',\n\t\t\t\t\t\tmonth: 'short',\n\t\t\t\t\t\tyear: '2-digit',\n\t\t\t\t\t}) + \".\" + data[i].check;\n\t\t\t\t\tif (myLabels.includes(dateTimeCombo) === false) {\n\t\t\t\t\t\twhile (daysdifference(data[i].date, currDate) > 1) {\n\t\t\t\t\t\t\tlet tempDate = new Date(toDate(currDate));\n\t\t\t\t\t\t\ttempDate.setDate(tempDate.getDate() + 1);\n\t\t\t\t\t\t\t//this currDate works with a date string of yyyy-mm-dd\n\t\t\t\t\t\t\tcurrDate = tempDate.toLocaleString(undefined, {\n\t\t\t\t\t\t\t\tday: 'numeric',\n\t\t\t\t\t\t\t\tmonth: 'short',\n\t\t\t\t\t\t\t\tyear: '2-digit',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tmyLabels.push(currDate);\n\t\t\t\t\t\t\tif (GeneralFeelingIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataGeneralFeeling.push(GeneralFeelingLastValue);\n\t\t\t\t\t\t\t\tGeneralFeelingTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (AppetiteIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataAppetite.push(AppetiteLastValue);\n\t\t\t\t\t\t\t\tAppetiteTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (NauseaIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataNausea.push(NauseaLastValue);\n\t\t\t\t\t\t\t\tNauseaTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (BowelMovementsIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataBowelMovements.push(BowelMovementsLastValue);\n\t\t\t\t\t\t\t\tBowelMovementsTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (MotivationIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataMotivation.push(MotivationLastValue);\n\t\t\t\t\t\t\t\tMotivationTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (PainIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataPain.push(PainLastValue);\n\t\t\t\t\t\t\t\tPainTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (DizzinessIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataDizziness.push(DizzinessLastValue);\n\t\t\t\t\t\t\t\tDizzinessTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (ExhaustionIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataExhaustion.push(ExhaustionLastValue);\n\t\t\t\t\t\t\t\tExhaustionTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tGeneralFeelingIsMarked = false;\n\t\t\t\t\t\t\tAppetiteIsMarked = false;\n\t\t\t\t\t\t\tNauseaIsMarked = false;\n\t\t\t\t\t\t\tBowelMovementsIsMarked = false;\n\t\t\t\t\t\t\tMotivationIsMarked = false;\n\t\t\t\t\t\t\tPainIsMarked = false;\n\t\t\t\t\t\t\tDizzinessIsMarked = false;\n\t\t\t\t\t\t\tExhaustionIsMarked = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmyLabels.push(dateTimeCombo);\n\t\t\t\t\t\tif (currDateCombo !== dateTimeCombo && currDateCombo !== \"\") {\n\t\t\t\t\t\t\tif (GeneralFeelingIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataGeneralFeeling.push(GeneralFeelingLastValue);\n\t\t\t\t\t\t\t\tGeneralFeelingTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (AppetiteIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataAppetite.push(AppetiteLastValue);\n\t\t\t\t\t\t\t\tAppetiteTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (NauseaIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataNausea.push(NauseaLastValue);\n\t\t\t\t\t\t\t\tNauseaTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (BowelMovementsIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataBowelMovements.push(BowelMovementsLastValue);\n\t\t\t\t\t\t\t\tBowelMovementsTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (MotivationIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataMotivation.push(MotivationLastValue);\n\t\t\t\t\t\t\t\tMotivationTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (PainIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataPain.push(PainLastValue);\n\t\t\t\t\t\t\t\tPainTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (DizzinessIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataDizziness.push(DizzinessLastValue);\n\t\t\t\t\t\t\t\tDizzinessTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (ExhaustionIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataExhaustion.push(ExhaustionLastValue);\n\t\t\t\t\t\t\t\tExhaustionTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrDate = data[i].date;\n\t\t\t\t\t\tcurrDateCombo = dateTimeCombo;\n\t\t\t\t\t\tGeneralFeelingIsMarked = false;\n\t\t\t\t\t\tAppetiteIsMarked = false;\n\t\t\t\t\t\tNauseaIsMarked = false;\n\t\t\t\t\t\tBowelMovementsIsMarked = false;\n\t\t\t\t\t\tMotivationIsMarked = false;\n\t\t\t\t\t\tPainIsMarked = false;\n\t\t\t\t\t\tDizzinessIsMarked = false;\n\t\t\t\t\t\tExhaustionIsMarked = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'GeneralFeeling') {\n\t\t\t\t\t\tmyDataGeneralFeeling.push(data[i].state);\n\t\t\t\t\t\tGeneralFeelingTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tGeneralFeelingLastValue = data[i].state;\n\t\t\t\t\t\tGeneralFeelingIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Appetite') {\n\t\t\t\t\t\tmyDataAppetite.push(data[i].state);\n\t\t\t\t\t\tAppetiteTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tAppetiteLastValue = data[i].state;\n\t\t\t\t\t\tAppetiteIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Nausea') {\n\t\t\t\t\t\tmyDataNausea.push(data[i].state);\n\t\t\t\t\t\tNauseaTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tNauseaLastValue = data[i].state;\n\t\t\t\t\t\tNauseaIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'BowelMovements') {\n\t\t\t\t\t\tmyDataBowelMovements.push(data[i].state);\n\t\t\t\t\t\tBowelMovementsTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tBowelMovementsLastValue = data[i].state;\n\t\t\t\t\t\tBowelMovementsIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Motivation') {\n\t\t\t\t\t\tmyDataMotivation.push(data[i].state);\n\t\t\t\t\t\tMotivationTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tMotivationLastValue = data[i].state;\n\t\t\t\t\t\tMotivationIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Pain') {\n\t\t\t\t\t\tmyDataPain.push(data[i].state);\n\t\t\t\t\t\tPainTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tPainLastValue = data[i].state;\n\t\t\t\t\t\tPainIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Dizziness') {\n\t\t\t\t\t\tmyDataDizziness.push(data[i].state);\n\t\t\t\t\t\tDizzinessTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tDizzinessLastValue = data[i].state;\n\t\t\t\t\t\tDizzinessIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Exhaustion') {\n\t\t\t\t\t\tmyDataExhaustion.push(data[i].state);\n\t\t\t\t\t\tExhaustionTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tExhaustionLastValue = data[i].state;\n\t\t\t\t\t\tExhaustionIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (GeneralFeelingIsMarked === false) {\n\t\t\t\t\tmyDataGeneralFeeling.push(GeneralFeelingLastValue);\n\t\t\t\t\tGeneralFeelingTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (AppetiteIsMarked === false) {\n\t\t\t\t\tmyDataAppetite.push(AppetiteLastValue);\n\t\t\t\t\tAppetiteTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (NauseaIsMarked === false) {\n\t\t\t\t\tmyDataNausea.push(NauseaLastValue);\n\t\t\t\t\tNauseaTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (BowelMovementsIsMarked === false) {\n\t\t\t\t\tmyDataBowelMovements.push(BowelMovementsLastValue);\n\t\t\t\t\tBowelMovementsTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (MotivationIsMarked === false) {\n\t\t\t\t\tmyDataMotivation.push(MotivationLastValue);\n\t\t\t\t\tMotivationTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (PainIsMarked === false) {\n\t\t\t\t\tmyDataPain.push(PainLastValue);\n\t\t\t\t\tPainTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (DizzinessIsMarked === false) {\n\t\t\t\t\tmyDataDizziness.push(DizzinessLastValue);\n\t\t\t\t\tDizzinessTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (ExhaustionIsMarked === false) {\n\t\t\t\t\tmyDataExhaustion.push(ExhaustionLastValue);\n\t\t\t\t\tExhaustionTexts.push(\" \");\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t//this function is for getting user data from server for an existing user in sessionStorage\n\t\tasync function getStoredUser(id) {\n\t\t\tconsole.log(\"getStoredUser\");\n\t\t\t//await fetch('http://localhost:4000/fetch', {\n\t\t\tawait fetch('fetch', {  \n\t\t\t\tmethod: \"post\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tUserId: id\n\t\t\t\t})\n\t\t\t}).then(response => {\n\t\t\t\treturn response.json();\n\t\t\t}).then((data) => {\n\t\t\t\tconsole.log(\"Setting State\");\n\t\t\t\tif (data !== undefined) {\n\t\t\t\t\tcurrentComponent.setState({\n\t\t\t\t\t\tTrackGeneralFeeling: data.TrackingGeneralFeeling,\n\t\t\t\t\t\tTrackAppetite: data.TrackingAppetite,\n\t\t\t\t\t\tTrackNausea: data.TrackingNausea,\n\t\t\t\t\t\tTrackBowelMovements: data.TrackingBowelMovements,\n\t\t\t\t\t\tTrackMotivation: data.TrackingMotivation,\n\t\t\t\t\t\tTrackPain: data.TrackingPain,\n\t\t\t\t\t\tTrackDizziness: data.TrackingDizziness,\n\t\t\t\t\t\tTrackExhaustion: data.TrackingExhaustion,\n\t\t\t\t\t\tUserId: data._id,\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(\"Getting user data: \" + currentComponent.state.FirstName);\n\t\t\t\t}\n\t\t\t}).catch(Error => {\n\t\t\t\tconsole.log(\"Error with _ID from session: \" + Error)\n\t\t\t})\n\t\t}\n\n\n\t\t//This function uses the variables defined in function fetchUserData \n\t\t//to fill out the data sets in the Graph component\n\t\tfunction fillChartData() {\n\t\t\t//Here is where we fill in the datasets based on what the user has\n\t\t\t//currently defined\n\t\t\tlet datasetsData = [];\n\t\t\tlet datasetsText = \"\";\n\t\t\tif (currentComponent.state.TrackGeneralFeeling) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'General Feeling', data: myDataGeneralFeeling, backgroundColor: ['#e6beff'],\n\t\t\t\t\tborderColor: '#e6beff', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tif (currentComponent.state.TrackAppetite) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Appetite', data: myDataAppetite, backgroundColor: ['#911eb4'],\n\t\t\t\t\tborderColor: '#911eb4', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tif (currentComponent.state.TrackNausea) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Nausea', data: myDataNausea, backgroundColor: ['#808000'],\n\t\t\t\t\tborderColor: '#808000', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\t\t\t\t\t\t\n\t\t\tif (currentComponent.state.TrackBowelMovements) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Bowel Movements', data: myDataBowelMovements, backgroundColor: ['#9A6324'],\n\t\t\t\t\tborderColor: '#9A6324', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tif (currentComponent.state.TrackMotivation) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Motivation', data: myDataMotivation, backgroundColor: ['#4363d8'],\n\t\t\t\t\tborderColor: '#4363d8', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\t\t\t\t\t\t\t\n\t\t\tif (currentComponent.state.TrackPain) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Pain', data: myDataPain, backgroundColor: ['#42d4f4'],\n\t\t\t\t\tborderColor: '#42d4f4', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tif (currentComponent.state.TrackDizziness) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Dizziness', data: myDataDizziness, backgroundColor: ['#469990'],\n\t\t\t\t\tborderColor: '#469990', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\t\t\t\n\t\t\tif (currentComponent.state.TrackExhaustion) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Exhaustion', data: myDataExhaustion, backgroundColor: ['#000075'],\n\t\t\t\t\tborderColor: '#000075', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tlet myChart = new Chart(node, {\n\t\t\t\ttype: \"line\",\n\t\t\t\tdata: {\n\t\t\t\t\tlabels: myLabels,\n\t\t\t\t\tdatasets: datasetsData\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\tlegend: { position: \"top\", labels: { boxWidth: 10 } },\n\t\t\t\t\t'onClick': (evt, item) => {\n\t\t\t\t\t\tvar thisPoint = myChart.getElementAtEvent(evt)[0];\n\t\t\t\t\t\tif (thisPoint !== undefined) {\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"General Feeling\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your General Feeling you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(GeneralFeelingTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Appetite\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Appetite you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(AppetiteTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Nausea\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Nausea you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(NauseaTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"BowelMovements\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your BowelMovements you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(BowelMovementsTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Motivation\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Motivation you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(MotivationTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Pain\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Pain you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(PainTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Dizziness\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Dizziness you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(DizzinessTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Exhaustion\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Exhaustion you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(ExhaustionTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tscales: {\n\t\t\t\t\t\tscaleOverride: true,\n\t\t\t\t\t\tscaleSteps: 1,\n\t\t\t\t\t\tscaleStepWidth: 1,\n\t\t\t\t\t\tscaleStartValue: 0,\n\t\t\t\t\t\tyAxes: [{\n\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\t\tmax: 5,\n\t\t\t\t\t\t\t\tmin: 1,\n\t\t\t\t\t\t\t\tstepSize: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}],\n\t\t\t\t\t\txAxes: [{\n\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\tminRotation: 0,\n\t\t\t\t\t\t\t\tmaxRotation: 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}]\n\t\t\t\t\t},\n\t\t\t\t\t// Container for pan options\n\t\t\t\t\tpan: {\n\t\t\t\t\t\t// Boolean to enable panning\n\t\t\t\t\t\tenabled: true,\n\n\t\t\t\t\t\t// Panning directions. Remove the appropriate direction to disable \n\t\t\t\t\t\t// Eg. 'y' would only allow panning in the y direction\n\t\t\t\t\t\tmode: 'x'\n\t\t\t\t\t},\n\n\t\t\t\t\t// Container for zoom options\n\t\t\t\t\tzoom: {\n\t\t\t\t\t\t// Boolean to enable zooming\n\t\t\t\t\t\tenabled: true,\n\n\t\t\t\t\t\t// Zooming directions. Remove the appropriate direction to disable \n\t\t\t\t\t\t// Eg. 'y' would only allow zooming in the y direction\n\t\t\t\t\t\tmode: 'x',\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t//This is where it all comes together.\n\t\t//We run the functions one after the other in order:\n\t\t//first we get the user information - getStoredUser\n\t\t//then all the user records - fetchUserData\n\t\tasync function commitGraph(UserId) {\n\t\t\tawait getStoredUser(UserId);\n\t\t\tawait fetchUserData(UserId);\n\t\t\tfillChartData();\n\t\t}\n\n\t\tlet userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n\t\tconsole.dir(userFromSession);\n\t\t//If I have a valid sessionStorage then I start all calls from commitGraph \n\t\tif (userFromSession != null) {\n\t\t\tconsole.log(\"there is a user saved in this session\");\n\t\t\tconsole.log(\"call data for \" + userFromSession);\n\t\t\tcommitGraph(userFromSession);\n\t\t}\n\n\t\t//Now that the Chart is full of Data we can move on to the rendering\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"pageContent\" id=\"pageContent\">\n\t\t\t\t<canvas className=\"graphContent\"\n\t\t\t\t\t// style={{ width: 300, height: 300 }}\n\t\t\t\t\tref={node => (this.node = node)}\n\t\t\t\t/>\n\t\t\t\t<div className=\"extraText\">\n\t\t\t\t\t{this.state.extraText}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Graph;","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nclass RadioContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //these variables tell me what symptoms I'm tracking\n      TrackGeneralFeeling: false,\n      TrackAppetite: false,\n      TrackNausea: false,\n      TrackBowelMovements: false,\n      TrackMotivation: false,\n      TrackPain: false,\n      TrackDizziness: false,\n      TrackExhaustion: false,\n      //these variables tell me what is the state of each symptom\n      GeneralFeeling: \"3\",\n      Appetite: \"3\",\n      Nausea: \"3\",\n      BowelMovements: \"3\",\n      Motivation: \"3\",\n      Pain: \"3\",\n      Dizziness: \"3\",\n      Exhaustion: \"3\",\n      //these variables are used in the creation of a new symptom tracking record\n      FirstName: '',\n      LastName: '',\n      UserId: '',\n      check: '',\n      currentDate: '',\n      currentTime: '',\n      conditions: '', \n      treatments: '',\n      //these variables are used in the redirection assosiated with the buttons at thye bottom of the page\n      redirectBack: false,\n      redirectNext: false\n    }\n    this.renderRedirect = this.renderRedirect.bind(this);\n    this.setRedirect = this.setRedirect.bind(this);\n    this.BackHandler = this.BackHandler.bind(this);\n    this.NextHandler = this.NextHandler.bind(this);\n    this.setGeneralFeeling = this.setGeneralFeeling.bind(this);\n    this.setAppetite = this.setAppetite.bind(this);\n    this.setNausea = this.setNausea.bind(this);\n    this.setBowelMovements = this.setBowelMovements.bind(this);\n    this.setMotivation = this.setMotivation.bind(this);\n    this.setPain = this.setPain.bind(this);\n    this.setDizziness = this.setDizziness.bind(this);\n    this.setExhaustion = this.setExhaustion.bind(this);\n    this.getStoredUser = this.getStoredUser.bind(this);\n    this.getCurrentDate = this.getCurrentDate.bind(this);\n    this.getCurrentTime = this.getCurrentTime.bind(this);\n  }\n\n  getCurrentDate(separator = '-') {\n\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date}`;\n  }\n\n  getCurrentTime(separator = ':') {\n\n    let newTime = new Date();\n    let hours = newTime.getHours();\n    let minutes = newTime.getMinutes();\n\n    return `${hours}${separator}${minutes}`;\n  }\n\n  //this function is for getting user data from server for an existing user in sessionStorage\n  async getStoredUser(id) {\n    console.log(\"getStoredUser\");\n    //await fetch('http://localhost:4000/fetch', {\n    await fetch('fetch', {  \n      method: \"post\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: id\n      })\n    }).then(response => {\n      return response.json();\n    }).then((data) => {\n      console.log(\"Setting State\");\n      if (data !== undefined) {\n        this.setState({\n          TrackGeneralFeeling: data.TrackingGeneralFeeling,\n          TrackAppetite: data.TrackingAppetite,\n          TrackNausea: data.TrackingNausea,\n          TrackBowelMovements: data.TrackingBowelMovements,\n          TrackMotivation: data.TrackingMotivation,\n          TrackPain: data.TrackingPain,\n          TrackDizziness: data.TrackingDizziness,\n          TrackExhaustion: data.TrackingExhaustion,\n          UserId: data._id,\n          FirstName: data.FirstName,\n          LastName: data.LastName,\n          check: '',\n          conditions: data.conditions, \n          treatments: data.treatments,\n          currentDate: this.getCurrentDate(),\n          currentTime: this.getCurrentTime()\n        });\n        console.log(\"Getting user data: \" + this.state.FirstName + \" \" + this.state.LastName + \" \" + this.state.currentDate + \" \" + this.state.currentTime);\n      }\n    }).catch(Error => {\n      console.log(\"Error with _ID from session: \" + Error)\n    })\n  }\n\n  setGeneralFeeling(event) {\n    //console.log(\"GeneralFeeling: \" + event.target.value);\n    this.setState({ GeneralFeeling: event.target.value })\n  }\n\n  setAppetite(event) {\n    //console.log(\"Appetite: \" + event.target.value);\n    this.setState({ Appetite: event.target.value })\n  }\n\n  setNausea(event) {\n    //console.log(\"Nausea: \" + event.target.value);\n    this.setState({ Nausea: event.target.value })\n  }\n\n  setBowelMovements(event) {\n    //console.log(\"BowelMovements: \" + event.target.value);\n    this.setState({ BowelMovements: event.target.value })\n  }\n\n  setMotivation(event) {\n    //console.log(\"Motivation: \" + event.target.value);\n    this.setState({ Motivation: event.target.value })\n  }\n\n  setPain(event) {\n    //console.log(\"Pain: \" + event.target.value);\n    this.setState({ Pain: event.target.value })\n  }\n\n  setDizziness(event) {\n    //console.log(\"Dizziness: \" + event.target.value);\n    this.setState({ Dizziness: event.target.value })\n  }\n\n  setExhaustion(event) {\n    //console.log(\"Exhaustion: \" + event.target.value);\n    this.setState({ Exhaustion: event.target.value })\n  }\n\n  //this is the initial check if we have a sessionStorage that holds a user\n  async componentWillMount() {\n    //First we'll check if the sessionStorage has a user id saved\n    let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n    console.dir(userFromSession);\n    //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n    if (userFromSession != null) {\n      console.log(\"there is a user saved in this session\");\n      this.state.UserId = userFromSession;\n      await this.getStoredUser(userFromSession);\n    }\n    //if I do not have sessionStorage then I redirect to the login page\n    else {\n      console.log(\"there is a NO user saved in this session\");\n    }\n  }\n\n  //this function is for setting the symptom tracking variables for the user in the DB\n  //once we pressed 'Next'\n  async WriteRecord(id) {\n    console.log(\"Update Symptom State\");\n    //await fetch('http://localhost:4000/set', {\n    await fetch('set', {  \n      method: \"put\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: id,\n        TrackGeneralFeeling: this.state.TrackGeneralFeeling,\n        TrackAppetite: this.state.TrackAppetite,\n        TrackNausea: this.state.TrackNausea,\n        TrackBowelMovements: this.state.TrackBowelMovements,\n        TrackMotivation: this.state.TrackMotivation,\n        TrackPain: this.state.TrackPain,\n        TrackDizziness: this.state.TrackDizziness,\n        TrackExhaustion: this.state.TrackExhaustion,\n        GeneralFeeling: this.state.GeneralFeeling,\n        Appetite: this.state.Appetite,\n        Nausea: this.state.Nausea,\n        BowelMovements: this.state.BowelMovements,\n        Motivation: this.state.Motivation,\n        Pain: this.state.Pain,\n        Dizziness: this.state.Dizziness,\n        Exhaustion: this.state.Exhaustion,\n        FirstName: this.state.FirstName,\n        LastName: this.state.LastName,\n        check: '',\n        currentDate: this.state.currentDate,\n        currentTime: this.state.currentTime,\n        conditions: this.state.conditions, \n        treatments: this.state.treatments\n      }),\n      success: (res) => {\n        console.log(res);\n        console.log(\"this is a WriteRecord success\");\n      }\n    })\n  }\n\n\n  BackHandler() {\n    this.setState({ redirectBack: true });\n  }\n\n  NextHandler() {\n    console.log(this.GeneralFeeling + \" \" + this.Appetite);\n    let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n    console.dir(userFromSession);\n    //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n    if (userFromSession != null) {\n      this.setState({ UserId: userFromSession });\n      this.WriteRecord(userFromSession);\n    }\n    this.setState({ redirectNext: true });\n  }\n\n  renderRedirect() {\n    if (this.state.redirectBack) {\n      console.log(\"renderRedirect Back\");\n      return <Redirect method=\"post\" to={\"/tracksymptoms\"}></Redirect>\n    }\n    if (this.state.redirectNext) {\n      console.log(\"renderRedirect Next\");\n      return <Redirect method=\"post\" to={\"/addText\"}></Redirect>\n    }\n  }\n\n  setRedirect() {\n    console.log(\"setRedirect\");\n    this.setState({\n      redirect: true\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"pageContent\" id=\"pageContent\">\n        <React.Fragment>\n          <div onChange={event => this.setGeneralFeeling(event)} style={{ display: this.state.TrackGeneralFeeling ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your General Feeling </div><br />\n            <label><input type='radio' value='1' name='GeneralFeeling' checked={this.state.GeneralFeeling === '1'} onChange={this.setGeneralFeeling}  style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Feeling level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='GeneralFeeling' checked={this.state.GeneralFeeling === '2'} onChange={this.setGeneralFeeling} style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Feeling level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='GeneralFeeling' checked={this.state.GeneralFeeling === '3'} onChange={this.setGeneralFeeling} style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Feeling level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='GeneralFeeling' checked={this.state.GeneralFeeling === '4'} onChange={this.setGeneralFeeling} style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Feeling level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='GeneralFeeling' checked={this.state.GeneralFeeling === '5'} onChange={this.setGeneralFeeling} style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Feeling level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setAppetite(event)} style={{ display: this.state.TrackAppetite ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Appetite </div><br />\n            <label><input type='radio' value='1' name='Appetite' checked={this.state.Appetite === '1'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Appetite level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Appetite' checked={this.state.Appetite === '2'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Appetite level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Appetite' checked={this.state.Appetite === '3'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Appetite level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Appetite' checked={this.state.Appetite === '4'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Appetite level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Appetite' checked={this.state.Appetite === '5'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Appetite level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setNausea(event)} style={{ display: this.state.TrackNausea ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Nausea </div><br />\n            <label><input type='radio' value='1' name='Nausea' checked={this.state.Nausea === '1'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Nausea level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Nausea' checked={this.state.Nausea === '2'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Nausea level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Nausea' checked={this.state.Nausea === '3'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Nausea level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Nausea' checked={this.state.Nausea === '4'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Nausea level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Nausea' checked={this.state.Nausea === '5'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Nausea level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setBowelMovements(event)} style={{ display: this.state.TrackBowelMovements ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Bowel Movements </div><br />\n            <label><input type='radio' value='1' name='BowelMovements' checked={this.state.BowelMovements === '1'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Bowel Movements level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='BowelMovements' checked={this.state.BowelMovements === '2'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Bowel Movements level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='BowelMovements' checked={this.state.BowelMovements === '3'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Bowel Movements level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='BowelMovements' checked={this.state.BowelMovements === '4'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Bowel Movements level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='BowelMovements' checked={this.state.BowelMovements === '5'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Bowel Movements level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setMotivation(event)} style={{ display: this.state.TrackMotivation ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Motivation </div><br />\n            <label><input type='radio' value='1' name='Motivation' checked={this.state.Motivation === '1'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Motivation level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Motivation' checked={this.state.Motivation === '2'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Motivation level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Motivation' checked={this.state.Motivation === '3'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Motivation level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Motivation' checked={this.state.Motivation === '4'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Motivation level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Motivation' checked={this.state.Motivation === '5'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Motivation level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setPain(event)} style={{ display: this.state.TrackPain ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Pain </div><br />\n            <label><input type='radio' value='1' name='Pain' checked={this.state.Pain === '1'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Pain level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Pain' checked={this.state.Pain === '2'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Pain level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Pain' checked={this.state.Pain === '3'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Pain level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Pain' checked={this.state.Pain === '4'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Pain level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Pain' checked={this.state.Pain === '5'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Pain level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setDizziness(event)} style={{ display: this.state.TrackDizziness ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Dizziness </div><br />\n            <label><input type='radio' value='1' name='Dizziness' checked={this.state.Dizziness === '1'} onChange={this.setDizziness} style={{ display: 'none' }}/>\n              <img src={(this.state.Dizziness === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Dizziness level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Dizziness' checked={this.state.Dizziness === '2'} onChange={this.setDizziness} style={{ display: 'none' }}/>\n              <img src={(this.state.Dizziness === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Dizziness level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Dizziness' checked={this.state.Dizziness === '3'} onChange={this.setDizziness} style={{ display: 'none' }}/>\n              <img src={(this.state.Dizziness === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Dizziness level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Dizziness' checked={this.state.Dizziness === '4'} onChange={this.setDizziness} style={{ display: 'none' }}/>\n              <img src={(this.state.Dizziness === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Dizziness level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Dizziness' checked={this.state.Dizziness === '5'} onChange={this.setDizziness}style={{ display: 'none' }} />\n              <img src={(this.state.Dizziness === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Dizziness level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setExhaustion(event)} style={{ display: this.state.TrackExhaustion ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Exhaustion </div><br />\n            <label><input type='radio' value='1' name='Exhaustion' checked={this.state.Exhaustion === '1'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Exhaustion level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Exhaustion' checked={this.state.Exhaustion === '2'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Exhaustion level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Exhaustion' checked={this.state.Exhaustion === '3'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Exhaustion level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Exhaustion' checked={this.state.Exhaustion === '4'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Exhaustion level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Exhaustion' checked={this.state.Exhaustion === '5'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Exhaustion level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div className=\"buttonArea\">\n            <input id=\"button\" className=\"button buttonBack\" type=\"submit\" name=\"button\" value=\"Back\"\n              onClick={(e) => this.BackHandler()} />\n            <input id=\"button\" className=\"button buttonNext\" type=\"submit\" name=\"button\" value=\"Next\"\n              onClick={(e) => this.NextHandler()} />\n            {this.renderRedirect()}\n          </div>\n        </React.Fragment>\n      </div>\n    )\n  }\n}\n\nexport default RadioContainer;","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nclass TextContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //these variables tell me what symptoms I'm tracking\n      TrackGeneralFeeling: false,\n      TrackAppetite: false,\n      TrackNausea: false,\n      TrackBowelMovements: false,\n      TrackMotivation: false,\n      TrackPain: false,\n      TrackDizziness: false,\n      TrackExhaustion: false,\n      //these variables are for the added text of each tracking record \n      GeneralFeelingText: '',\n      AppetiteText: '',\n      NauseaText: '',\n      BowelMovementsText: '',\n      MotivationText: '',\n      PainText: '',\n      DizzinessText: '',\n      ExhaustionText: '',      \n      //these variables are used in the redirection assosiated with the buttons at thye bottom of the page\n      UserId:'',\n      redirectBack: false,\n      redirectNext: false\n    }\n    this.renderRedirect = this.renderRedirect.bind(this);\n    this.setRedirect = this.setRedirect.bind(this);\n    this.BackHandler = this.BackHandler.bind(this);\n    this.NextHandler = this.NextHandler.bind(this);\n    this.setGeneralFeelingText = this.setGeneralFeelingText.bind(this);\n    this.setAppetiteText = this.setAppetiteText.bind(this);\n    this.setNauseaText = this.setNauseaText.bind(this);\n    this.setBowelMovementsText = this.setBowelMovementsText.bind(this);\n    this.setMotivationText = this.setMotivationText.bind(this);\n    this.setPainText = this.setPainText.bind(this);\n    this.setDizzinessText = this.setDizzinessText.bind(this);\n    this.setExhaustionText = this.setExhaustionText.bind(this);\n    this.getStoredUser = this.getStoredUser.bind(this);\n  }\n\n  //this function is for getting user data from server for an existing user in sessionStorage\n  async getStoredUser(id) {\n    console.log(\"getStoredUser\");\n    //await fetch('http://localhost:4000/fetch', {\n    await fetch('fetch', {  \n      method: \"post\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: id\n      })\n    }).then(response => {\n      return response.json();\n    }).then((data) => {\n      console.log(\"Setting State\");\n      if (data !== undefined) {\n        this.setState({\n          TrackGeneralFeeling: data.TrackingGeneralFeeling,\n          TrackAppetite: data.TrackingAppetite,\n          TrackNausea: data.TrackingNausea,\n          TrackBowelMovements: data.TrackingBowelMovements,\n          TrackMotivation: data.TrackingMotivation,\n          TrackPain: data.TrackingPain,\n          TrackDizziness: data.TrackingDizziness,\n          TrackExhaustion: data.TrackingExhaustion,\n          UserId: data._id,\n        });\n      }\n    }).catch(Error => {\n      console.log(\"Error with _ID from session: \" + Error)\n    })\n  }\n\n  setGeneralFeelingText(event) {\n    this.setState({ GeneralFeelingText: event.target.value })\n  }\n\n  setAppetiteText(event) {\n    this.setState({ AppetiteText: event.target.value })\n  }\n\n  setNauseaText(event) {\n    this.setState({ NauseaText: event.target.value })\n  }\n\n  setBowelMovementsText(event) {\n    this.setState({ BowelMovementsText: event.target.value })\n  }\n\n  setMotivationText(event) {\n    this.setState({ MotivationText: event.target.value })\n  }\n\n  setPainText(event) {\n    this.setState({ PainText: event.target.value })\n  }\n\n  setDizzinessText(event) {\n    this.setState({ DizzinessText: event.target.value })\n  }\n\n  setExhaustionText(event) {\n    this.setState({ ExhaustionText: event.target.value })\n  }\n\n  //this is the initial check if we have a sessionStorage that holds a user\n  async componentWillMount() {\n    //First we'll check if the sessionStorage has a user id saved\n    let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n    console.dir(userFromSession);\n    //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n    if (userFromSession != null) {\n      console.log(\"there is a user saved in this session\");\n      this.state.UserId = userFromSession;\n      await this.getStoredUser(userFromSession);\n    }\n    //if I do not have sessionStorage then I redirect to the login page\n    else {\n      console.log(\"there is a NO user saved in this session\");\n    }\n  }\n\n  //this function is for adding the text to the last appropriate record in user records\n  //once we pressed 'Next'\n  async WriteRecord(id) {\n    console.log(\"Update Symptom State\");\n    //await fetch('http://localhost:4000/addText', {\n    await fetch('addText', {  \n      method: \"put\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: id,\n        TrackGeneralFeeling: this.state.TrackGeneralFeeling,\n        TrackAppetite: this.state.TrackAppetite,\n        TrackNausea: this.state.TrackNausea,\n        TrackBowelMovements: this.state.TrackBowelMovements,\n        TrackMotivation: this.state.TrackMotivation,\n        TrackPain: this.state.TrackPain,\n        TrackDizziness: this.state.TrackDizziness,\n        TrackExhaustion: this.state.TrackExhaustion,\n        GeneralFeelingText: this.state.GeneralFeelingText,\n        AppetiteText: this.state.AppetiteText,\n        NauseaText: this.state.NauseaText,\n        BowelMovementsText: this.state.BowelMovementsText,\n        MotivationText: this.state.MotivationText,\n        PainText: this.state.PainText,\n        DizzinessText: this.state.DizzinessText,\n        ExhaustionText: this.state.ExhaustionText,\n      }),\n      success: (res) => {\n        console.log(res);\n        console.log(\"this is a WriteRecord success\");\n      }\n    })\n  }\n\n\n  BackHandler() {\n    this.setState({ redirectBack: true });\n  }\n\n  NextHandler() {\n    console.log(this.GeneralFeeling + \" \" + this.Appetite);\n    let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n    console.dir(userFromSession);\n    //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n    if (userFromSession != null) {\n      this.setState({ UserId: userFromSession });\n      this.WriteRecord(userFromSession);\n    }\n    this.setState({ redirectNext: true });\n  }\n\n  renderRedirect() {\n    if (this.state.redirectBack) {\n      console.log(\"renderRedirect Back\");\n      return <Redirect method=\"post\" to={\"/selectState\"}></Redirect>\n    }\n    if (this.state.redirectNext) {\n      console.log(\"renderRedirect Next\");\n      return <Redirect method=\"post\" to={\"/graph\"}></Redirect>\n    }\n  }\n\n  setRedirect() {\n    console.log(\"setRedirect\");\n    this.setState({\n      redirect: true\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"pageContent\" id=\"pageContent\">\n        <React.Fragment>\n          <div onChange={event => this.setGeneralFeelingText(event)} style={{ display: this.state.TrackGeneralFeeling ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your General Feeling record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='GeneralFeelingText' onChange={this.setGeneralFeelingText}/>\n          </div>\n          <div onChange={event => this.setAppetiteText(event)} style={{ display: this.state.TrackAppetite ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Appetite record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='AppetiteText' onChange={this.setAppetiteText}/>\n          </div>\n          <div onChange={event => this.setNauseaText(event)} style={{ display: this.state.TrackNausea ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Nausea record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='NauseaText' onChange={this.setNauseaText}/>\n          </div>\n          <div onChange={event => this.setBowelMovementsText(event)} style={{ display: this.state.TrackBowelMovements ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Bowel Movements record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='BowelMovementsText' onChange={this.setBowelMovementsText}/>\n          </div>          \n          <div onChange={event => this.setMotivationText(event)} style={{ display: this.state.TrackMotivation ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Motivation record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='MotivationText' onChange={this.setMotivationText}/>\n          </div>  \n          <div onChange={event => this.setPainText(event)} style={{ display: this.state.TrackPain ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Pain record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='PainText' onChange={this.setPainText}/>\n          </div> \n          <div onChange={event => this.setDizzinessText(event)} style={{ display: this.state.TrackDizziness ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Dizziness record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='DizzinessText' onChange={this.setDizzinessText}/>\n          </div> \n          <div onChange={event => this.setExhaustionText(event)} style={{ display: this.state.TrackExhaustion ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Exhaustion record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='ExhaustionText' onChange={this.setExhaustionText}/>\n          </div> \n          <div className=\"buttonArea\">\n            <input id=\"button\" className=\"button buttonBack\" type=\"submit\" name=\"button\" value=\"Back\"\n              onClick={(e) => this.BackHandler()} />\n            <input id=\"button\" className=\"button buttonNext\" type=\"submit\" name=\"button\" value=\"Next\"\n              onClick={(e) => this.NextHandler()} />\n            {this.renderRedirect()}\n          </div>\n        </React.Fragment>\n      </div>\n    )\n  }\n}\n\nexport default TextContainer;","// import ReactDOM from 'react-dom';\nimport React from 'react';\n// import the CSS';\nimport '../index.css';\n\n/*Page is where I define the different pages */\nimport Page from '../Pages/page.Page';\n/*login is where the user initially logs in */\nimport login from '../Pages/page.login';\n/*Symptoms is where the user decides what symptoms to track*/\nimport Symptoms from '../Pages/page.symptoms';\n/*Graph is where I define the graph class */\nimport Graph from '../Pages/page.graph';\n/*SelectState is where I alloow to select your current state (1-5) */\nimport SelectState from '../Pages/page.selectState';\n/*SelectState is where I alloow to select your current state (1-5) */\nimport addText from '../Pages/page.addText';\n/*BrowserRouter and so on are elements of react-router-dom to enable Routing  */\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\n\nclass Navbar extends React.Component {\n    render() {\n        let cName;\n        if (this.props.isMenuOpen) { cName = \"sidebarMenuShadow\" }\n        else { cName = \"\" }\n\n        return (\n            <Router>\n                <div>\n                    <div className=\"header\">\n                        <div className=\"headerText\">IFEELU</div>\n                        <div className=\"logo\">\n                            <a href=\"https://ifeelu-6133.nodechef.com/\">\n                                <img src=\"https://drive.google.com/uc?id=14MW9Z9pz9of-krcV5qLRLs_gvjmE1Sny\" alt=\"IFeelU Logo\" />\n                            </a>\n                        </div>\n                    </div>\n                    <input type=\"checkbox\" className=\"openSidebarMenu\" id=\"openSidebarMenu\"\n                        /*setState changes the state and re-renders the page on changes */\n                        onClick={this.props.menuState} checked={this.props.isMenuOpen}\n                        onChange={this.props.menuState}/>\n                    <label htmlFor=\"openSidebarMenu\" className=\"sidebarIconToggle\">\n                        <div className=\"spinner diagonal part-1\"></div>\n                        <div className=\"spinner horizontal\"></div>\n                        <div className=\"spinner diagonal part-2\"></div>\n                    </label>\n                    {/* {console.log(this.state.isToggleOn + \" \" + cName)} */}\n                    <div id=\"sidebarMenu\" className={cName}>\n                        <ul className=\"sidebarMenuInner\">\n                            {/*<Link> changes the URL*/}\n                            <li onClick={this.props.menuState}>\n                                <Link to={`/`}>Barak Brudo <span>Web Developer</span></Link></li>\n                            <li onClick={this.props.menuState}>\n                                <Link to={`/graph`}>Graph</Link></li>\n                            <li onClick={this.props.menuState}>\n                               {/* <Route path='/login/:id' exact={true} component={login} /> */}\n                                <Link to={`/login`}>Login</Link></li>\n                            <li onClick={this.props.menuState}>\n                                <Link to={`/tracksymptoms`}>Tracking Symptoms</Link></li>\n                            <li onClick={this.props.menuState}>\n                                <Link to={`/selectState`}>Select State</Link></li>\n                            <li onClick={this.props.menuState}>\n                                <Link to={`/addText`}>Add Text</Link></li>\n                        </ul>\n                    </div>\n                    <div className='wrapper'>\n                        {/*<Route> changes the content of this div (wrapper) based onb the URL*/}\n                        <Route exact={true} path='/' component={login} />\n                        <Route exact={true} path='/login' component={login} />\n                        <Route exact={true} path='/tracksymptoms' component={Symptoms} />\n                        <Route exact={true} path='/selectState' component={SelectState} />\n                        <Route exact={true} path='/addText' component={addText} />\n                        <Route path='/pages/:id' component={Page} />\n                        <Route exact={true} path='/graph' component={Graph} />  \n                        <Route exact={true} path='/graph/:id' component={Graph} /> \n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default Navbar;","//This is the main page f the app\n//Start this app by typing: 'npm start' in a terminal \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/*Navbar is the navbar for all pages */\nimport Navbar from './Commons/comon.navbar';\n\n/*PageWrap is the class encomassing all the pages wrapped in <Router>. \nThe Nav bar is always ther and under it are the various pages represented by\n<Route.. */\nclass PageWrap extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { isMenuOpen: false };\n    }\n\n    menuState = () => {\n        this.setState({ isMenuOpen: !this.state.isMenuOpen });\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar menuState={this.menuState} isMenuOpen={this.state.isMenuOpen}/>\n            </div>\n        );\n    }\n}\n\n\nfunction main() {\n    return (\n        <div id=\"App\">\n            <PageWrap pageWrapId={\"pageContent\"} outerContainerId={\"App\"} />\n        </div>\n    );\n}\n\nReactDOM.render(main(), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n//serviceWorker.register();"],"sourceRoot":""}