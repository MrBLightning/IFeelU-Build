{"version":3,"sources":["serviceWorker.js","Pages/page.Page.js","Commons/comon.Input.js","Commons/comon.Button.js","Pages/page.login.js","Commons/comon.toggle.js","Pages/page.symptoms.js","Pages/page.graph.js","Pages/page.selectState.js","Pages/page.addText.js","Commons/comon.TextArea.js","Pages/page.registration.js","Pages/page.userUpdate.js","Commons/comon.navbar.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Page","_ref","react_default","a","createElement","className","id","params","Input","props","htmlFor","name","title","Object","assign","type","typeinput","value","onChange","placeholder","Button","style","onClick","action","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","newUser","userName","password","UserId","redirectLogin","redirectRegister","redirectFailedLogin","renderRedirect","bind","assertThisInitialized","loginHandler","RegisterHandler","handleChangeUsername","handleChangePassword","handleClickUsername","handleFormSubmit","handleInput","Redirect","method","to","textAlign","alignSelf","e","target","setState","prevState","objectSpread","defineProperty","fetch","headers","Accept","Content-Type","body","JSON","stringify","response","json","data","FirstName","undefined","_this2","username","_id","redirect","Error","SentUserName","SentPassword","_this3","sessionStorage","setItem","preventDefault","_this4","userFromSession","parse","getItem","dir","getStoredUser","event","onSubmit","comon_Input","comon_Button","React","Component","Toggle","checked","toggleName","lib_default","onColor","toggleChecked","Symptoms","GeneralFeeling","Appetite","Nausea","BowelMovements","Motivation","Pain","Dizziness","Exhaustion","redirectBack","redirectNext","setRedirect","BackHandler","NextHandler","switchGeneralFeelingHandler","switchAppetiteHandler","switchNauseaHandler","switchBowelMovementsHandler","switchMotivationHandler","switchPainHandler","switchDizzinessHandler","switchExhaustionHandler","UpdateTracking","sleep","TrackingGeneralFeeling","TrackingAppetite","TrackingNausea","TrackingBowelMovements","TrackingMotivation","TrackingPain","TrackingDizziness","TrackingExhaustion","milliseconds","start","Date","getTime","i","statusText","comon_toggle","Chart","require","Graph","renderExtraText","array","index","adedText","extraText","TrackGeneralFeeling","TrackAppetite","TrackNausea","TrackBowelMovements","TrackMotivation","TrackPain","TrackDizziness","TrackExhaustion","currentComponent","GeneralFeelingIsMarked","AppetiteIsMarked","NauseaIsMarked","BowelMovementsIsMarked","MotivationIsMarked","PainIsMarked","DizzinessIsMarked","ExhaustionIsMarked","GeneralFeelingLastValue","AppetiteLastValue","NauseaLastValue","BowelMovementsLastValue","MotivationLastValue","PainLastValue","DizzinessLastValue","ExhaustionLastValue","currDateCombo","currDate","myLabels","myDataGeneralFeeling","GeneralFeelingTexts","myDataAppetite","AppetiteTexts","myDataNausea","NauseaTexts","myDataBowelMovements","BowelMovementsTexts","myDataMotivation","MotivationTexts","myDataPain","PainTexts","myDataDizziness","DizzinessTexts","myDataExhaustion","ExhaustionTexts","node","toDate","dateStr","daysdifference","date1","date2","date1_ms","date2_ms","difference_ms","Math","abs","round","fetchUserData","_x","_fetchUserData","apply","arguments","asyncToGenerator","regenerator_default","mark","_callee","userId","URL","wrap","_context","prev","next","lng","length","dateTimeCombo","date","toLocaleString","day","month","year","check","includes","tempDate","setDate","getDate","push","RecordTracking","ExtraText","stop","_x2","_getStoredUser","_callee2","_context2","fillChartData","datasetsData","datasetsText","label","backgroundColor","borderColor","borderWidth","fill","pointRadius","pointHoverRadius","pointHitRadius","myChart","labels","datasets","options","legend","position","boxWidth","evt","item","thisPoint","getElementAtEvent","_chart","legendItems","_datasetIndex","text","addedText","_index","scales","scaleOverride","scaleSteps","scaleStepWidth","scaleStartValue","yAxes","ticks","beginAtZero","max","min","stepSize","xAxes","minRotation","maxRotation","pan","enabled","mode","zoom","_commitGraph","_callee3","_context3","_x3","commitGraph","ref","RadioContainer","LastName","currentDate","currentTime","conditions","treatments","setGeneralFeeling","setAppetite","setNausea","setBowelMovements","setMotivation","setPain","setDizziness","setExhaustion","getCurrentDate","getCurrentTime","separator","newDate","getMonth","getFullYear","concat","newTime","hours","getHours","minutes","getMinutes","WriteRecord","Fragment","display","src","alt","marginRight","TextContainer","GeneralFeelingText","AppetiteText","NauseaText","BowelMovementsText","MotivationText","PainText","DizzinessText","ExhaustionText","setGeneralFeelingText","setAppetiteText","setNauseaText","setBowelMovementsText","setMotivationText","setPainText","setDizzinessText","setExhaustionText","rows","cols","TextArea","RegistrationForm","mail","TrackingTime_1","TrackingTime_2","handleClearForm","userData","required","comon_TextArea","UserUpdateForm","disabled","Navbar","cName","isMenuOpen","BrowserRouter","href","menuState","Link","Route","exact","path","component","login","SelectState","addText","PageWrap","comon_navbar","ReactDOM","render","src_PageWrap","pageWrapId","outerContainerId","document","getElementById","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.29ea87f2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Page = ({ match }) => {\n\n    return (\n        <div className=\"pageContent\" id=\"pageContent\">\n            <div className=\"pageTopText\">\n            {/*Page ID {match.params.id}*/}\n            {match.params.id}\n            </div>\n        </div>\n    )\n}\n\nexport default Page","import React from \"react\";\n\nconst Input = props => {\n  //console.log(props.value);\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.name} className=\"form-label pageTopText\">\n        {props.title}\n      </label>\n      <input\n        className=\"form-control input-control\"\n        id={props.name}\n        name={props.name}\n        type={props.typeinput}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Button = props => {\n  //console.log(props.style);\n  return (\n    <button\n      style={props.style}\n      // className={\n      //   props.type === \"primary\" ? \"btn btn-primary\" : \"btn btn-secondary\"\n      // }\n      className = \"button\"\n      onClick = {props.action}\n    >\n      {props.title}\n    </button>\n  );\n};\n\nexport default Button;","import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport Input from \"../Commons/comon.Input\";\nimport Button from \"../Commons/comon.Button\";\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            newUser: {\n                userName: '', \n                password: '',\n                UserId:''\n              },\n            redirectLogin: false,\n            redirectRegister: false, \n            redirectFailedLogin: false,             \n            //username: \"Username\", \n            //password: \"\",\n            //UserId: \"\"\n            }\n        this.renderRedirect = this.renderRedirect.bind(this);\n        this.loginHandler = this.loginHandler.bind(this);\n        this.RegisterHandler = this.RegisterHandler.bind(this);\n\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleClickUsername = this.handleClickUsername.bind(this);\n\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);    \n    }\n\n    renderRedirect() {\n        console.log(\"renderRedirect\");\n        if (this.state.redirectLogin) {\n            //return <Redirect method=\"post\" to={\"/tracksymptoms\"}></Redirect>\n            return <Redirect method=\"post\" to={\"/graph\"}></Redirect>\n        }\n        if (this.state.redirectRegister) {\n            return <Redirect method=\"post\" to={\"/registration\"}></Redirect>\n        } \n        if(this.state.redirectFailedLogin){\n            let divStyle = {\n                textAlign: 'center',\n                alignSelf: 'center'\n              };\n            return  <div className=\"pageTopText form-label\" style={divStyle}>Please enter a valid UserName and Password</div>\n        }        \n    }\n\n    handleInput(e) {\n        //console.log(\"Inside handleInput\");\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState(\n          prevState => ({\n            newUser: {\n              ...prevState.newUser,\n              [name]: value\n            }\n          })//,\n          //() => console.log(this.state.newUser)\n        );\n      }    \n\n    //this function is for getting user data from server for an existing user in sessionStorage\n    async getStoredUser(id){\n        console.log(\"getStoredUser\");\n        //await fetch('http://localhost:4000/fetch', {\n        await fetch('fetch', {    \n            method: \"post\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                UserId: id\n            })\n        }).then(response => {\n            return response.json();\n            }).then((data) => {\n                console.log(data.FirstName);\n                if (data !== undefined) {\n                    this.setState({ \n                        username: data.userName, \n                        password: data.password,\n                        UserId: data._id});\n                    console.log(\"got data from session: \" + data._id);\n                    //user found - go to path of existing user\n                    this.setState({\n                        redirect: true\n                    })\n                }\n            }).catch(Error => {\n            console.log(\"Error with _ID from session: \" + Error)\n        })\n    }\n\n    //this function is for getting user data from server for an new login user in login.js\n    //using the passed username and password the user entered in the login.js page\n    async loginHandler(SentUserName, SentPassword){\n        console.log(\"loginHandler\");\n        console.log(SentUserName);\n        //await fetch('http://localhost:4000/fetch', {\n        await fetch('fetch', {       \n            method: \"post\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: SentUserName,\n                password: SentPassword\n            })\n        }).then(response => {\n            console.log(response);\n            return response.json();\n            }).then((data) => {\n                if (data !== undefined) {\n                    this.setState({ \n                        username: data.userName, \n                        password: data.password,\n                        UserId: data._id});\n                    console.log(\"got data from login: \" + data._id);\n                    //connected login user - write to sessionStorage\n                    window.sessionStorage.setItem('id', JSON.stringify(data._id));\n                    //user found - go to path of login user\n                    this.setState({\n                        redirectLogin: true\n                    })\n                }\n            }).catch(Error => {\n            console.log(\"Error with user + pass from login: \" + Error)\n        })\n    }\n\n    //this function is for getting user data from server for an new login user in login.js\n    //using the passed username and password the user entered in the login.js page\n    async handleFormSubmit(e) {\n        e.preventDefault();\n        let SentUserName = this.state.newUser.userName;\n        let SentPassword = this.state.newUser.password;\n        console.log(\"handleFormSubmit Login\");\n\n        if(SentUserName !== '' && SentPassword !== ''){\n            //await fetch('http://localhost:4000/fetch', {\n            await fetch('fetch', {       \n                method: \"post\",\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: SentUserName,\n                    password: SentPassword\n                })\n            }).then(response => {\n                console.log(response);\n                return response.json();\n                }).then((data) => {\n                    if (data !== undefined) {\n                        this.setState({\n                            newUser: {\n                            userName: data.userName, \n                            password: data.password,\n                            UserId: data._id\n                            }\n                        });\n                        console.log(\"got data from login: \" + data._id);\n                        //connected login user - write to sessionStorage\n                        window.sessionStorage.setItem('id', JSON.stringify(data._id));\n                        //user found - go to path of login user\n                        this.setState({\n                            redirectLogin: true\n                        })\n                    }\n                }).catch(Error => {\n                    this.setState({redirectFailedLogin: true});    \n                    console.log(\"Error with user + pass from login: \" + Error)\n                })\n        } else{\n            this.setState({redirectFailedLogin: true});\n        }   \n    }\n    \n\n    // RegisterHandler() {\n    //     this.setState({ redirectRegister: true });\n    // }\n\n    RegisterHandler(e) {\n        e.preventDefault();\n        this.setState({\n            redirectRegister: true\n        });\n      }\n\n\n    //this is the initial check if we have a sessionStorage that holds a user\n    componentWillMount() {\n        //First we'll check if the sessionStorage has a user id saved\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        console.dir(userFromSession);\n        //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n        if (userFromSession != null) {\n            console.log(\"there is a user saved in this session\");\n            //this.setState({ UserId: userFromSession });\n            this.setState({\n                newUser: {\n                  UserId: userFromSession\n                },\n                redirectFailedLogin: false\n            });\n            this.getStoredUser(userFromSession);\n        } \n        //if I do not have sessionStorage then I redirect to the login page\n        else {\n            console.log(\"there is NO user saved in this session\");\n        }\n    }\n\n    handleChangeUsername(event) {\n        this.setState({ username: event.target.value });\n    }\n\n    handleChangePassword(event) {\n        this.setState({ password: event.target.value });\n    }\n\n    handleClickUsername() {\n        if (this.state.username === \"Username\") {\n            this.setState({ username: \"\" })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"pageContent\" id=\"pageContent\">\n                <div className=\"pageTopText\">Welcome</div>\n                {/* \n                <div className=\"inputsWrapper\">\n                    <div className=\"imputWrapper\"><input type=\"text\" className=\"loginInput\" onChange={this.handleChangeUsername} value={this.state.username} onClick={this.handleClickUsername}></input></div>\n                    <div className=\"imputWrapper\"><input type=\"password\" className=\"loginInput\" onChange={this.handleChangePassword} ></input></div>\n                </div>\n                <div className=\"buttonArea\">\n                    <input id=\"button\" className=\"button loginSubmit\" type=\"submit\" name=\"button\" value=\"login\"\n                           onClick={(e) => this.loginHandler(this.state.username, this.state.password)} />\n                    <input id=\"button\" className=\"button\" type=\"submit\" name=\"button\" value=\"Register\"\n                           onClick={(e) => this.RegisterHandler()} />\n                </div>           \n                {this.renderRedirect()}\n                */}\n                <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n                    {/* User Name */}\n                    <Input typeinput={\"text\"} title={\"User Name:\"} name={\"userName\"}\n                           value={this.state.newUser.userName} placeholder={\"Enter your user name\"}\n                           onChange={this.handleInput} />{\" \"}                 \n                    {/* Password */}\n                    <Input typeinput={\"text\"} title={\"Password:\"} name={\"password\"}\n                           value={this.state.newUser.password} placeholder={\"Enter your password\"}\n                           onChange={this.handleInput} />{\" \"}\n                    {/*Login */}      \n                    <Button className=\"button\" action={this.handleFormSubmit} type={\"primary\"} title={\"Login\"} />{\" \"}\n                    {/* Register */}\n                    <Button className=\"button\" action={this.RegisterHandler} type={\"secondary\"} title={\"Register\"} />{\" \"}\n                </form>\n                {this.renderRedirect()}      \n            </div>\n        )\n    }\n}\n\n// const login = ({ match }) => {\n//     return (\n//         <div>\n//             <Login />\n//         </div>\n//     )\n// }\n\nexport default Login\n\n\n","import React from \"react\";\nimport Switch from 'react-ios-switch';\n\nclass Toggle extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: true,\n        }; \n    }\n\n    render() {\n        //const { checked } = this.state;\n        //console.dir(this.props.toggleName + \" \" + this.props.initToggle + \" \" + this.state.checked);\n\n        return (\n            <div className=\"trackItem\">\n                <div className=\"trackName\">{this.props.toggleName}</div>\n                <Switch\n                    checked={this.props.checked}\n                    onColor=\"#22aee4\"\n                    className=\"switch\"\n                    onChange={() => this.props.toggleChecked()}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Toggle;","import React from 'react';\n/*Toggle is the Toggle select element */\nimport Toggle from '../Commons/comon.toggle';\nimport { Redirect } from 'react-router-dom'\n\nclass Symptoms extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            GeneralFeeling: false,\n            Appetite: false,\n            Nausea: false,\n            BowelMovements: false,\n            Motivation: false,\n            Pain: false,\n            Dizziness: false,\n            Exhaustion: false,\n            redirectBack: false,\n            redirectNext: false,\n            redirectLogin: false,\n            UserId: \"\"\n        }\n        this.renderRedirect = this.renderRedirect.bind(this);\n        this.setRedirect = this.setRedirect.bind(this);\n        this.BackHandler = this.BackHandler.bind(this);\n        this.NextHandler = this.NextHandler.bind(this);\n        this.switchGeneralFeelingHandler = this.switchGeneralFeelingHandler.bind(this);\n        this.switchAppetiteHandler = this.switchAppetiteHandler.bind(this);\n        this.switchNauseaHandler = this.switchNauseaHandler.bind(this);\n        this.switchBowelMovementsHandler = this.switchBowelMovementsHandler.bind(this);\n        this.switchMotivationHandler = this.switchMotivationHandler.bind(this);\n        this.switchPainHandler = this.switchPainHandler.bind(this);\n        this.switchDizzinessHandler = this.switchDizzinessHandler.bind(this);\n        this.switchExhaustionHandler = this.switchExhaustionHandler.bind(this);\n        this.UpdateTracking = this.UpdateTracking.bind(this);\n        this.sleep = this.sleep.bind(this);\n    }\n\n    renderRedirect() {\n        if (this.state.redirectBack) {\n            console.log(\"renderRedirect Back\");\n            return <Redirect method=\"post\" to={\"/login\"}></Redirect>\n        }\n        if (this.state.redirectNext) {\n            console.log(\"renderRedirect Next\");\n            return <Redirect method=\"post\" to={\"/selectState\"}></Redirect>\n        }\n        if (this.state.redirectLogin) {\n            console.log(\"renderRedirect Login\");\n            return <Redirect method=\"post\" to={\"/login\"}></Redirect>\n        }\n    }\n\n    setRedirect() {\n        console.log(\"setRedirect\");\n        this.setState({\n            redirect: true\n        })\n    }\n\n    //this function is for getting user data from server for an existing user in sessionStorage\n    async getStoredUser(id) {\n        console.log(\"getStoredUser for \" + id);\n        //await fetch('http://localhost:4000/fetch', {\n        await fetch('fetch', {    \n            method: \"post\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                UserId: id\n            })\n        }).then(response => {\n            return response.json();\n        }).then((data) => {\n            console.log(\"Setting State\");\n            if (data !== undefined) {\n                this.setState({\n                    GeneralFeeling: data.TrackingGeneralFeeling,\n                    Appetite: data.TrackingAppetite,\n                    Nausea: data.TrackingNausea,\n                    BowelMovements: data.TrackingBowelMovements,\n                    Motivation: data.TrackingMotivation,\n                    Pain: data.TrackingPain,\n                    Dizziness: data.TrackingDizziness,\n                    Exhaustion: data.TrackingExhaustion,\n                    UserId: data._id\n                });\n                console.log(\"Symptoms - got data from session for UserId: \" + data._id);\n            } else {\n                console.log(\"data returned from fetch undefined\");\n            }\n        }).catch(Error => {\n            console.log(\"Error with _ID from session: \" + Error)\n        })\n    }\n\n    //I've defined this function to create a forced delay after the UpdateTracking\n    //I've found that even though the record is updated it takes time for that update to \"register\" in the following page\n    sleep(milliseconds) {\n        var start = new Date().getTime();\n        for (var i = 0; i < 1e7; i++) {\n          if ((new Date().getTime() - start) > milliseconds){\n            break;\n          }\n        }\n    }\n\n    //this function is for setting the symptom tracking variables for the user in the DB\n    //once we pressed 'Next'\n    async UpdateTracking(id) {\n        console.log(\"UpdateTracking\");\n        //if the user didn't touch the buttons there is a chance some or all of the trackers\n        //will be undefined. these tests make sure that if a tracker is undefined it is set as false\n        if(this.state.GeneralFeeling === undefined){this.setState({ GeneralFeeling: false })}\n        if(this.state.Appetite === undefined){this.setState({ Appetite: false })}\n        if(this.state.Nausea === undefined){this.setState({ Nausea: false })}\n        if(this.state.BowelMovements === undefined){this.setState({ BowelMovements: false })}\n        if(this.state.Motivation === undefined){this.setState({ Motivation: false })}\n        if(this.state.Pain === undefined){this.setState({ Pain: false })}\n        if(this.state.Dizziness === undefined){this.setState({ Dizziness: false })}\n        if(this.state.Exhaustion === undefined){this.setState({ Exhaustion: false })}\n        //await fetch('http://localhost:4000/get', {\n        await fetch('get', {    \n            method: \"put\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                UserId: id,\n                GeneralFeeling: this.state.GeneralFeeling,\n                Appetite: this.state.Appetite,\n                Nausea: this.state.Nausea,\n                BowelMovements: this.state.BowelMovements,\n                Motivation: this.state.Motivation,\n                Pain: this.state.Pain,\n                Dizziness: this.state.Dizziness,\n                Exhaustion: this.state.Exhaustion\n            })\n        }).then(response => {\n            console.log(\"UpdateTracking: \" + response.statusText);\n            //this.setState({ redirectNext: true });\n            //this.sleep(500);\n        }).catch(Error => {\n            console.log(\"Error with _ID from session: \" + Error)\n        })\n    }\n\n    //this is the initial check if we have a sessionStorage that holds a user\n    componentWillMount() {\n        //First we'll check if the sessionStorage has a user id saved\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        console.dir(userFromSession);\n        //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n        if (userFromSession != null) {\n            console.log(\"there is a user saved in this session: \" + userFromSession);\n            this.setState({ UserId: userFromSession });\n            this.getStoredUser(userFromSession);\n        }\n        //if I do not have sessionStorage then I redirect to the login page\n        else {\n            this.setState({ redirectLogin: true });\n            console.log(\"there is a NO user saved in this session\");\n        }\n    }\n\n\n    switchGeneralFeelingHandler() {\n        this.setState({ GeneralFeeling: !this.state.GeneralFeeling });\n        console.log(\"GeneralFeeling: \" + this.state.GeneralFeeling);\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        if (userFromSession != null) {\n            this.setState({ UserId: userFromSession });\n            this.UpdateTracking(userFromSession);\n        }\n    }\n\n    switchAppetiteHandler() {\n        this.setState({ Appetite: !this.state.Appetite });\n        console.log(\"Appetite: \" + this.state.Appetite);\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        if (userFromSession != null) {\n            this.setState({ UserId: userFromSession });\n            this.UpdateTracking(userFromSession);\n        }\n    }\n\n    switchNauseaHandler() {\n        this.setState({ Nausea: !this.state.Nausea });\n        console.log(\"Nausea: \" + this.state.Nausea);\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        if (userFromSession != null) {\n            this.setState({ UserId: userFromSession });\n            this.UpdateTracking(userFromSession);\n        }\n    }\n\n    switchBowelMovementsHandler() {\n        this.setState({ BowelMovements: !this.state.BowelMovements });\n        console.log(\"BowelMovements: \" + this.state.BowelMovements);\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        if (userFromSession != null) {\n            this.setState({ UserId: userFromSession });\n            this.UpdateTracking(userFromSession);\n        }\n    }\n\n    switchMotivationHandler() {\n        this.setState({ Motivation: !this.state.Motivation });\n        console.log(\"Motivation: \" + this.state.Motivation);\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        if (userFromSession != null) {\n            this.setState({ UserId: userFromSession });\n            this.UpdateTracking(userFromSession);\n        }\n    }\n\n    switchPainHandler() {\n        this.setState({ Pain: !this.state.Pain });\n        console.log(\"Pain: \" + this.state.Pain);\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        if (userFromSession != null) {\n            this.setState({ UserId: userFromSession });\n            this.UpdateTracking(userFromSession);\n        }\n    }\n\n    switchDizzinessHandler() {\n        this.setState({ Dizziness: !this.state.Dizziness });\n        console.log(\"Dizziness: \" + this.state.Dizziness);\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        if (userFromSession != null) {\n            this.setState({ UserId: userFromSession });\n            this.UpdateTracking(userFromSession);\n        }\n    }\n\n    switchExhaustionHandler() {\n        this.setState({ Exhaustion: !this.state.Exhaustion });\n        console.log(\"Exhaustion: \" + this.state.Exhaustion);\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        if (userFromSession != null) {\n            this.setState({ UserId: userFromSession });\n            this.UpdateTracking(userFromSession);\n        }\n    }\n\n    BackHandler() {\n        this.setState({ redirectBack: true });\n    }\n\n    NextHandler() {\n        //Used to be that I handeled the change in symptoms only when the 'next' button was pressed\n        //Tal (My teacher) recomended I update the user EVERY TIME A TOGGLE IS SWITCHED\n        //without waiting for the button. I moved the UpdateTracking call to each of the toggle functions\n\n        // console.log(this.GeneralFeeling + \" \" + this.Appetite);\n        // let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        // console.dir(userFromSession);\n        // //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n        // if (userFromSession != null) {\n        //     this.setState({ UserId: userFromSession });\n        //     this.UpdateTracking(userFromSession);\n        // }\n        this.setState({ redirectNext: true });\n    }\n\n    render() {\n        //console.log(\"render\");\n        return (\n            <div className=\"pageContent\" id=\"pageContent\">\n                <div className=\"pageTopText\">I would like to track:</div>\n                <div className=\"trackBox\">\n                    <Toggle toggleName={\"General Feeling\"} checked={this.state.GeneralFeeling} toggleChecked={this.switchGeneralFeelingHandler} />\n                    <Toggle toggleName={\"Appetite\"} checked={this.state.Appetite} toggleChecked={this.switchAppetiteHandler} />\n                    <Toggle toggleName={\"Nausea\"} checked={this.state.Nausea} toggleChecked={this.switchNauseaHandler} />\n                    <Toggle toggleName={\"Bowel Movements\"} checked={this.state.BowelMovements} toggleChecked={this.switchBowelMovementsHandler} />\n                    <Toggle toggleName={\"Motivation\"} checked={this.state.Motivation} toggleChecked={this.switchMotivationHandler} />\n                    <Toggle toggleName={\"Pain\"} checked={this.state.Pain} toggleChecked={this.switchPainHandler} />\n                    <Toggle toggleName={\"Dizziness\"} checked={this.state.Dizziness} toggleChecked={this.switchDizzinessHandler} />\n                    <Toggle toggleName={\"Exhaustion\"} checked={this.state.Exhaustion} toggleChecked={this.switchExhaustionHandler} />\n                </div>\n                <div className=\"buttonArea\">\n                    <input id=\"button\" className=\"button buttonBack\" type=\"submit\" name=\"button\" value=\"Back\"\n                        onClick={(e) => this.BackHandler()} />\n                    <input id=\"button\" className=\"button buttonNext\" type=\"submit\" name=\"button\" value=\"Next\"\n                        onClick={(e) => this.NextHandler()} />\n                    {this.renderRedirect()}\n                </div>\n            </div>\n        )  \n    }\n}\n\nexport default Symptoms\n\n\n","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\n/*To enable Pan and Zoom that are defined in chartjs-plugin-zoom*/\nimport * as zoom from 'chartjs-plugin-zoom';\n// import { finished } from 'stream';\n\nvar Chart = require(\"chart.js\");\n\nclass Graph extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\textraText: '',\n\t\t\tTrackGeneralFeeling: false,\n\t\t\tTrackAppetite: false,\n\t\t\tTrackNausea: false,\n\t\t\tTrackBowelMovements: false,\n\t\t\tTrackMotivation: false,\n\t\t\tTrackPain: false,\n\t\t\tTrackDizziness: false,\n\t\t\tTrackExhaustion: false,\n\t\t\tredirectLogin: false,\n\t\t\tUserId: ''\n\t\t};\n\n\t\t//this binding is needed to make 'this' work in the callback \n\t\tthis.renderExtraText = this.renderExtraText.bind(this);\n\t\tthis.renderRedirect = this.renderRedirect.bind(this);\n\t}\n\n\t//this will redraw the page WITH the added text at the bottom\n\trenderExtraText = (array, index, adedText) => {\n\t\tthis.setState({ extraText: adedText + array[index] });\n\t}\n\n\tcomponentDidMount() {\n\t\tlet currentComponent = this;\n\t\t//This is where we define local variables that will be familiar to all functions\n\t\t//inside the componentDidMount functions\n\t\t//We start by defining 'listners' that will later tell us if a certain dataset was marked or not\t\n\t\tlet GeneralFeelingIsMarked = false;\n\t\tlet AppetiteIsMarked = false;\n\t\tlet NauseaIsMarked = false;\n\t\tlet BowelMovementsIsMarked = false;\n\t\tlet MotivationIsMarked = false;\n\t\tlet PainIsMarked = false;\n\t\tlet DizzinessIsMarked = false;\n\t\tlet ExhaustionIsMarked = false;\n\n\t\tlet GeneralFeelingLastValue = 0;\n\t\tlet AppetiteLastValue = 0;\n\t\tlet NauseaLastValue = 0;\n\t\tlet BowelMovementsLastValue = 0;\n\t\tlet MotivationLastValue = 0;\n\t\tlet PainLastValue = 0;\n\t\tlet DizzinessLastValue = 0;\n\t\tlet ExhaustionLastValue = 0;\n\t\t//let conditionsLastValue = 0;\n\t\t//let treatmentsLastValue = 0;\n\n\t\tlet currDateCombo = \"\";\n\t\tlet currDate = \"\";\n\n\t\t//this will be the list of labels for the X Axis of the graph\n\t\tlet myLabels = [];\n\n\t\t//these are the various data sets. \n\t\t//Each set has the data on it's state and the text written at that time.\n\t\tlet myDataGeneralFeeling = [];\n\t\tlet GeneralFeelingTexts = [];\n\t\tlet myDataAppetite = [];\n\t\tlet AppetiteTexts = [];\n\t\tlet myDataNausea = [];\n\t\tlet NauseaTexts = [];\n\t\tlet myDataBowelMovements = [];\n\t\tlet BowelMovementsTexts = [];\n\t\tlet myDataMotivation = [];\n\t\tlet MotivationTexts = [];\n\t\tlet myDataPain = [];\n\t\tlet PainTexts = [];\n\t\tlet myDataDizziness = [];\n\t\tlet DizzinessTexts = [];\n\t\tlet myDataExhaustion = [];\n\t\tlet ExhaustionTexts = [];\n\n\t\tconst node = this.node;\n\n\t\t//Here are a bunch of Functions that I'll be using:\n\t\t//function to convert string in the format of yyyy-mm-dd into a valid date object\n\t\tfunction toDate(dateStr) {\n\t\t\treturn new Date(dateStr)\n\t\t}\n\t\t//function to get the number of days differentiating two dates given as strings of format dd/mm/yyyy\n\t\tfunction daysdifference(date1, date2) {\n\t\t\t// The number of milliseconds in one day\n\t\t\tvar ONEDAY = 1000 * 60 * 60 * 24;\n\t\t\t// Convert both dates to milliseconds\n\t\t\tvar date1_ms = toDate(date1).getTime();\n\t\t\tvar date2_ms = toDate(date2).getTime();\n\t\t\t// Calculate the difference in milliseconds\n\t\t\tvar difference_ms = Math.abs(date1_ms - date2_ms);\n\n\t\t\t// Convert back to days and return\n\t\t\treturn Math.round(difference_ms / ONEDAY);\n\t\t}\n\n\t\t//function to fetch the information about the user from the DB\n\t\tasync function fetchUserData(userId) {\n\t\t\t//let URL = \"http://localhost:4000/fetch/\" + userId;\n\t\t\tlet URL = \"fetch/\" + userId;\n\t\t\tawait fetch(URL).then(response => {\n\t\t\t\treturn response.json();\n\t\t\t}).then(data => {\n\t\t\t\t//This is where we start to break down the data we got about the user from the DB \n\t\t\t\t//into seperate data sets (like 'pain', 'general feeling' etc')\n\n\t\t\t\t//This loop goes over every document in the DB that belongs to this user \n\t\t\t\t//and seperates each document to it's proper data set\n\t\t\t\tlet lng = data.length;\n\t\t\t\t//this makes sure we have some value here even if we didn't get back any record from the DB\n\t\t\t\t//if(lng === undefined) {lng = 0}; \n\t\t\t\tfor (var i = 0; i < lng; i++) {\n\t\t\t\t\tlet dateTimeCombo = toDate(data[i].date).toLocaleString(undefined, {\n\t\t\t\t\t\tday: 'numeric',\n\t\t\t\t\t\tmonth: 'short',\n\t\t\t\t\t\tyear: '2-digit',\n\t\t\t\t\t}) + \".\" + data[i].check;\n\t\t\t\t\tif (myLabels.includes(dateTimeCombo) === false) {\n\t\t\t\t\t\twhile (daysdifference(data[i].date, currDate) > 1) {\n\t\t\t\t\t\t\tlet tempDate = new Date(toDate(currDate));\n\t\t\t\t\t\t\ttempDate.setDate(tempDate.getDate() + 1);\n\t\t\t\t\t\t\t//this currDate works with a date string of yyyy-mm-dd\n\t\t\t\t\t\t\tcurrDate = tempDate.toLocaleString(undefined, {\n\t\t\t\t\t\t\t\tday: 'numeric',\n\t\t\t\t\t\t\t\tmonth: 'short',\n\t\t\t\t\t\t\t\tyear: '2-digit',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tmyLabels.push(currDate);\n\t\t\t\t\t\t\tif (GeneralFeelingIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataGeneralFeeling.push(GeneralFeelingLastValue);\n\t\t\t\t\t\t\t\tGeneralFeelingTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (AppetiteIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataAppetite.push(AppetiteLastValue);\n\t\t\t\t\t\t\t\tAppetiteTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (NauseaIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataNausea.push(NauseaLastValue);\n\t\t\t\t\t\t\t\tNauseaTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (BowelMovementsIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataBowelMovements.push(BowelMovementsLastValue);\n\t\t\t\t\t\t\t\tBowelMovementsTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (MotivationIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataMotivation.push(MotivationLastValue);\n\t\t\t\t\t\t\t\tMotivationTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (PainIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataPain.push(PainLastValue);\n\t\t\t\t\t\t\t\tPainTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (DizzinessIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataDizziness.push(DizzinessLastValue);\n\t\t\t\t\t\t\t\tDizzinessTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (ExhaustionIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataExhaustion.push(ExhaustionLastValue);\n\t\t\t\t\t\t\t\tExhaustionTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tGeneralFeelingIsMarked = false;\n\t\t\t\t\t\t\tAppetiteIsMarked = false;\n\t\t\t\t\t\t\tNauseaIsMarked = false;\n\t\t\t\t\t\t\tBowelMovementsIsMarked = false;\n\t\t\t\t\t\t\tMotivationIsMarked = false;\n\t\t\t\t\t\t\tPainIsMarked = false;\n\t\t\t\t\t\t\tDizzinessIsMarked = false;\n\t\t\t\t\t\t\tExhaustionIsMarked = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmyLabels.push(dateTimeCombo);\n\t\t\t\t\t\tif (currDateCombo !== dateTimeCombo && currDateCombo !== \"\") {\n\t\t\t\t\t\t\tif (GeneralFeelingIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataGeneralFeeling.push(GeneralFeelingLastValue);\n\t\t\t\t\t\t\t\tGeneralFeelingTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (AppetiteIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataAppetite.push(AppetiteLastValue);\n\t\t\t\t\t\t\t\tAppetiteTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (NauseaIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataNausea.push(NauseaLastValue);\n\t\t\t\t\t\t\t\tNauseaTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (BowelMovementsIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataBowelMovements.push(BowelMovementsLastValue);\n\t\t\t\t\t\t\t\tBowelMovementsTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (MotivationIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataMotivation.push(MotivationLastValue);\n\t\t\t\t\t\t\t\tMotivationTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (PainIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataPain.push(PainLastValue);\n\t\t\t\t\t\t\t\tPainTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (DizzinessIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataDizziness.push(DizzinessLastValue);\n\t\t\t\t\t\t\t\tDizzinessTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (ExhaustionIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataExhaustion.push(ExhaustionLastValue);\n\t\t\t\t\t\t\t\tExhaustionTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrDate = data[i].date;\n\t\t\t\t\t\tcurrDateCombo = dateTimeCombo;\n\t\t\t\t\t\tGeneralFeelingIsMarked = false;\n\t\t\t\t\t\tAppetiteIsMarked = false;\n\t\t\t\t\t\tNauseaIsMarked = false;\n\t\t\t\t\t\tBowelMovementsIsMarked = false;\n\t\t\t\t\t\tMotivationIsMarked = false;\n\t\t\t\t\t\tPainIsMarked = false;\n\t\t\t\t\t\tDizzinessIsMarked = false;\n\t\t\t\t\t\tExhaustionIsMarked = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'GeneralFeeling') {\n\t\t\t\t\t\tmyDataGeneralFeeling.push(data[i].state);\n\t\t\t\t\t\tGeneralFeelingTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tGeneralFeelingLastValue = data[i].state;\n\t\t\t\t\t\tGeneralFeelingIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Appetite') {\n\t\t\t\t\t\tmyDataAppetite.push(data[i].state);\n\t\t\t\t\t\tAppetiteTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tAppetiteLastValue = data[i].state;\n\t\t\t\t\t\tAppetiteIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Nausea') {\n\t\t\t\t\t\tmyDataNausea.push(data[i].state);\n\t\t\t\t\t\tNauseaTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tNauseaLastValue = data[i].state;\n\t\t\t\t\t\tNauseaIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'BowelMovements') {\n\t\t\t\t\t\tmyDataBowelMovements.push(data[i].state);\n\t\t\t\t\t\tBowelMovementsTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tBowelMovementsLastValue = data[i].state;\n\t\t\t\t\t\tBowelMovementsIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Motivation') {\n\t\t\t\t\t\tmyDataMotivation.push(data[i].state);\n\t\t\t\t\t\tMotivationTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tMotivationLastValue = data[i].state;\n\t\t\t\t\t\tMotivationIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Pain') {\n\t\t\t\t\t\tmyDataPain.push(data[i].state);\n\t\t\t\t\t\tPainTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tPainLastValue = data[i].state;\n\t\t\t\t\t\tPainIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Dizziness') {\n\t\t\t\t\t\tmyDataDizziness.push(data[i].state);\n\t\t\t\t\t\tDizzinessTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tDizzinessLastValue = data[i].state;\n\t\t\t\t\t\tDizzinessIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Exhaustion') {\n\t\t\t\t\t\tmyDataExhaustion.push(data[i].state);\n\t\t\t\t\t\tExhaustionTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tExhaustionLastValue = data[i].state;\n\t\t\t\t\t\tExhaustionIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (GeneralFeelingIsMarked === false) {\n\t\t\t\t\tmyDataGeneralFeeling.push(GeneralFeelingLastValue);\n\t\t\t\t\tGeneralFeelingTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (AppetiteIsMarked === false) {\n\t\t\t\t\tmyDataAppetite.push(AppetiteLastValue);\n\t\t\t\t\tAppetiteTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (NauseaIsMarked === false) {\n\t\t\t\t\tmyDataNausea.push(NauseaLastValue);\n\t\t\t\t\tNauseaTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (BowelMovementsIsMarked === false) {\n\t\t\t\t\tmyDataBowelMovements.push(BowelMovementsLastValue);\n\t\t\t\t\tBowelMovementsTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (MotivationIsMarked === false) {\n\t\t\t\t\tmyDataMotivation.push(MotivationLastValue);\n\t\t\t\t\tMotivationTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (PainIsMarked === false) {\n\t\t\t\t\tmyDataPain.push(PainLastValue);\n\t\t\t\t\tPainTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (DizzinessIsMarked === false) {\n\t\t\t\t\tmyDataDizziness.push(DizzinessLastValue);\n\t\t\t\t\tDizzinessTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (ExhaustionIsMarked === false) {\n\t\t\t\t\tmyDataExhaustion.push(ExhaustionLastValue);\n\t\t\t\t\tExhaustionTexts.push(\" \");\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t//this function is for getting user data from server for an existing user in sessionStorage\n\t\tasync function getStoredUser(id) {\n\t\t\tconsole.log(\"getStoredUser\");\n\t\t\t//await fetch('http://localhost:4000/fetch', {\n\t\t\tawait fetch('fetch', {  \n\t\t\t\tmethod: \"post\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tUserId: id\n\t\t\t\t})\n\t\t\t}).then(response => {\n\t\t\t\treturn response.json();\n\t\t\t}).then((data) => {\n\t\t\t\tconsole.log(\"Setting State\");\n\t\t\t\tif (data !== undefined) {\n\t\t\t\t\tcurrentComponent.setState({\n\t\t\t\t\t\tTrackGeneralFeeling: data.TrackingGeneralFeeling,\n\t\t\t\t\t\tTrackAppetite: data.TrackingAppetite,\n\t\t\t\t\t\tTrackNausea: data.TrackingNausea,\n\t\t\t\t\t\tTrackBowelMovements: data.TrackingBowelMovements,\n\t\t\t\t\t\tTrackMotivation: data.TrackingMotivation,\n\t\t\t\t\t\tTrackPain: data.TrackingPain,\n\t\t\t\t\t\tTrackDizziness: data.TrackingDizziness,\n\t\t\t\t\t\tTrackExhaustion: data.TrackingExhaustion,\n\t\t\t\t\t\tUserId: data._id,\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(\"Getting user data: \" + currentComponent.state.UserId );\n\t\t\t\t}\n\t\t\t}).catch(Error => {\n\t\t\t\tconsole.log(\"Error with _ID from session: \" + Error)\n\t\t\t})\n\t\t}\n\n\n\t\t//This function uses the variables defined in function fetchUserData \n\t\t//to fill out the data sets in the Graph component\n\t\tfunction fillChartData() {\n\t\t\t//Here is where we fill in the datasets based on what the user has\n\t\t\t//currently defined\n\t\t\tlet datasetsData = [];\n\t\t\tlet datasetsText = \"\";\n\t\t\tif (currentComponent.state.TrackGeneralFeeling) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'General Feeling', data: myDataGeneralFeeling, backgroundColor: ['#e6beff'],\n\t\t\t\t\tborderColor: '#e6beff', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tif (currentComponent.state.TrackAppetite) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Appetite', data: myDataAppetite, backgroundColor: ['#911eb4'],\n\t\t\t\t\tborderColor: '#911eb4', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tif (currentComponent.state.TrackNausea) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Nausea', data: myDataNausea, backgroundColor: ['#808000'],\n\t\t\t\t\tborderColor: '#808000', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\t\t\t\t\t\t\n\t\t\tif (currentComponent.state.TrackBowelMovements) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Bowel Movements', data: myDataBowelMovements, backgroundColor: ['#9A6324'],\n\t\t\t\t\tborderColor: '#9A6324', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tif (currentComponent.state.TrackMotivation) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Motivation', data: myDataMotivation, backgroundColor: ['#4363d8'],\n\t\t\t\t\tborderColor: '#4363d8', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\t\t\t\t\t\t\t\n\t\t\tif (currentComponent.state.TrackPain) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Pain', data: myDataPain, backgroundColor: ['#42d4f4'],\n\t\t\t\t\tborderColor: '#42d4f4', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tif (currentComponent.state.TrackDizziness) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Dizziness', data: myDataDizziness, backgroundColor: ['#469990'],\n\t\t\t\t\tborderColor: '#469990', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\t\t\t\n\t\t\tif (currentComponent.state.TrackExhaustion) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Exhaustion', data: myDataExhaustion, backgroundColor: ['#000075'],\n\t\t\t\t\tborderColor: '#000075', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tlet myChart = new Chart(node, {\n\t\t\t\ttype: \"line\",\n\t\t\t\tdata: {\n\t\t\t\t\tlabels: myLabels,\n\t\t\t\t\tdatasets: datasetsData\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\tlegend: { position: \"top\", labels: { boxWidth: 10 } },\n\t\t\t\t\t'onClick': (evt, item) => {\n\t\t\t\t\t\tvar thisPoint = myChart.getElementAtEvent(evt)[0];\n\t\t\t\t\t\tif (thisPoint !== undefined) {\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"General Feeling\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your General Feeling you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(GeneralFeelingTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Appetite\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Appetite you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(AppetiteTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Nausea\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Nausea you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(NauseaTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"BowelMovements\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your BowelMovements you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(BowelMovementsTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Motivation\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Motivation you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(MotivationTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Pain\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Pain you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(PainTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Dizziness\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Dizziness you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(DizzinessTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Exhaustion\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Exhaustion you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(ExhaustionTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tscales: {\n\t\t\t\t\t\tscaleOverride: true,\n\t\t\t\t\t\tscaleSteps: 1,\n\t\t\t\t\t\tscaleStepWidth: 1,\n\t\t\t\t\t\tscaleStartValue: 0,\n\t\t\t\t\t\tyAxes: [{\n\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\t\tmax: 5,\n\t\t\t\t\t\t\t\tmin: 1,\n\t\t\t\t\t\t\t\tstepSize: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}],\n\t\t\t\t\t\txAxes: [{\n\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\tminRotation: 0,\n\t\t\t\t\t\t\t\tmaxRotation: 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}]\n\t\t\t\t\t},\n\t\t\t\t\t// Container for pan options\n\t\t\t\t\tpan: {\n\t\t\t\t\t\t// Boolean to enable panning\n\t\t\t\t\t\tenabled: true,\n\n\t\t\t\t\t\t// Panning directions. Remove the appropriate direction to disable \n\t\t\t\t\t\t// Eg. 'y' would only allow panning in the y direction\n\t\t\t\t\t\tmode: 'x'\n\t\t\t\t\t},\n\n\t\t\t\t\t// Container for zoom options\n\t\t\t\t\tzoom: {\n\t\t\t\t\t\t// Boolean to enable zooming\n\t\t\t\t\t\tenabled: true,\n\n\t\t\t\t\t\t// Zooming directions. Remove the appropriate direction to disable \n\t\t\t\t\t\t// Eg. 'y' would only allow zooming in the y direction\n\t\t\t\t\t\tmode: 'x',\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t//This is where it all comes together.\n\t\t//We run the functions one after the other in order:\n\t\t//first we get the user information - getStoredUser\n\t\t//then all the user records - fetchUserData\n\t\tasync function commitGraph(UserId) {\n\t\t\tawait getStoredUser(UserId);\n\t\t\tawait fetchUserData(UserId);\n\t\t\tfillChartData();\n\t\t}\n\n\t\tlet userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n\t\tconsole.dir(userFromSession);\n\t\t//If I have a valid sessionStorage then I start all calls from commitGraph \n\t\tif (userFromSession != null) {\n\t\t\tconsole.log(\"there is a user saved in this session\");\n\t\t\tconsole.log(\"call data for \" + userFromSession);\n\t\t\tcommitGraph(userFromSession);\n\t\t}\n\t\telse {\n\t\t\tthis.setState({ redirectLogin: true });\n\t\t\tconsole.log(\"there is a NO user saved in this session\");\n\t\t}\n\n\t\t//Now that the Chart is full of Data we can move on to the rendering\n\t}\n\n\trenderRedirect() {\n\t\tif (this.state.redirectLogin) {\n\t\t  console.log(\"renderRedirect Login\");\n\t\t  return <Redirect method=\"post\" to={\"/login\"}></Redirect>\n\t\t}\n\t  }\t\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"pageContent\" id=\"pageContent\">\n\t\t\t\t<canvas className=\"graphContent\"\n\t\t\t\t\t// style={{ width: 300, height: 300 }}\n\t\t\t\t\tref={node => (this.node = node)}\n\t\t\t\t/>\n\t\t\t\t<div className=\"extraText\">\n\t\t\t\t\t{this.state.extraText}\n\t\t\t\t</div>\n\t\t\t\t{this.renderRedirect()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Graph;","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nclass RadioContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //these variables tell me what symptoms I'm tracking\n      TrackGeneralFeeling: false,\n      TrackAppetite: false,\n      TrackNausea: false,\n      TrackBowelMovements: false,\n      TrackMotivation: false,\n      TrackPain: false,\n      TrackDizziness: false,\n      TrackExhaustion: false,\n      //these variables tell me what is the state of each symptom\n      GeneralFeeling: \"3\",\n      Appetite: \"3\",\n      Nausea: \"3\",\n      BowelMovements: \"3\",\n      Motivation: \"3\",\n      Pain: \"3\",\n      Dizziness: \"3\",\n      Exhaustion: \"3\",\n      //these variables are used in the creation of a new symptom tracking record\n      FirstName: '',\n      LastName: '',\n      UserId: '',\n      check: '',\n      currentDate: '',\n      currentTime: '',\n      conditions: '', \n      treatments: '',\n      //these variables are used in the redirection assosiated with the buttons at thye bottom of the page\n      redirectBack: false,\n      redirectNext: false,\n      redirectLogin: false\n    }\n    this.renderRedirect = this.renderRedirect.bind(this);\n    this.setRedirect = this.setRedirect.bind(this);\n    this.BackHandler = this.BackHandler.bind(this);\n    this.NextHandler = this.NextHandler.bind(this);\n    this.setGeneralFeeling = this.setGeneralFeeling.bind(this);\n    this.setAppetite = this.setAppetite.bind(this);\n    this.setNausea = this.setNausea.bind(this);\n    this.setBowelMovements = this.setBowelMovements.bind(this);\n    this.setMotivation = this.setMotivation.bind(this);\n    this.setPain = this.setPain.bind(this);\n    this.setDizziness = this.setDizziness.bind(this);\n    this.setExhaustion = this.setExhaustion.bind(this);\n    this.getStoredUser = this.getStoredUser.bind(this);\n    this.getCurrentDate = this.getCurrentDate.bind(this);\n    this.getCurrentTime = this.getCurrentTime.bind(this);\n  }\n\n  getCurrentDate(separator = '-') {\n\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date}`;\n  }\n\n  getCurrentTime(separator = ':') {\n\n    let newTime = new Date();\n    let hours = newTime.getHours();\n    let minutes = newTime.getMinutes();\n\n    return `${hours}${separator}${minutes}`;\n  }\n\n  //this function is for getting user data from server for an existing user in sessionStorage\n  async getStoredUser(id) {\n    console.log(\"getStoredUser\");\n    //await fetch('http://localhost:4000/fetch', {\n    await fetch('fetch', {  \n      method: \"post\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: id\n      })\n    }).then(response => {\n      return response.json();\n    }).then((data) => {\n      console.log(\"Setting State\");\n      if (data !== undefined) {\n        this.setState({\n          TrackGeneralFeeling: data.TrackingGeneralFeeling,\n          TrackAppetite: data.TrackingAppetite,\n          TrackNausea: data.TrackingNausea,\n          TrackBowelMovements: data.TrackingBowelMovements,\n          TrackMotivation: data.TrackingMotivation,\n          TrackPain: data.TrackingPain,\n          TrackDizziness: data.TrackingDizziness,\n          TrackExhaustion: data.TrackingExhaustion,\n          UserId: data._id,\n          FirstName: data.FirstName,\n          LastName: data.LastName,\n          check: '',\n          conditions: data.conditions, \n          treatments: data.treatments,\n          currentDate: this.getCurrentDate(),\n          currentTime: this.getCurrentTime()\n        });\n        console.log(\"Getting user data: \" + this.state.FirstName + \" \" + this.state.LastName + \" \" + this.state.currentDate + \" \" + this.state.currentTime);\n      }\n    }).catch(Error => {\n      console.log(\"Error with _ID from session: \" + Error)\n    })\n  }\n\n  setGeneralFeeling(event) {\n    //console.log(\"GeneralFeeling: \" + event.target.value);\n    this.setState({ GeneralFeeling: event.target.value })\n  }\n\n  setAppetite(event) {\n    //console.log(\"Appetite: \" + event.target.value);\n    this.setState({ Appetite: event.target.value })\n  }\n\n  setNausea(event) {\n    //console.log(\"Nausea: \" + event.target.value);\n    this.setState({ Nausea: event.target.value })\n  }\n\n  setBowelMovements(event) {\n    //console.log(\"BowelMovements: \" + event.target.value);\n    this.setState({ BowelMovements: event.target.value })\n  }\n\n  setMotivation(event) {\n    //console.log(\"Motivation: \" + event.target.value);\n    this.setState({ Motivation: event.target.value })\n  }\n\n  setPain(event) {\n    //console.log(\"Pain: \" + event.target.value);\n    this.setState({ Pain: event.target.value })\n  }\n\n  setDizziness(event) {\n    //console.log(\"Dizziness: \" + event.target.value);\n    this.setState({ Dizziness: event.target.value })\n  }\n\n  setExhaustion(event) {\n    //console.log(\"Exhaustion: \" + event.target.value);\n    this.setState({ Exhaustion: event.target.value })\n  }\n\n  //this is the initial check if we have a sessionStorage that holds a user\n  async componentWillMount() {\n    //First we'll check if the sessionStorage has a user id saved\n    let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n    console.dir(userFromSession);\n    //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n    if (userFromSession != null) {\n      console.log(\"there is a user saved in this session\");\n      this.state.UserId = userFromSession;\n      await this.getStoredUser(userFromSession);\n    }\n    //if I do not have sessionStorage then I redirect to the login page\n    else {\n      this.setState({ redirectLogin: true });\n      console.log(\"there is a NO user saved in this session\");\n    }\n  }\n\n  //this function is for setting the symptom tracking variables for the user in the DB\n  //once we pressed 'Next'\n  async WriteRecord(id) {\n    console.log(\"Update Symptom State\");\n    //await fetch('http://localhost:4000/set', {\n    await fetch('set', {  \n      method: \"put\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: id,\n        TrackGeneralFeeling: this.state.TrackGeneralFeeling,\n        TrackAppetite: this.state.TrackAppetite,\n        TrackNausea: this.state.TrackNausea,\n        TrackBowelMovements: this.state.TrackBowelMovements,\n        TrackMotivation: this.state.TrackMotivation,\n        TrackPain: this.state.TrackPain,\n        TrackDizziness: this.state.TrackDizziness,\n        TrackExhaustion: this.state.TrackExhaustion,\n        GeneralFeeling: this.state.GeneralFeeling,\n        Appetite: this.state.Appetite,\n        Nausea: this.state.Nausea,\n        BowelMovements: this.state.BowelMovements,\n        Motivation: this.state.Motivation,\n        Pain: this.state.Pain,\n        Dizziness: this.state.Dizziness,\n        Exhaustion: this.state.Exhaustion,\n        FirstName: this.state.FirstName,\n        LastName: this.state.LastName,\n        check: '',\n        currentDate: this.state.currentDate,\n        currentTime: this.state.currentTime,\n        conditions: this.state.conditions, \n        treatments: this.state.treatments\n      })\n      // ,\n      // success: (res) => {\n      //   console.log(res);\n      //   console.log(\"this is a WriteRecord success\");\n      // }\n    }).then(response => {\n      console.log(\"WriteRecord success: \" + response.statusText);\n      //this.setState({ redirectNext: true });\n    }).catch(Error => {\n      console.log(\"Error with _ID from session: \" + Error)\n    })\n  }\n\n  BackHandler() {\n    this.setState({ redirectBack: true });\n  }\n\n  NextHandler() {\n    console.log(this.GeneralFeeling + \" \" + this.Appetite);\n    let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n    console.dir(userFromSession);\n    //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n    if (userFromSession != null) {\n      this.setState({ UserId: userFromSession });\n      this.WriteRecord(userFromSession);\n    }\n    this.setState({ redirectNext: true });\n  }\n\n  renderRedirect() {\n    if (this.state.redirectBack) {\n      console.log(\"renderRedirect Back\");\n      return <Redirect method=\"post\" to={\"/tracksymptoms\"}></Redirect>\n    }\n    if (this.state.redirectNext) {\n      console.log(\"renderRedirect Next\");\n      return <Redirect method=\"post\" to={\"/addText\"}></Redirect>\n    }\n    if (this.state.redirectLogin) {\n      console.log(\"renderRedirect Login\");\n      return <Redirect method=\"post\" to={\"/login\"}></Redirect>\n    }\n  }\n\n  setRedirect() {\n    console.log(\"setRedirect\");\n    this.setState({\n      redirect: true\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"pageContent\" id=\"pageContent\">\n        <React.Fragment>\n          <div onChange={event => this.setGeneralFeeling(event)} style={{ display: this.state.TrackGeneralFeeling ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your General Feeling </div><br />\n            <label><input type='radio' value='1' name='GeneralFeeling' checked={this.state.GeneralFeeling === '1'} onChange={this.setGeneralFeeling}  style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Feeling level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='GeneralFeeling' checked={this.state.GeneralFeeling === '2'} onChange={this.setGeneralFeeling} style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Feeling level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='GeneralFeeling' checked={this.state.GeneralFeeling === '3'} onChange={this.setGeneralFeeling} style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Feeling level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='GeneralFeeling' checked={this.state.GeneralFeeling === '4'} onChange={this.setGeneralFeeling} style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Feeling level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='GeneralFeeling' checked={this.state.GeneralFeeling === '5'} onChange={this.setGeneralFeeling} style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Feeling level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setAppetite(event)} style={{ display: this.state.TrackAppetite ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Appetite </div><br />\n            <label><input type='radio' value='1' name='Appetite' checked={this.state.Appetite === '1'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Appetite level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Appetite' checked={this.state.Appetite === '2'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Appetite level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Appetite' checked={this.state.Appetite === '3'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Appetite level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Appetite' checked={this.state.Appetite === '4'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Appetite level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Appetite' checked={this.state.Appetite === '5'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Appetite level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setNausea(event)} style={{ display: this.state.TrackNausea ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Nausea </div><br />\n            <label><input type='radio' value='1' name='Nausea' checked={this.state.Nausea === '1'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Nausea level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Nausea' checked={this.state.Nausea === '2'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Nausea level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Nausea' checked={this.state.Nausea === '3'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Nausea level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Nausea' checked={this.state.Nausea === '4'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Nausea level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Nausea' checked={this.state.Nausea === '5'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Nausea level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setBowelMovements(event)} style={{ display: this.state.TrackBowelMovements ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Bowel Movements </div><br />\n            <label><input type='radio' value='1' name='BowelMovements' checked={this.state.BowelMovements === '1'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Bowel Movements level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='BowelMovements' checked={this.state.BowelMovements === '2'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Bowel Movements level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='BowelMovements' checked={this.state.BowelMovements === '3'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Bowel Movements level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='BowelMovements' checked={this.state.BowelMovements === '4'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Bowel Movements level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='BowelMovements' checked={this.state.BowelMovements === '5'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Bowel Movements level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setMotivation(event)} style={{ display: this.state.TrackMotivation ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Motivation </div><br />\n            <label><input type='radio' value='1' name='Motivation' checked={this.state.Motivation === '1'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Motivation level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Motivation' checked={this.state.Motivation === '2'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Motivation level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Motivation' checked={this.state.Motivation === '3'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Motivation level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Motivation' checked={this.state.Motivation === '4'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Motivation level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Motivation' checked={this.state.Motivation === '5'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Motivation level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setPain(event)} style={{ display: this.state.TrackPain ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Pain </div><br />\n            <label><input type='radio' value='1' name='Pain' checked={this.state.Pain === '1'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Pain level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Pain' checked={this.state.Pain === '2'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Pain level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Pain' checked={this.state.Pain === '3'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Pain level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Pain' checked={this.state.Pain === '4'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Pain level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Pain' checked={this.state.Pain === '5'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Pain level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setDizziness(event)} style={{ display: this.state.TrackDizziness ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Dizziness </div><br />\n            <label><input type='radio' value='1' name='Dizziness' checked={this.state.Dizziness === '1'} onChange={this.setDizziness} style={{ display: 'none' }}/>\n              <img src={(this.state.Dizziness === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Dizziness level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Dizziness' checked={this.state.Dizziness === '2'} onChange={this.setDizziness} style={{ display: 'none' }}/>\n              <img src={(this.state.Dizziness === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Dizziness level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Dizziness' checked={this.state.Dizziness === '3'} onChange={this.setDizziness} style={{ display: 'none' }}/>\n              <img src={(this.state.Dizziness === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Dizziness level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Dizziness' checked={this.state.Dizziness === '4'} onChange={this.setDizziness} style={{ display: 'none' }}/>\n              <img src={(this.state.Dizziness === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Dizziness level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Dizziness' checked={this.state.Dizziness === '5'} onChange={this.setDizziness}style={{ display: 'none' }} />\n              <img src={(this.state.Dizziness === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Dizziness level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setExhaustion(event)} style={{ display: this.state.TrackExhaustion ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Exhaustion </div><br />\n            <label><input type='radio' value='1' name='Exhaustion' checked={this.state.Exhaustion === '1'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Exhaustion level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Exhaustion' checked={this.state.Exhaustion === '2'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Exhaustion level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Exhaustion' checked={this.state.Exhaustion === '3'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Exhaustion level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Exhaustion' checked={this.state.Exhaustion === '4'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Exhaustion level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Exhaustion' checked={this.state.Exhaustion === '5'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Exhaustion level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div className=\"buttonArea\">\n            <input id=\"button\" className=\"button buttonBack\" type=\"submit\" name=\"button\" value=\"Back\"\n              onClick={(e) => this.BackHandler()} />\n            <input id=\"button\" className=\"button buttonNext\" type=\"submit\" name=\"button\" value=\"Next\"\n              onClick={(e) => this.NextHandler()} />\n            {this.renderRedirect()}\n          </div>\n        </React.Fragment>\n      </div>\n    )\n  }\n}\n\nexport default RadioContainer;","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nclass TextContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //these variables tell me what symptoms I'm tracking\n      TrackGeneralFeeling: false,\n      TrackAppetite: false,\n      TrackNausea: false,\n      TrackBowelMovements: false,\n      TrackMotivation: false,\n      TrackPain: false,\n      TrackDizziness: false,\n      TrackExhaustion: false,\n      //these variables are for the added text of each tracking record \n      GeneralFeelingText: '',\n      AppetiteText: '',\n      NauseaText: '',\n      BowelMovementsText: '',\n      MotivationText: '',\n      PainText: '',\n      DizzinessText: '',\n      ExhaustionText: '',      \n      //these variables are used in the redirection assosiated with the buttons at thye bottom of the page\n      UserId:'',\n      redirectBack: false,\n      redirectNext: false,\n      redirectLogin: false\n    }\n    this.renderRedirect = this.renderRedirect.bind(this);\n    this.setRedirect = this.setRedirect.bind(this);\n    this.BackHandler = this.BackHandler.bind(this);\n    this.NextHandler = this.NextHandler.bind(this);\n    this.setGeneralFeelingText = this.setGeneralFeelingText.bind(this);\n    this.setAppetiteText = this.setAppetiteText.bind(this);\n    this.setNauseaText = this.setNauseaText.bind(this);\n    this.setBowelMovementsText = this.setBowelMovementsText.bind(this);\n    this.setMotivationText = this.setMotivationText.bind(this);\n    this.setPainText = this.setPainText.bind(this);\n    this.setDizzinessText = this.setDizzinessText.bind(this);\n    this.setExhaustionText = this.setExhaustionText.bind(this);\n    this.getStoredUser = this.getStoredUser.bind(this);\n  }\n\n  //this function is for getting user data from server for an existing user in sessionStorage\n  async getStoredUser(id) {\n    console.log(\"getStoredUser\");\n    //await fetch('http://localhost:4000/fetch', {\n    await fetch('fetch', {  \n      method: \"post\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: id\n      })\n    }).then(response => {\n      return response.json();\n    }).then((data) => {\n      console.log(\"Setting State\");\n      if (data !== undefined) {\n        this.setState({\n          TrackGeneralFeeling: data.TrackingGeneralFeeling,\n          TrackAppetite: data.TrackingAppetite,\n          TrackNausea: data.TrackingNausea,\n          TrackBowelMovements: data.TrackingBowelMovements,\n          TrackMotivation: data.TrackingMotivation,\n          TrackPain: data.TrackingPain,\n          TrackDizziness: data.TrackingDizziness,\n          TrackExhaustion: data.TrackingExhaustion,\n          UserId: data._id,\n        });\n        console.log(\"got data from session: \" + data._id);\n      }\n    }).catch(Error => {\n      console.log(\"Error with _ID from session: \" + Error)\n    })\n  }\n\n  setGeneralFeelingText(event) {\n    this.setState({ GeneralFeelingText: event.target.value })\n  }\n\n  setAppetiteText(event) {\n    this.setState({ AppetiteText: event.target.value })\n  }\n\n  setNauseaText(event) {\n    this.setState({ NauseaText: event.target.value })\n  }\n\n  setBowelMovementsText(event) {\n    this.setState({ BowelMovementsText: event.target.value })\n  }\n\n  setMotivationText(event) {\n    this.setState({ MotivationText: event.target.value })\n  }\n\n  setPainText(event) {\n    this.setState({ PainText: event.target.value })\n  }\n\n  setDizzinessText(event) {\n    this.setState({ DizzinessText: event.target.value })\n  }\n\n  setExhaustionText(event) {\n    this.setState({ ExhaustionText: event.target.value })\n  }\n\n  //this is the initial check if we have a sessionStorage that holds a user\n  async componentWillMount() {\n    //First we'll check if the sessionStorage has a user id saved\n    let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n    console.dir(userFromSession);\n    //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n    if (userFromSession != null) {\n      console.log(\"there is a user saved in this session\");\n      this.state.UserId = userFromSession;\n      await this.getStoredUser(userFromSession);\n    }\n    //if I do not have sessionStorage then I redirect to the login page\n    else {\n      this.setState({ redirectLogin: true });\n      console.log(\"there is a NO user saved in this session\");\n    }\n  }\n\n  //this function is for adding the text to the last appropriate record in user records\n  //once we pressed 'Next'\n  async WriteRecord(id) {\n    console.log(\"Update Symptom State\");\n    //await fetch('http://localhost:4000/addText', {\n    await fetch('addText', {  \n      method: \"put\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: id,\n        TrackGeneralFeeling: this.state.TrackGeneralFeeling,\n        TrackAppetite: this.state.TrackAppetite,\n        TrackNausea: this.state.TrackNausea,\n        TrackBowelMovements: this.state.TrackBowelMovements,\n        TrackMotivation: this.state.TrackMotivation,\n        TrackPain: this.state.TrackPain,\n        TrackDizziness: this.state.TrackDizziness,\n        TrackExhaustion: this.state.TrackExhaustion,\n        GeneralFeelingText: this.state.GeneralFeelingText,\n        AppetiteText: this.state.AppetiteText,\n        NauseaText: this.state.NauseaText,\n        BowelMovementsText: this.state.BowelMovementsText,\n        MotivationText: this.state.MotivationText,\n        PainText: this.state.PainText,\n        DizzinessText: this.state.DizzinessText,\n        ExhaustionText: this.state.ExhaustionText,\n      })\n      // ,\n      // success: (res) => {\n      //   console.log(res);\n      //   console.log(\"this is a WriteRecord success\");\n      // }\n    }).then(response => {\n      console.log(\"WriteRecord success: \" + response.statusText);\n      //this.setState({ redirectNext: true });\n    }).catch(Error => {\n      console.log(\"Error with _ID from session: \" + Error)\n    })\n  }\n\n\n  BackHandler() {\n    this.setState({ redirectBack: true });\n  }\n\n  NextHandler() {\n    console.log(this.GeneralFeeling + \" \" + this.Appetite);\n    let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n    console.dir(userFromSession);\n    //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n    if (userFromSession != null) {\n      this.setState({ UserId: userFromSession });\n      this.WriteRecord(userFromSession);\n    }\n    this.setState({ redirectNext: true });\n  }\n\n  renderRedirect() {\n    if (this.state.redirectBack) {\n      console.log(\"renderRedirect Back\");\n      return <Redirect method=\"post\" to={\"/selectState\"}></Redirect>\n    }\n    if (this.state.redirectNext) {\n      console.log(\"renderRedirect Next\");\n      return <Redirect method=\"post\" to={\"/graph\"}></Redirect>\n    }\n    if (this.state.redirectLogin) {\n      console.log(\"renderRedirect Login\");\n      return <Redirect method=\"post\" to={\"/login\"}></Redirect>\n    }\n  }\n\n  setRedirect() {\n    console.log(\"setRedirect\");\n    this.setState({\n      redirect: true\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"pageContent\" id=\"pageContent\">\n        <React.Fragment>\n          <div onChange={event => this.setGeneralFeelingText(event)} style={{ display: this.state.TrackGeneralFeeling ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your General Feeling record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='GeneralFeelingText' onChange={this.setGeneralFeelingText}/>\n          </div>\n          <div onChange={event => this.setAppetiteText(event)} style={{ display: this.state.TrackAppetite ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Appetite record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='AppetiteText' onChange={this.setAppetiteText}/>\n          </div>\n          <div onChange={event => this.setNauseaText(event)} style={{ display: this.state.TrackNausea ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Nausea record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='NauseaText' onChange={this.setNauseaText}/>\n          </div>\n          <div onChange={event => this.setBowelMovementsText(event)} style={{ display: this.state.TrackBowelMovements ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Bowel Movements record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='BowelMovementsText' onChange={this.setBowelMovementsText}/>\n          </div>          \n          <div onChange={event => this.setMotivationText(event)} style={{ display: this.state.TrackMotivation ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Motivation record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='MotivationText' onChange={this.setMotivationText}/>\n          </div>  \n          <div onChange={event => this.setPainText(event)} style={{ display: this.state.TrackPain ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Pain record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='PainText' onChange={this.setPainText}/>\n          </div> \n          <div onChange={event => this.setDizzinessText(event)} style={{ display: this.state.TrackDizziness ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Dizziness record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='DizzinessText' onChange={this.setDizzinessText}/>\n          </div> \n          <div onChange={event => this.setExhaustionText(event)} style={{ display: this.state.TrackExhaustion ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Exhaustion record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='ExhaustionText' onChange={this.setExhaustionText}/>\n          </div> \n          <div className=\"buttonArea\">\n            <input id=\"button\" className=\"button buttonBack\" type=\"submit\" name=\"button\" value=\"Back\"\n              onClick={(e) => this.BackHandler()} />\n            <input id=\"button\" className=\"button buttonNext\" type=\"submit\" name=\"button\" value=\"Next\"\n              onClick={(e) => this.NextHandler()} />\n            {this.renderRedirect()}\n          </div>\n        </React.Fragment>\n      </div>\n    )\n  }\n}\n\nexport default TextContainer;","import React from \"react\";\n\nconst TextArea = props => (\n  <div className=\"form-area\">\n    <label className=\"form-label pageTopText\">{props.title}</label>\n    <textarea\n      className=\"form-control\"\n      name={props.name}\n      rows={props.rows}\n      cols={props.cols}\n      value={props.value}\n      onChange={props.onChange}\n      placeholder={props.placeholder}\n    />\n  </div>\n);\n\nexport default TextArea;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Input from \"../Commons/comon.Input\";\nimport TextArea from \"../Commons/comon.TextArea\";\nimport Button from \"../Commons/comon.Button\";\n\n//Form example taken from https://codesandbox.io/embed/x8omy0p9z\n\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        FirstName: \"\",\n        LastName: '', \n        userName: '', \n        mail: '', \n        password: '',\n        conditions: '',\n        treatments: '',\n        TrackingTime_1: '', \n        TrackingTime_2: '',\n        UserId:''\n      },\n      redirectBack: false,\n      redirectNext: false\n    }\n    this.renderRedirect = this.renderRedirect.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(e) {\n    //console.log(\"Inside handleInput\");\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          [name]: value\n        }\n      })//,\n      //() => console.log(this.state.newUser)\n    );\n  }\n\n  //this function is for getting user data from server for an new login user in login.js\n    //using the passed username and password the user entered in the login.js page\n    async loginHandler(SentUserName, SentPassword){\n      console.log(\"loginHandler\");\n      console.log(SentUserName);\n      //await fetch('http://localhost:4000/fetch', {\n      await fetch('fetch', {       \n          method: \"post\",\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n              username: SentUserName,\n              password: SentPassword\n          })\n      }).then(response => {\n          console.log(response);\n          return response.json();\n          }).then((data) => {\n              if (data !== undefined) {\n                  this.setState({ \n                      UserId: data._id});\n                  console.log(\"got data from registration: \" + data._id);\n                  //found registration user - write to sessionStorage\n                  window.sessionStorage.setItem('id', JSON.stringify(data._id));\n                  //user found and saved in session - go to tracksymptoms page next\n                  this.setState({ redirectNext: true });\n              }\n          }).catch(Error => {\n          console.log(\"Error with user + pass from registration: \" + Error)\n      })\n  }\n\n  async handleFormSubmit(e) {\n    e.preventDefault();\n    let userData = this.state.newUser;\n\n    console.log(\"Create New User\");\n    //await fetch('http://localhost:4000/newUser', {\n    await fetch('newUser', {  \n      method: \"put\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData),\n      // success: (res) => {\n      //   console.log(res);\n      //   console.log(\"this is a new user registration success\");\n      //   this.loginHandler(this.state.newUser.userName, this.state.newUser.password);\n      // }\n    }).then(response => {\n      console.log(response);\n      return response.json();\n      }).then((data) => {\n          if (data !== undefined) {\n            this.setState({\n              newUser: {\n                userName: data.value.userName, \n                password: data.value.password,\n                UserId: data.value._id\n              }\n            });\n            console.log(\"this is a new user registration success with UserId: \" + this.state.newUser.userName + \" \" + this.state.newUser.password);\n            this.loginHandler(this.state.newUser.userName, this.state.newUser.password);\n          }\n      }).catch(Error => {\n      console.log(\"Error with user + pass from registration: \" + Error)\n    })\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      newUser: {\n        FirstName: \"\",\n        LastName: '', \n        userName: '', \n        mail: '', \n        password: '',\n        conditions: '',\n        treatments: '',\n        TrackingTime_1: '', \n        TrackingTime_2: '',\n        UserId:''\n      }\n    });\n  }\n\n  renderRedirect() {\n    if (this.state.redirectNext) {\n      console.log(\"renderRedirect Next\");\n      return <Redirect method=\"post\" to={\"/tracksymptoms\"}></Redirect>\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"pageContent\" id=\"pageContent\">\n        <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n          {/* First Name */}\n          <Input typeinput={\"text\"} title={\"First Name:\"} name={\"FirstName\"}\n                 value={this.state.newUser.FirstName} placeholder={\"Enter your first name\"}\n                 onChange={this.handleInput} required/>{\" \"}\n          {/* Last Name */}\n          <Input typeinput={\"text\"} title={\"Last Name:\"} name={\"LastName\"}\n                 value={this.state.newUser.LastName} placeholder={\"Enter your last name\"}\n                 onChange={this.handleInput} required/>{\" \"} \n          {/* User Name */}\n          <Input typeinput={\"text\"} title={\"User Name:\"} name={\"userName\"}\n                 value={this.state.newUser.userName} placeholder={\"Enter your user name\"}\n                 onChange={this.handleInput} required/>{\" \"}                 \n          {/* Email */}\n          <Input typeinput={\"text\"} title={\"Email:\"} name={\"mail\"}\n                 value={this.state.newUser.mail} placeholder={\"Enter your email\"}\n                 onChange={this.handleInput} required/>{\" \"}\n          {/* Password */}\n          <Input typeinput={\"text\"} title={\"Password:\"} name={\"password\"}\n                 value={this.state.newUser.password} placeholder={\"Enter your password\"}\n                 onChange={this.handleInput} required/>{\" \"}\n          {/* conditions */}                 \n          <TextArea title={\"Conditions:\"} rows={4} value={this.state.newUser.conditions}\n                    name={\"conditions\"} onChange={this.handleInput}\n                    placeholder={\"Please enter all your current conditions seperated by a comma\"}\n               />\n          {/* treatments */}                 \n          <TextArea title={\"Treatments:\"} rows={4} value={this.state.newUser.treatments}\n                    name={\"treatments\"} onChange={this.handleInput}\n                    placeholder={\"Please enter all your current treatments seperated by a comma\"}\n               />\n          {/* Clear the form */}\n          <Button className=\"button\" action={this.handleClearForm} type={\"secondary\"} title={\"  Clear  \"} />{\" \"}\n          {/*Submit */}      \n          <Button className=\"button\" action={this.handleFormSubmit} type={\"primary\"} title={\"Submit\"} />{\" \"}\n        </form>\n        {this.renderRedirect()}\n      </div>\n    )\n  }\n}\n\nexport default RegistrationForm;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Input from \"../Commons/comon.Input\";\nimport TextArea from \"../Commons/comon.TextArea\";\nimport Button from \"../Commons/comon.Button\";\n\n//Form example taken from https://codesandbox.io/embed/x8omy0p9z\n\nclass UserUpdateForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        FirstName: \"\",\n        LastName: '', \n        userName: '', \n        mail: '', \n        password: '',\n        conditions: '',\n        treatments: '',\n        TrackingTime_1: '', \n        TrackingTime_2: '',\n        UserId:''\n      },\n      redirectLogin: false,\n      redirectNext: false\n    }\n    this.renderRedirect = this.renderRedirect.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.getStoredUser = this.getStoredUser.bind(this);\n  }\n\n  handleInput(e) {\n    //console.log(\"Inside handleInput\");\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          [name]: value\n        }\n      })//,\n      //() => console.log(this.state.newUser)\n    );\n  }\n\n  //this function is for getting user data from server for an existing user in sessionStorage\n  async getStoredUser(id){\n    console.log(\"getStoredUser\");\n    //await fetch('http://localhost:4000/fetch', {\n    await fetch('fetch', {    \n        method: \"post\",\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            UserId: id\n        })\n    }).then(response => {\n        return response.json();\n        }).then((data) => {\n            console.log(data.FirstName);\n            if (data !== undefined) {\n                this.setState({\n                  newUser: {\n                    FirstName: data.FirstName,\n                    LastName: data.LastName, \n                    userName: data.userName, \n                    mail: data.mail, \n                    password: data.password,\n                    conditions: data.conditions,\n                    treatments: data.treatments,\n                    TrackingTime_1: data.TrackingTime_1, \n                    TrackingTime_2: data.TrackingTime_2,\n                    UserId:data._id\n                  }\n                });\n                console.log(\"got data from session: \" + data._id);\n                //user found - go to path of existing user\n                // this.setState({\n                //   redirectNext: true\n                // })\n            }\n        }).catch(Error => {\n        console.log(\"Error with _ID from session: \" + Error)\n    })\n  }\n  \n  //this is the initial check if we have a sessionStorage that holds a user\n  componentWillMount() {\n        //First we'll check if the sessionStorage has a user id saved\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        console.dir(userFromSession);\n        //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n        if (userFromSession != null) {\n            console.log(\"there is a user saved in this session: \" + userFromSession);\n            this.setState({ UserId: userFromSession });\n            this.getStoredUser(userFromSession);\n        }\n        //if I do not have sessionStorage then I redirect to the login page\n        else {\n            this.setState({ redirectLogin: true });\n            console.log(\"there is a NO user saved in this session\");\n        }\n  }\n\n  async handleFormSubmit(e) {\n    e.preventDefault();\n    let userData = this.state.newUser;\n\n    console.log(\"Update User\");\n    //await fetch('http://localhost:4000/UpdateUser', {\n    await fetch('UpdateUser', {  \n      method: \"put\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => {\n        console.log(\"Update User: \" + response.statusText);\n        this.setState({ redirectNext: true });\n    }).catch(Error => {\n        console.log(\"Error with _ID from session: \" + Error)\n    })\n  }\n\n  renderRedirect() {\n    if (this.state.redirectNext) {\n      console.log(\"renderRedirect Next\");\n      //return <Redirect method=\"post\" to={\"/graph\"}></Redirect>\n      return <Redirect method=\"post\" to={\"/pages/Your Information Has Been Updated\"}></Redirect>\n    }\n    if (this.state.redirectLogin) {\n      console.log(\"renderRedirect Login\");\n      return <Redirect method=\"post\" to={\"/login\"}></Redirect>\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"pageContent\" id=\"pageContent\">\n        <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n          {/* First Name */}\n          <Input typeinput={\"text\"} title={\"First Name:\"} name={\"FirstName\"}\n                 value={this.state.newUser.FirstName} placeholder={this.state.newUser.FirstName}\n                 onChange={this.handleInput} required/>{\" \"}\n          {/* Last Name */}\n          <Input typeinput={\"text\"} title={\"Last Name:\"} name={\"LastName\"}\n                 value={this.state.newUser.LastName} placeholder={this.state.newUser.LastName}\n                 onChange={this.handleInput} required/>{\" \"} \n          {/* User Name */}\n          <Input typeinput={\"text\"} title={\"User Name:\"} name={\"userName\"}\n                 value={this.state.newUser.userName} placeholder={this.state.newUser.userName}\n                 onChange={this.handleInput} disabled/>{\" \"}                 \n          {/* Email */}\n          <Input typeinput={\"text\"} title={\"Email:\"} name={\"mail\"}\n                 value={this.state.newUser.mail} placeholder={this.state.newUser.mail}\n                 onChange={this.handleInput} required/>{\" \"}\n          {/* Password */}\n          <Input typeinput={\"text\"} title={\"Password:\"} name={\"password\"}\n                 value={this.state.newUser.password} placeholder={this.state.newUser.password}\n                 onChange={this.handleInput} required/>{\" \"}\n          {/* conditions */}                 \n          <TextArea title={\"Conditions:\"} rows={4} value={this.state.newUser.conditions}\n                    name={\"conditions\"} onChange={this.handleInput}\n                    placeholder={this.state.newUser.conditions}\n               />\n          {/* treatments */}                 \n          <TextArea title={\"Treatments:\"} rows={4} value={this.state.newUser.treatments}\n                    name={\"treatments\"} onChange={this.handleInput}\n                    placeholder={this.state.newUser.treatments}\n               />\n          {/*Update*/}      \n          <Button className=\"button\" action={this.handleFormSubmit} type={\"primary\"} title={\"Update\"} />{\" \"}\n        </form>\n        {this.renderRedirect()}\n      </div>\n    )\n  }\n}\n\nexport default UserUpdateForm;","// import ReactDOM from 'react-dom';\nimport React from 'react';\n// import the CSS';\nimport '../index.css';\n\n/*Page is where I define the different pages */\nimport Page from '../Pages/page.Page';\n/*login is where the user initially logs in */\nimport login from '../Pages/page.login';\n/*Symptoms is where the user decides what symptoms to track*/\nimport Symptoms from '../Pages/page.symptoms';\n/*Graph is where I define the graph class */\nimport Graph from '../Pages/page.graph';\n/*SelectState is where I allow to select your current state (1-5) */\nimport SelectState from '../Pages/page.selectState';\n/*addText is where I add the extra text for each of the states you follow */\nimport addText from '../Pages/page.addText';\n/*RegistrationForm is where we register a new user */\nimport RegistrationForm from '../Pages/page.registration';\n/*UserUpdateForm is where we update details for an existing user */\nimport UserUpdateForm from '../Pages/page.userUpdate';\n\n/*BrowserRouter and so on are elements of react-router-dom to enable Routing  */\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\n\nclass Navbar extends React.Component {\n    render() {\n        let cName;\n        if (this.props.isMenuOpen) { cName = \"sidebarMenuShadow\" }\n        else { cName = \"\" }\n\n        return (\n            <Router>\n                <div>\n                    <div className=\"header\">\n                        <div className=\"headerText\"><span>IFEELU</span></div>\n                        <div className=\"logo\">\n                            <span>\n                            <a href=\"https://ifeelu-6133.nodechef.com/\">\n                                <img src=\"https://drive.google.com/uc?id=14MW9Z9pz9of-krcV5qLRLs_gvjmE1Sny\" alt=\"IFeelU Logo\" />\n                            </a>\n                            </span>\n                        </div>\n                    </div>\n                    <input type=\"checkbox\" className=\"openSidebarMenu\" id=\"openSidebarMenu\"\n                        /*setState changes the state and re-renders the page on changes */\n                        onClick={this.props.menuState} checked={this.props.isMenuOpen}\n                        onChange={this.props.menuState}/>\n                    <label htmlFor=\"openSidebarMenu\" className=\"sidebarIconToggle\">\n                        <div className=\"spinner diagonal part-1\"></div>\n                        <div className=\"spinner horizontal\"></div>\n                        <div className=\"spinner diagonal part-2\"></div>\n                    </label>\n                    {/* {console.log(this.state.isToggleOn + \" \" + cName)} */}\n                    <div id=\"sidebarMenu\" className={cName}>\n                        <ul className=\"sidebarMenuInner\">\n                            {/*<Link> changes the URL*/}\n                            {/*<li onClick={this.props.menuState}>\n                             <Link to={`/`}>Barak Brudo <span>Web Developer</span></Link></li>*/}\n                            <li onClick={this.props.menuState}>\n                            {/* <Route path='/login/:id' exact={true} component={login} /> */}\n                                <Link to={`/login`}>Login</Link></li> \n                            <li onClick={this.props.menuState}>\n                                <Link to={`/userUpdate`}>Update</Link></li>    \n                            <li onClick={this.props.menuState}>\n                                <Link to={`/tracksymptoms`}>Tracking Symptoms</Link></li>\n                            <li onClick={this.props.menuState}>\n                                <Link to={`/selectState`}>Select State</Link></li>\n                            {/*<li onClick={this.props.menuState}>\n                            <Link to={`/addText`}>Add Text</Link></li>*/}\n                            <li onClick={this.props.menuState}>\n                                <Link to={`/graph`}>Graph</Link></li>\n                        </ul>\n                    </div>\n                    <div className='wrapper'>\n                        {/*<Route> changes the content of this div (wrapper) based onb the URL*/}\n                        <Route exact={true} path='/' component={login} />\n                        <Route exact={true} path='/login' component={login} />\n                        <Route exact={true} path='/registration' component={RegistrationForm} />\n                        <Route exact={true} path='/tracksymptoms' component={Symptoms} />\n                        <Route exact={true} path='/selectState' component={SelectState} />\n                        <Route exact={true} path='/addText' component={addText} />\n                        <Route exact={true} path='/userUpdate' component={UserUpdateForm} />\n                        <Route path='/pages/:id' component={Page} />\n                        <Route exact={true} path='/graph' component={Graph} />  \n                        <Route exact={true} path='/graph/:id' component={Graph} /> \n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default Navbar;","//This is the main page f the app\n//Start this app by typing: 'npm start' in a terminal \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/*Navbar is the navbar for all pages */\nimport Navbar from './Commons/comon.navbar';\n\n/*PageWrap is the class encomassing all the pages wrapped in <Router>. \nThe Nav bar is always ther and under it are the various pages represented by\n<Route.. */\nclass PageWrap extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { isMenuOpen: false };\n    }\n\n    menuState = () => {\n        this.setState({ isMenuOpen: !this.state.isMenuOpen });\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar menuState={this.menuState} isMenuOpen={this.state.isMenuOpen}/>\n            </div>\n        );\n    }\n}\n\n\nfunction main() {\n    return (\n        <div id=\"App\">\n            <PageWrap pageWrapId={\"pageContent\"} outerContainerId={\"App\"} />\n        </div>\n    );\n}\n\nReactDOM.render(main(), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();"],"sourceRoot":""}