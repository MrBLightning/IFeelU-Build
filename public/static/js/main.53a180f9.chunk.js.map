{"version":3,"sources":["serviceWorker.js","Pages/page.Page.js","Commons/comon.Input.js","Commons/comon.Button.js","Pages/page.login.js","Commons/comon.toggle.js","Pages/page.symptoms.js","Pages/page.graph.js","Pages/page.selectState.js","Pages/page.addText.js","Commons/comon.TextArea.js","Pages/page.registration.js","Commons/comon.navbar.js","index.js"],"names":["Boolean","window","location","hostname","match","Page","_ref","react_default","a","createElement","className","id","params","Input","props","htmlFor","name","title","Object","assign","type","typeinput","value","onChange","placeholder","Button","style","onClick","action","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newUser","userName","password","UserId","redirectLogin","redirectRegister","redirectFailedLogin","renderRedirect","bind","assertThisInitialized","loginHandler","RegisterHandler","handleChangeUsername","handleChangePassword","handleClickUsername","handleFormSubmit","handleInput","console","log","Redirect","method","to","textAlign","alignSelf","e","target","setState","prevState","objectSpread","defineProperty","fetch","headers","Accept","Content-Type","body","JSON","stringify","then","response","json","data","FirstName","undefined","_this2","username","_id","redirect","catch","Error","SentUserName","SentPassword","_this3","sessionStorage","setItem","preventDefault","_this4","userFromSession","parse","getItem","dir","getStoredUser","event","onSubmit","comon_Input","comon_Button","React","Component","Toggle","checked","toggleName","lib_default","onColor","toggleChecked","Symptoms","GeneralFeeling","Appetite","Nausea","BowelMovements","Motivation","Pain","Dizziness","Exhaustion","redirectBack","redirectNext","setRedirect","BackHandler","NextHandler","switchGeneralFeelingHandler","switchAppetiteHandler","switchNauseaHandler","switchBowelMovementsHandler","switchMotivationHandler","switchPainHandler","switchDizzinessHandler","switchExhaustionHandler","UpdateTracking","TrackingGeneralFeeling","TrackingAppetite","TrackingNausea","TrackingBowelMovements","TrackingMotivation","TrackingPain","TrackingDizziness","TrackingExhaustion","success","res","comon_toggle","Chart","require","Graph","renderExtraText","array","index","adedText","extraText","TrackGeneralFeeling","TrackAppetite","TrackNausea","TrackBowelMovements","TrackMotivation","TrackPain","TrackDizziness","TrackExhaustion","currentComponent","GeneralFeelingIsMarked","AppetiteIsMarked","NauseaIsMarked","BowelMovementsIsMarked","MotivationIsMarked","PainIsMarked","DizzinessIsMarked","ExhaustionIsMarked","GeneralFeelingLastValue","AppetiteLastValue","NauseaLastValue","BowelMovementsLastValue","MotivationLastValue","PainLastValue","DizzinessLastValue","ExhaustionLastValue","currDateCombo","currDate","myLabels","myDataGeneralFeeling","GeneralFeelingTexts","myDataAppetite","AppetiteTexts","myDataNausea","NauseaTexts","myDataBowelMovements","BowelMovementsTexts","myDataMotivation","MotivationTexts","myDataPain","PainTexts","myDataDizziness","DizzinessTexts","myDataExhaustion","ExhaustionTexts","node","toDate","dateStr","Date","daysdifference","date1","date2","date1_ms","getTime","date2_ms","difference_ms","Math","abs","round","fetchUserData","_x","_fetchUserData","apply","arguments","asyncToGenerator","regenerator_default","mark","_callee","userId","URL","wrap","_context","prev","next","lng","length","i","dateTimeCombo","date","toLocaleString","day","month","year","check","includes","tempDate","setDate","getDate","push","RecordTracking","ExtraText","stop","_x2","_getStoredUser","_callee2","_context2","fillChartData","datasetsData","datasetsText","label","backgroundColor","borderColor","borderWidth","fill","pointRadius","pointHoverRadius","pointHitRadius","myChart","labels","datasets","options","legend","position","boxWidth","evt","item","thisPoint","getElementAtEvent","_chart","legendItems","_datasetIndex","text","addedText","_index","scales","scaleOverride","scaleSteps","scaleStepWidth","scaleStartValue","yAxes","ticks","beginAtZero","max","min","stepSize","xAxes","minRotation","maxRotation","pan","enabled","mode","zoom","_commitGraph","_callee3","_context3","_x3","commitGraph","ref","RadioContainer","LastName","currentDate","currentTime","conditions","treatments","setGeneralFeeling","setAppetite","setNausea","setBowelMovements","setMotivation","setPain","setDizziness","setExhaustion","getCurrentDate","getCurrentTime","separator","newDate","getMonth","getFullYear","concat","newTime","hours","getHours","minutes","getMinutes","WriteRecord","Fragment","display","src","alt","marginRight","TextContainer","GeneralFeelingText","AppetiteText","NauseaText","BowelMovementsText","MotivationText","PainText","DizzinessText","ExhaustionText","setGeneralFeelingText","setAppetiteText","setNauseaText","setBowelMovementsText","setMotivationText","setPainText","setDizzinessText","setExhaustionText","rows","cols","TextArea","RegistrationForm","mail","TrackingTime_1","TrackingTime_2","handleClearForm","userData","required","comon_TextArea","Navbar","cName","isMenuOpen","BrowserRouter","href","menuState","Link","Route","exact","path","component","login","SelectState","addText","PageWrap","comon_navbar","ReactDOM","render","src_PageWrap","pageWrapId","outerContainerId","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53a180f9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Page = ({ match }) => {\n\n    return (\n        <div className=\"pageContent\" id=\"pageContent\">\n            <div className=\"pageTopText\">\n            Page ID {match.params.id}\n            </div>\n        </div>\n    )\n}\n\nexport default Page","import React from \"react\";\n\nconst Input = props => {\n  //console.log(props.value);\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.name} className=\"form-label pageTopText\">\n        {props.title}\n      </label>\n      <input\n        className=\"form-control input-control\"\n        id={props.name}\n        name={props.name}\n        type={props.typeinput}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Button = props => {\n  //console.log(props.style);\n  return (\n    <button\n      style={props.style}\n      // className={\n      //   props.type === \"primary\" ? \"btn btn-primary\" : \"btn btn-secondary\"\n      // }\n      className = \"button\"\n      onClick = {props.action}\n    >\n      {props.title}\n    </button>\n  );\n};\n\nexport default Button;","import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport Input from \"../Commons/comon.Input\";\nimport Button from \"../Commons/comon.Button\";\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            newUser: {\n                userName: '', \n                password: '',\n                UserId:''\n              },\n            redirectLogin: false,\n            redirectRegister: false, \n            redirectFailedLogin: false,             \n            //username: \"Username\", \n            //password: \"\",\n            //UserId: \"\"\n            }\n        this.renderRedirect = this.renderRedirect.bind(this);\n        this.loginHandler = this.loginHandler.bind(this);\n        this.RegisterHandler = this.RegisterHandler.bind(this);\n\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleClickUsername = this.handleClickUsername.bind(this);\n\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);    \n    }\n\n    renderRedirect() {\n        console.log(\"renderRedirect\");\n        if (this.state.redirectLogin) {\n            return <Redirect method=\"post\" to={\"/tracksymptoms\"}></Redirect>\n        }\n        if (this.state.redirectRegister) {\n            return <Redirect method=\"post\" to={\"/registration\"}></Redirect>\n        } \n        if(this.state.redirectFailedLogin){\n            let divStyle = {\n                textAlign: 'center',\n                alignSelf: 'center'\n              };\n            return  <div className=\"pageTopText form-label\" style={divStyle}>Please enter a valid UserName and Password</div>\n        }        \n    }\n\n    handleInput(e) {\n        //console.log(\"Inside handleInput\");\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState(\n          prevState => ({\n            newUser: {\n              ...prevState.newUser,\n              [name]: value\n            }\n          })//,\n          //() => console.log(this.state.newUser)\n        );\n      }    \n\n    //this function is for getting user data from server for an existing user in sessionStorage\n    async getStoredUser(id){\n        console.log(\"getStoredUser\");\n        //await fetch('http://localhost:4000/fetch', {\n        await fetch('fetch', {    \n            method: \"post\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                UserId: id\n            })\n        }).then(response => {\n            return response.json();\n            }).then((data) => {\n                console.log(data.FirstName);\n                if (data !== undefined) {\n                    this.setState({ \n                        username: data.userName, \n                        password: data.password,\n                        UserId: data._id});\n                    console.log(\"got data from session: \" + data._id);\n                    //user found - go to path of existing user\n                    this.setState({\n                        redirect: true\n                    })\n                }\n            }).catch(Error => {\n            console.log(\"Error with _ID from session: \" + Error)\n        })\n    }\n\n    //this function is for getting user data from server for an new login user in login.js\n    //using the passed username and password the user entered in the login.js page\n    async loginHandler(SentUserName, SentPassword){\n        console.log(\"loginHandler\");\n        console.log(SentUserName);\n        //await fetch('http://localhost:4000/fetch', {\n        await fetch('fetch', {       \n            method: \"post\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: SentUserName,\n                password: SentPassword\n            })\n        }).then(response => {\n            console.log(response);\n            return response.json();\n            }).then((data) => {\n                if (data !== undefined) {\n                    this.setState({ \n                        username: data.userName, \n                        password: data.password,\n                        UserId: data._id});\n                    console.log(\"got data from login: \" + data._id);\n                    //connected login user - write to sessionStorage\n                    window.sessionStorage.setItem('id', JSON.stringify(data._id));\n                    //user found - go to path of login user\n                    this.setState({\n                        redirectLogin: true\n                    })\n                }\n            }).catch(Error => {\n            console.log(\"Error with user + pass from login: \" + Error)\n        })\n    }\n\n    //this function is for getting user data from server for an new login user in login.js\n    //using the passed username and password the user entered in the login.js page\n    async handleFormSubmit(e) {\n        e.preventDefault();\n        let SentUserName = this.state.newUser.userName;\n        let SentPassword = this.state.newUser.password;\n        console.log(\"handleFormSubmit Login\");\n\n        if(SentUserName !== '' && SentPassword !== ''){\n            //await fetch('http://localhost:4000/fetch', {\n            await fetch('fetch', {       \n                method: \"post\",\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: SentUserName,\n                    password: SentPassword\n                })\n            }).then(response => {\n                console.log(response);\n                return response.json();\n                }).then((data) => {\n                    if (data !== undefined) {\n                        this.setState({\n                            newUser: {\n                            userName: data.userName, \n                            password: data.password,\n                            UserId: data._id\n                            }\n                        });\n                        console.log(\"got data from login: \" + data._id);\n                        //connected login user - write to sessionStorage\n                        window.sessionStorage.setItem('id', JSON.stringify(data._id));\n                        //user found - go to path of login user\n                        this.setState({\n                            redirectLogin: true\n                        })\n                    }\n                }).catch(Error => {\n                    this.setState({redirectFailedLogin: true});    \n                    console.log(\"Error with user + pass from login: \" + Error)\n                })\n        } else{\n            this.setState({redirectFailedLogin: true});\n        }   \n    }\n    \n\n    // RegisterHandler() {\n    //     this.setState({ redirectRegister: true });\n    // }\n\n    RegisterHandler(e) {\n        e.preventDefault();\n        this.setState({\n            redirectRegister: true\n        });\n      }\n\n\n    //this is the initial check if we have a sessionStorage that holds a user\n    componentWillMount() {\n        //First we'll check if the sessionStorage has a user id saved\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        console.dir(userFromSession);\n        //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n        if (userFromSession != null) {\n            console.log(\"there is a user saved in this session\");\n            //this.setState({ UserId: userFromSession });\n            this.setState({\n                newUser: {\n                  UserId: userFromSession\n                },\n                redirectFailedLogin: false\n            });\n            this.getStoredUser(userFromSession);\n        } \n        //if I do not have sessionStorage then I redirect to the login page\n        else {\n            console.log(\"there is NO user saved in this session\");\n        }\n    }\n\n    handleChangeUsername(event) {\n        this.setState({ username: event.target.value });\n    }\n\n    handleChangePassword(event) {\n        this.setState({ password: event.target.value });\n    }\n\n    handleClickUsername() {\n        if (this.state.username === \"Username\") {\n            this.setState({ username: \"\" })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"pageContent\" id=\"pageContent\">\n                <div className=\"pageTopText\">Welcome</div>\n                {/* \n                <div className=\"inputsWrapper\">\n                    <div className=\"imputWrapper\"><input type=\"text\" className=\"loginInput\" onChange={this.handleChangeUsername} value={this.state.username} onClick={this.handleClickUsername}></input></div>\n                    <div className=\"imputWrapper\"><input type=\"password\" className=\"loginInput\" onChange={this.handleChangePassword} ></input></div>\n                </div>\n                <div className=\"buttonArea\">\n                    <input id=\"button\" className=\"button loginSubmit\" type=\"submit\" name=\"button\" value=\"login\"\n                           onClick={(e) => this.loginHandler(this.state.username, this.state.password)} />\n                    <input id=\"button\" className=\"button\" type=\"submit\" name=\"button\" value=\"Register\"\n                           onClick={(e) => this.RegisterHandler()} />\n                </div>           \n                {this.renderRedirect()}\n                */}\n                <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n                    {/* User Name */}\n                    <Input typeinput={\"text\"} title={\"User Name:\"} name={\"userName\"}\n                           value={this.state.newUser.userName} placeholder={\"Enter your user name\"}\n                           onChange={this.handleInput} />{\" \"}                 \n                    {/* Password */}\n                    <Input typeinput={\"text\"} title={\"Password:\"} name={\"password\"}\n                           value={this.state.newUser.password} placeholder={\"Enter your password\"}\n                           onChange={this.handleInput} />{\" \"}\n                    {/*Login */}      \n                    <Button className=\"button\" action={this.handleFormSubmit} type={\"primary\"} title={\"Login\"} />{\" \"}\n                    {/* Register */}\n                    <Button className=\"button\" action={this.RegisterHandler} type={\"secondary\"} title={\"Register\"} />{\" \"}\n                </form>\n                {this.renderRedirect()}      \n            </div>\n        )\n    }\n}\n\n// const login = ({ match }) => {\n//     return (\n//         <div>\n//             <Login />\n//         </div>\n//     )\n// }\n\nexport default Login\n\n\n","import React from \"react\";\nimport Switch from 'react-ios-switch';\n\nclass Toggle extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: true,\n        }; \n    }\n\n    render() {\n        //const { checked } = this.state;\n        //console.dir(this.props.toggleName + \" \" + this.props.initToggle + \" \" + this.state.checked);\n\n        return (\n            <div className=\"trackItem\">\n                <div className=\"trackName\">{this.props.toggleName}</div>\n                <Switch\n                    checked={this.props.checked}\n                    onColor=\"#22aee4\"\n                    className=\"switch\"\n                    onChange={() => this.props.toggleChecked()}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Toggle;","import React from 'react';\n/*Toggle is the Toggle select element */\nimport Toggle from '../Commons/comon.toggle';\nimport { Redirect } from 'react-router-dom'\n\nclass Symptoms extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            GeneralFeeling: false,\n            Appetite: false,\n            Nausea: false,\n            BowelMovements: false,\n            Motivation: false,\n            Pain: false,\n            Dizziness: false,\n            Exhaustion: false,\n            redirectBack: false,\n            redirectNext: false,\n            redirectLogin: false,\n            UserId: \"\"\n        }\n        this.renderRedirect = this.renderRedirect.bind(this);\n        this.setRedirect = this.setRedirect.bind(this);\n        this.BackHandler = this.BackHandler.bind(this);\n        this.NextHandler = this.NextHandler.bind(this);\n        this.switchGeneralFeelingHandler = this.switchGeneralFeelingHandler.bind(this);\n        this.switchAppetiteHandler = this.switchAppetiteHandler.bind(this);\n        this.switchNauseaHandler = this.switchNauseaHandler.bind(this);\n        this.switchBowelMovementsHandler = this.switchBowelMovementsHandler.bind(this);\n        this.switchMotivationHandler = this.switchMotivationHandler.bind(this);\n        this.switchPainHandler = this.switchPainHandler.bind(this);\n        this.switchDizzinessHandler = this.switchDizzinessHandler.bind(this);\n        this.switchExhaustionHandler = this.switchExhaustionHandler.bind(this);\n        this.UpdateTracking = this.UpdateTracking.bind(this);\n    }\n\n    renderRedirect() {\n        if (this.state.redirectBack) {\n            console.log(\"renderRedirect Back\");\n            return <Redirect method=\"post\" to={\"/login\"}></Redirect>\n        }\n        if (this.state.redirectNext) {\n            console.log(\"renderRedirect Next\");\n            return <Redirect method=\"post\" to={\"/selectState\"}></Redirect>\n        }\n        if (this.state.redirectLogin) {\n            console.log(\"renderRedirect Login\");\n            return <Redirect method=\"post\" to={\"/login\"}></Redirect>\n        }\n    }\n\n    setRedirect() {\n        console.log(\"setRedirect\");\n        this.setState({\n            redirect: true\n        })\n    }\n\n    //this function is for getting user data from server for an existing user in sessionStorage\n    async getStoredUser(id) {\n        console.log(\"getStoredUser for \" + id);\n        //await fetch('http://localhost:4000/fetch', {\n        await fetch('fetch', {    \n            method: \"post\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                UserId: id\n            })\n        }).then(response => {\n            return response.json();\n        }).then((data) => {\n            console.log(\"Setting State\");\n            if (data !== undefined) {\n                this.setState({\n                    GeneralFeeling: data.TrackingGeneralFeeling,\n                    Appetite: data.TrackingAppetite,\n                    Nausea: data.TrackingNausea,\n                    BowelMovements: data.TrackingBowelMovements,\n                    Motivation: data.TrackingMotivation,\n                    Pain: data.TrackingPain,\n                    Dizziness: data.TrackingDizziness,\n                    Exhaustion: data.TrackingExhaustion,\n                    UserId: data._id\n                });\n                console.log(\"Symptoms - got data from session for UserId: \" + data._id);\n            } else {\n                console.log(\"data returned from fetch undefined\");\n            }\n        }).catch(Error => {\n            console.log(\"Error with _ID from session: \" + Error)\n        })\n    }\n\n    //this function is for setting the symptom tracking variables for the user in the DB\n    //once we pressed 'Next'\n    async UpdateTracking(id) {\n        console.log(\"UpdateTracking\");\n        //if the user didn't touch the buttons there is a chance some or all of the trackers\n        //will be undefined. these tests make sure that if a tracker is undefined it is set as false\n        if(this.state.GeneralFeeling === undefined){this.setState({ GeneralFeeling: false })}\n        if(this.state.Appetite === undefined){this.setState({ Appetite: false })}\n        if(this.state.Nausea === undefined){this.setState({ Nausea: false })}\n        if(this.state.BowelMovements === undefined){this.setState({ BowelMovements: false })}\n        if(this.state.Motivation === undefined){this.setState({ Motivation: false })}\n        if(this.state.Pain === undefined){this.setState({ Pain: false })}\n        if(this.state.Dizziness === undefined){this.setState({ Dizziness: false })}\n        if(this.state.Exhaustion === undefined){this.setState({ Exhaustion: false })}\n        //await fetch('http://localhost:4000/get', {\n        await fetch('get', {    \n            method: \"put\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                UserId: id,\n                GeneralFeeling: this.state.GeneralFeeling,\n                Appetite: this.state.Appetite,\n                Nausea: this.state.Nausea,\n                BowelMovements: this.state.BowelMovements,\n                Motivation: this.state.Motivation,\n                Pain: this.state.Pain,\n                Dizziness: this.state.Dizziness,\n                Exhaustion: this.state.Exhaustion\n            }),\n            success: (res) => {\n                console.log(res);\n                console.log(\"this is a UpdateTracking success\");\n            }\n        })\n    }\n\n    //this is the initial check if we have a sessionStorage that holds a user\n    componentWillMount() {\n        //First we'll check if the sessionStorage has a user id saved\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        console.dir(userFromSession);\n        //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n        if (userFromSession != null) {\n            console.log(\"there is a user saved in this session: \" + userFromSession);\n            this.setState({ UserId: userFromSession });\n            this.getStoredUser(userFromSession);\n        }\n        //if I do not have sessionStorage then I redirect to the login page\n        else {\n            this.setState({ redirectLogin: true });\n            console.log(\"there is a NO user saved in this session\");\n        }\n    }\n\n\n    switchGeneralFeelingHandler() {\n        this.setState({ GeneralFeeling: !this.state.GeneralFeeling });\n        console.log(\"GeneralFeeling: \" + this.state.GeneralFeeling);\n    }\n\n    switchAppetiteHandler() {\n        this.setState({ Appetite: !this.state.Appetite });\n        console.log(\"Appetite: \" + this.state.Appetite);\n    }\n\n    switchNauseaHandler() {\n        this.setState({ Nausea: !this.state.Nausea });\n        console.log(\"Nausea: \" + this.state.Nausea);\n    }\n\n    switchBowelMovementsHandler() {\n        this.setState({ BowelMovements: !this.state.BowelMovements });\n        console.log(\"BowelMovements: \" + this.state.BowelMovements);\n    }\n\n    switchMotivationHandler() {\n        this.setState({ Motivation: !this.state.Motivation });\n        console.log(\"Motivation: \" + this.state.Motivation);\n    }\n\n    switchPainHandler() {\n        this.setState({ Pain: !this.state.Pain });\n        console.log(\"Pain: \" + this.state.Pain);\n    }\n\n    switchDizzinessHandler() {\n        this.setState({ Dizziness: !this.state.Dizziness });\n        console.log(\"Dizziness: \" + this.state.Dizziness);\n    }\n\n    switchExhaustionHandler() {\n        this.setState({ Exhaustion: !this.state.Exhaustion });\n        console.log(\"Exhaustion: \" + this.state.Exhaustion);\n    }\n\n    BackHandler() {\n        this.setState({ redirectBack: true });\n    }\n\n    NextHandler() {\n        console.log(this.GeneralFeeling + \" \" + this.Appetite);\n        let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n        console.dir(userFromSession);\n        //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n        if (userFromSession != null) {\n            this.setState({ UserId: userFromSession });\n            this.UpdateTracking(userFromSession);\n        }\n        this.setState({ redirectNext: true });\n    }\n\n    render() {\n        //console.log(\"render\");\n        return (\n            <div className=\"pageContent\" id=\"pageContent\">\n                <div className=\"pageTopText\">I would like to track:</div>\n                <div className=\"trackBox\">\n                    <Toggle toggleName={\"General Feeling\"} checked={this.state.GeneralFeeling} toggleChecked={this.switchGeneralFeelingHandler} />\n                    <Toggle toggleName={\"Appetite\"} checked={this.state.Appetite} toggleChecked={this.switchAppetiteHandler} />\n                    <Toggle toggleName={\"Nausea\"} checked={this.state.Nausea} toggleChecked={this.switchNauseaHandler} />\n                    <Toggle toggleName={\"Bowel Movements\"} checked={this.state.BowelMovements} toggleChecked={this.switchBowelMovementsHandler} />\n                    <Toggle toggleName={\"Motivation\"} checked={this.state.Motivation} toggleChecked={this.switchMotivationHandler} />\n                    <Toggle toggleName={\"Pain\"} checked={this.state.Pain} toggleChecked={this.switchPainHandler} />\n                    <Toggle toggleName={\"Dizziness\"} checked={this.state.Dizziness} toggleChecked={this.switchDizzinessHandler} />\n                    <Toggle toggleName={\"Exhaustion\"} checked={this.state.Exhaustion} toggleChecked={this.switchExhaustionHandler} />\n                </div>\n                <div className=\"buttonArea\">\n                    <input id=\"button\" className=\"button buttonBack\" type=\"submit\" name=\"button\" value=\"Back\"\n                        onClick={(e) => this.BackHandler()} />\n                    <input id=\"button\" className=\"button buttonNext\" type=\"submit\" name=\"button\" value=\"Next\"\n                        onClick={(e) => this.NextHandler()} />\n                    {this.renderRedirect()}\n                </div>\n            </div>\n        )  \n    }\n}\n\nexport default Symptoms\n\n\n","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\n/*To enable Pan and Zoom that are defined in chartjs-plugin-zoom*/\nimport * as zoom from 'chartjs-plugin-zoom';\n// import { finished } from 'stream';\n\nvar Chart = require(\"chart.js\");\n\nclass Graph extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\textraText: '',\n\t\t\tTrackGeneralFeeling: false,\n\t\t\tTrackAppetite: false,\n\t\t\tTrackNausea: false,\n\t\t\tTrackBowelMovements: false,\n\t\t\tTrackMotivation: false,\n\t\t\tTrackPain: false,\n\t\t\tTrackDizziness: false,\n\t\t\tTrackExhaustion: false,\n\t\t\tredirectLogin: false,\n\t\t\tUserId: ''\n\t\t};\n\n\t\t//this binding is needed to make 'this' work in the callback \n\t\tthis.renderExtraText = this.renderExtraText.bind(this);\n\t\tthis.renderRedirect = this.renderRedirect.bind(this);\n\t}\n\n\t//this will redraw the page WITH the added text at the bottom\n\trenderExtraText = (array, index, adedText) => {\n\t\tthis.setState({ extraText: adedText + array[index] });\n\t}\n\n\tcomponentDidMount() {\n\t\tlet currentComponent = this;\n\t\t//This is where we define local variables that will be familiar to all functions\n\t\t//inside the componentDidMount functions\n\t\t//We start by defining 'listners' that will later tell us if a certain dataset was marked or not\t\n\t\tlet GeneralFeelingIsMarked = false;\n\t\tlet AppetiteIsMarked = false;\n\t\tlet NauseaIsMarked = false;\n\t\tlet BowelMovementsIsMarked = false;\n\t\tlet MotivationIsMarked = false;\n\t\tlet PainIsMarked = false;\n\t\tlet DizzinessIsMarked = false;\n\t\tlet ExhaustionIsMarked = false;\n\n\t\tlet GeneralFeelingLastValue = 0;\n\t\tlet AppetiteLastValue = 0;\n\t\tlet NauseaLastValue = 0;\n\t\tlet BowelMovementsLastValue = 0;\n\t\tlet MotivationLastValue = 0;\n\t\tlet PainLastValue = 0;\n\t\tlet DizzinessLastValue = 0;\n\t\tlet ExhaustionLastValue = 0;\n\t\t//let conditionsLastValue = 0;\n\t\t//let treatmentsLastValue = 0;\n\n\t\tlet currDateCombo = \"\";\n\t\tlet currDate = \"\";\n\n\t\t//this will be the list of labels for the X Axis of the graph\n\t\tlet myLabels = [];\n\n\t\t//these are the various data sets. \n\t\t//Each set has the data on it's state and the text written at that time.\n\t\tlet myDataGeneralFeeling = [];\n\t\tlet GeneralFeelingTexts = [];\n\t\tlet myDataAppetite = [];\n\t\tlet AppetiteTexts = [];\n\t\tlet myDataNausea = [];\n\t\tlet NauseaTexts = [];\n\t\tlet myDataBowelMovements = [];\n\t\tlet BowelMovementsTexts = [];\n\t\tlet myDataMotivation = [];\n\t\tlet MotivationTexts = [];\n\t\tlet myDataPain = [];\n\t\tlet PainTexts = [];\n\t\tlet myDataDizziness = [];\n\t\tlet DizzinessTexts = [];\n\t\tlet myDataExhaustion = [];\n\t\tlet ExhaustionTexts = [];\n\n\t\tconst node = this.node;\n\n\t\t//Here are a bunch of Functions that I'll be using:\n\t\t//function to convert string in the format of yyyy-mm-dd into a valid date object\n\t\tfunction toDate(dateStr) {\n\t\t\treturn new Date(dateStr)\n\t\t}\n\t\t//function to get the number of days differentiating two dates given as strings of format dd/mm/yyyy\n\t\tfunction daysdifference(date1, date2) {\n\t\t\t// The number of milliseconds in one day\n\t\t\tvar ONEDAY = 1000 * 60 * 60 * 24;\n\t\t\t// Convert both dates to milliseconds\n\t\t\tvar date1_ms = toDate(date1).getTime();\n\t\t\tvar date2_ms = toDate(date2).getTime();\n\t\t\t// Calculate the difference in milliseconds\n\t\t\tvar difference_ms = Math.abs(date1_ms - date2_ms);\n\n\t\t\t// Convert back to days and return\n\t\t\treturn Math.round(difference_ms / ONEDAY);\n\t\t}\n\n\t\t//function to fetch the information about the user from the DB\n\t\tasync function fetchUserData(userId) {\n\t\t\t//let URL = \"http://localhost:4000/fetch/\" + userId;\n\t\t\tlet URL = \"fetch/\" + userId;\n\t\t\tawait fetch(URL).then(response => {\n\t\t\t\treturn response.json();\n\t\t\t}).then(data => {\n\t\t\t\t//This is where we start to break down the data we got about the user from the DB \n\t\t\t\t//into seperate data sets (like 'pain', 'general feeling' etc')\n\n\t\t\t\t//This loop goes over every document in the DB that belongs to this user \n\t\t\t\t//and seperates each document to it's proper data set\n\t\t\t\tlet lng = data.length;\n\t\t\t\t//this makes sure we have some value here even if we didn't get back any record from the DB\n\t\t\t\t//if(lng === undefined) {lng = 0}; \n\t\t\t\tfor (var i = 0; i < lng; i++) {\n\t\t\t\t\tlet dateTimeCombo = toDate(data[i].date).toLocaleString(undefined, {\n\t\t\t\t\t\tday: 'numeric',\n\t\t\t\t\t\tmonth: 'short',\n\t\t\t\t\t\tyear: '2-digit',\n\t\t\t\t\t}) + \".\" + data[i].check;\n\t\t\t\t\tif (myLabels.includes(dateTimeCombo) === false) {\n\t\t\t\t\t\twhile (daysdifference(data[i].date, currDate) > 1) {\n\t\t\t\t\t\t\tlet tempDate = new Date(toDate(currDate));\n\t\t\t\t\t\t\ttempDate.setDate(tempDate.getDate() + 1);\n\t\t\t\t\t\t\t//this currDate works with a date string of yyyy-mm-dd\n\t\t\t\t\t\t\tcurrDate = tempDate.toLocaleString(undefined, {\n\t\t\t\t\t\t\t\tday: 'numeric',\n\t\t\t\t\t\t\t\tmonth: 'short',\n\t\t\t\t\t\t\t\tyear: '2-digit',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tmyLabels.push(currDate);\n\t\t\t\t\t\t\tif (GeneralFeelingIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataGeneralFeeling.push(GeneralFeelingLastValue);\n\t\t\t\t\t\t\t\tGeneralFeelingTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (AppetiteIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataAppetite.push(AppetiteLastValue);\n\t\t\t\t\t\t\t\tAppetiteTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (NauseaIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataNausea.push(NauseaLastValue);\n\t\t\t\t\t\t\t\tNauseaTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (BowelMovementsIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataBowelMovements.push(BowelMovementsLastValue);\n\t\t\t\t\t\t\t\tBowelMovementsTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (MotivationIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataMotivation.push(MotivationLastValue);\n\t\t\t\t\t\t\t\tMotivationTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (PainIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataPain.push(PainLastValue);\n\t\t\t\t\t\t\t\tPainTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (DizzinessIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataDizziness.push(DizzinessLastValue);\n\t\t\t\t\t\t\t\tDizzinessTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (ExhaustionIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataExhaustion.push(ExhaustionLastValue);\n\t\t\t\t\t\t\t\tExhaustionTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tGeneralFeelingIsMarked = false;\n\t\t\t\t\t\t\tAppetiteIsMarked = false;\n\t\t\t\t\t\t\tNauseaIsMarked = false;\n\t\t\t\t\t\t\tBowelMovementsIsMarked = false;\n\t\t\t\t\t\t\tMotivationIsMarked = false;\n\t\t\t\t\t\t\tPainIsMarked = false;\n\t\t\t\t\t\t\tDizzinessIsMarked = false;\n\t\t\t\t\t\t\tExhaustionIsMarked = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmyLabels.push(dateTimeCombo);\n\t\t\t\t\t\tif (currDateCombo !== dateTimeCombo && currDateCombo !== \"\") {\n\t\t\t\t\t\t\tif (GeneralFeelingIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataGeneralFeeling.push(GeneralFeelingLastValue);\n\t\t\t\t\t\t\t\tGeneralFeelingTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (AppetiteIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataAppetite.push(AppetiteLastValue);\n\t\t\t\t\t\t\t\tAppetiteTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (NauseaIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataNausea.push(NauseaLastValue);\n\t\t\t\t\t\t\t\tNauseaTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (BowelMovementsIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataBowelMovements.push(BowelMovementsLastValue);\n\t\t\t\t\t\t\t\tBowelMovementsTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (MotivationIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataMotivation.push(MotivationLastValue);\n\t\t\t\t\t\t\t\tMotivationTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (PainIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataPain.push(PainLastValue);\n\t\t\t\t\t\t\t\tPainTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (DizzinessIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataDizziness.push(DizzinessLastValue);\n\t\t\t\t\t\t\t\tDizzinessTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (ExhaustionIsMarked === false) {\n\t\t\t\t\t\t\t\tmyDataExhaustion.push(ExhaustionLastValue);\n\t\t\t\t\t\t\t\tExhaustionTexts.push(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrDate = data[i].date;\n\t\t\t\t\t\tcurrDateCombo = dateTimeCombo;\n\t\t\t\t\t\tGeneralFeelingIsMarked = false;\n\t\t\t\t\t\tAppetiteIsMarked = false;\n\t\t\t\t\t\tNauseaIsMarked = false;\n\t\t\t\t\t\tBowelMovementsIsMarked = false;\n\t\t\t\t\t\tMotivationIsMarked = false;\n\t\t\t\t\t\tPainIsMarked = false;\n\t\t\t\t\t\tDizzinessIsMarked = false;\n\t\t\t\t\t\tExhaustionIsMarked = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'GeneralFeeling') {\n\t\t\t\t\t\tmyDataGeneralFeeling.push(data[i].state);\n\t\t\t\t\t\tGeneralFeelingTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tGeneralFeelingLastValue = data[i].state;\n\t\t\t\t\t\tGeneralFeelingIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Appetite') {\n\t\t\t\t\t\tmyDataAppetite.push(data[i].state);\n\t\t\t\t\t\tAppetiteTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tAppetiteLastValue = data[i].state;\n\t\t\t\t\t\tAppetiteIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Nausea') {\n\t\t\t\t\t\tmyDataNausea.push(data[i].state);\n\t\t\t\t\t\tNauseaTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tNauseaLastValue = data[i].state;\n\t\t\t\t\t\tNauseaIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'BowelMovements') {\n\t\t\t\t\t\tmyDataBowelMovements.push(data[i].state);\n\t\t\t\t\t\tBowelMovementsTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tBowelMovementsLastValue = data[i].state;\n\t\t\t\t\t\tBowelMovementsIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Motivation') {\n\t\t\t\t\t\tmyDataMotivation.push(data[i].state);\n\t\t\t\t\t\tMotivationTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tMotivationLastValue = data[i].state;\n\t\t\t\t\t\tMotivationIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Pain') {\n\t\t\t\t\t\tmyDataPain.push(data[i].state);\n\t\t\t\t\t\tPainTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tPainLastValue = data[i].state;\n\t\t\t\t\t\tPainIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Dizziness') {\n\t\t\t\t\t\tmyDataDizziness.push(data[i].state);\n\t\t\t\t\t\tDizzinessTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tDizzinessLastValue = data[i].state;\n\t\t\t\t\t\tDizzinessIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (data[i].RecordTracking === 'Exhaustion') {\n\t\t\t\t\t\tmyDataExhaustion.push(data[i].state);\n\t\t\t\t\t\tExhaustionTexts.push(data[i].ExtraText);\n\t\t\t\t\t\tExhaustionLastValue = data[i].state;\n\t\t\t\t\t\tExhaustionIsMarked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (GeneralFeelingIsMarked === false) {\n\t\t\t\t\tmyDataGeneralFeeling.push(GeneralFeelingLastValue);\n\t\t\t\t\tGeneralFeelingTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (AppetiteIsMarked === false) {\n\t\t\t\t\tmyDataAppetite.push(AppetiteLastValue);\n\t\t\t\t\tAppetiteTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (NauseaIsMarked === false) {\n\t\t\t\t\tmyDataNausea.push(NauseaLastValue);\n\t\t\t\t\tNauseaTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (BowelMovementsIsMarked === false) {\n\t\t\t\t\tmyDataBowelMovements.push(BowelMovementsLastValue);\n\t\t\t\t\tBowelMovementsTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (MotivationIsMarked === false) {\n\t\t\t\t\tmyDataMotivation.push(MotivationLastValue);\n\t\t\t\t\tMotivationTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (PainIsMarked === false) {\n\t\t\t\t\tmyDataPain.push(PainLastValue);\n\t\t\t\t\tPainTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (DizzinessIsMarked === false) {\n\t\t\t\t\tmyDataDizziness.push(DizzinessLastValue);\n\t\t\t\t\tDizzinessTexts.push(\" \");\n\t\t\t\t}\n\t\t\t\tif (ExhaustionIsMarked === false) {\n\t\t\t\t\tmyDataExhaustion.push(ExhaustionLastValue);\n\t\t\t\t\tExhaustionTexts.push(\" \");\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t//this function is for getting user data from server for an existing user in sessionStorage\n\t\tasync function getStoredUser(id) {\n\t\t\tconsole.log(\"getStoredUser\");\n\t\t\t//await fetch('http://localhost:4000/fetch', {\n\t\t\tawait fetch('fetch', {  \n\t\t\t\tmethod: \"post\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tUserId: id\n\t\t\t\t})\n\t\t\t}).then(response => {\n\t\t\t\treturn response.json();\n\t\t\t}).then((data) => {\n\t\t\t\tconsole.log(\"Setting State\");\n\t\t\t\tif (data !== undefined) {\n\t\t\t\t\tcurrentComponent.setState({\n\t\t\t\t\t\tTrackGeneralFeeling: data.TrackingGeneralFeeling,\n\t\t\t\t\t\tTrackAppetite: data.TrackingAppetite,\n\t\t\t\t\t\tTrackNausea: data.TrackingNausea,\n\t\t\t\t\t\tTrackBowelMovements: data.TrackingBowelMovements,\n\t\t\t\t\t\tTrackMotivation: data.TrackingMotivation,\n\t\t\t\t\t\tTrackPain: data.TrackingPain,\n\t\t\t\t\t\tTrackDizziness: data.TrackingDizziness,\n\t\t\t\t\t\tTrackExhaustion: data.TrackingExhaustion,\n\t\t\t\t\t\tUserId: data._id,\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(\"Getting user data: \" + currentComponent.state.FirstName);\n\t\t\t\t}\n\t\t\t}).catch(Error => {\n\t\t\t\tconsole.log(\"Error with _ID from session: \" + Error)\n\t\t\t})\n\t\t}\n\n\n\t\t//This function uses the variables defined in function fetchUserData \n\t\t//to fill out the data sets in the Graph component\n\t\tfunction fillChartData() {\n\t\t\t//Here is where we fill in the datasets based on what the user has\n\t\t\t//currently defined\n\t\t\tlet datasetsData = [];\n\t\t\tlet datasetsText = \"\";\n\t\t\tif (currentComponent.state.TrackGeneralFeeling) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'General Feeling', data: myDataGeneralFeeling, backgroundColor: ['#e6beff'],\n\t\t\t\t\tborderColor: '#e6beff', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tif (currentComponent.state.TrackAppetite) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Appetite', data: myDataAppetite, backgroundColor: ['#911eb4'],\n\t\t\t\t\tborderColor: '#911eb4', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tif (currentComponent.state.TrackNausea) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Nausea', data: myDataNausea, backgroundColor: ['#808000'],\n\t\t\t\t\tborderColor: '#808000', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\t\t\t\t\t\t\n\t\t\tif (currentComponent.state.TrackBowelMovements) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Bowel Movements', data: myDataBowelMovements, backgroundColor: ['#9A6324'],\n\t\t\t\t\tborderColor: '#9A6324', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tif (currentComponent.state.TrackMotivation) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Motivation', data: myDataMotivation, backgroundColor: ['#4363d8'],\n\t\t\t\t\tborderColor: '#4363d8', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\t\t\t\t\t\t\t\n\t\t\tif (currentComponent.state.TrackPain) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Pain', data: myDataPain, backgroundColor: ['#42d4f4'],\n\t\t\t\t\tborderColor: '#42d4f4', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tif (currentComponent.state.TrackDizziness) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Dizziness', data: myDataDizziness, backgroundColor: ['#469990'],\n\t\t\t\t\tborderColor: '#469990', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\t\t\t\n\t\t\tif (currentComponent.state.TrackExhaustion) {\n\t\t\t\tdatasetsText = {\n\t\t\t\t\tlabel: 'Exhaustion', data: myDataExhaustion, backgroundColor: ['#000075'],\n\t\t\t\t\tborderColor: '#000075', borderWidth: 7, fill: false, pointRadius: 7, pointHoverRadius: 7,\n\t\t\t\t\tpointHitRadius: 7\n\t\t\t\t};\n\t\t\t\tdatasetsData.push(datasetsText);\n\t\t\t}\n\t\t\tlet myChart = new Chart(node, {\n\t\t\t\ttype: \"line\",\n\t\t\t\tdata: {\n\t\t\t\t\tlabels: myLabels,\n\t\t\t\t\tdatasets: datasetsData\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\tlegend: { position: \"top\", labels: { boxWidth: 10 } },\n\t\t\t\t\t'onClick': (evt, item) => {\n\t\t\t\t\t\tvar thisPoint = myChart.getElementAtEvent(evt)[0];\n\t\t\t\t\t\tif (thisPoint !== undefined) {\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"General Feeling\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your General Feeling you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(GeneralFeelingTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Appetite\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Appetite you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(AppetiteTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Nausea\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Nausea you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(NauseaTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"BowelMovements\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your BowelMovements you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(BowelMovementsTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Motivation\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Motivation you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(MotivationTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Pain\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Pain you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(PainTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Dizziness\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Dizziness you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(DizzinessTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\tif (thisPoint._chart.legend.legendItems[thisPoint._datasetIndex].text === \"Exhaustion\") {\n\t\t\t\t\t\t\t\tlet addedText = \"On \" + myLabels[thisPoint._index] + \", concerning your Exhaustion you wrote: \";\n\t\t\t\t\t\t\t\tcurrentComponent.renderExtraText(ExhaustionTexts, thisPoint._index, addedText);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tscales: {\n\t\t\t\t\t\tscaleOverride: true,\n\t\t\t\t\t\tscaleSteps: 1,\n\t\t\t\t\t\tscaleStepWidth: 1,\n\t\t\t\t\t\tscaleStartValue: 0,\n\t\t\t\t\t\tyAxes: [{\n\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\t\tmax: 5,\n\t\t\t\t\t\t\t\tmin: 1,\n\t\t\t\t\t\t\t\tstepSize: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}],\n\t\t\t\t\t\txAxes: [{\n\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\tminRotation: 0,\n\t\t\t\t\t\t\t\tmaxRotation: 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}]\n\t\t\t\t\t},\n\t\t\t\t\t// Container for pan options\n\t\t\t\t\tpan: {\n\t\t\t\t\t\t// Boolean to enable panning\n\t\t\t\t\t\tenabled: true,\n\n\t\t\t\t\t\t// Panning directions. Remove the appropriate direction to disable \n\t\t\t\t\t\t// Eg. 'y' would only allow panning in the y direction\n\t\t\t\t\t\tmode: 'x'\n\t\t\t\t\t},\n\n\t\t\t\t\t// Container for zoom options\n\t\t\t\t\tzoom: {\n\t\t\t\t\t\t// Boolean to enable zooming\n\t\t\t\t\t\tenabled: true,\n\n\t\t\t\t\t\t// Zooming directions. Remove the appropriate direction to disable \n\t\t\t\t\t\t// Eg. 'y' would only allow zooming in the y direction\n\t\t\t\t\t\tmode: 'x',\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t//This is where it all comes together.\n\t\t//We run the functions one after the other in order:\n\t\t//first we get the user information - getStoredUser\n\t\t//then all the user records - fetchUserData\n\t\tasync function commitGraph(UserId) {\n\t\t\tawait getStoredUser(UserId);\n\t\t\tawait fetchUserData(UserId);\n\t\t\tfillChartData();\n\t\t}\n\n\t\tlet userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n\t\tconsole.dir(userFromSession);\n\t\t//If I have a valid sessionStorage then I start all calls from commitGraph \n\t\tif (userFromSession != null) {\n\t\t\tconsole.log(\"there is a user saved in this session\");\n\t\t\tconsole.log(\"call data for \" + userFromSession);\n\t\t\tcommitGraph(userFromSession);\n\t\t}\n\t\telse {\n\t\t\tthis.setState({ redirectLogin: true });\n\t\t\tconsole.log(\"there is a NO user saved in this session\");\n\t\t}\n\n\t\t//Now that the Chart is full of Data we can move on to the rendering\n\t}\n\n\trenderRedirect() {\n\t\tif (this.state.redirectLogin) {\n\t\t  console.log(\"renderRedirect Login\");\n\t\t  return <Redirect method=\"post\" to={\"/login\"}></Redirect>\n\t\t}\n\t  }\t\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"pageContent\" id=\"pageContent\">\n\t\t\t\t<canvas className=\"graphContent\"\n\t\t\t\t\t// style={{ width: 300, height: 300 }}\n\t\t\t\t\tref={node => (this.node = node)}\n\t\t\t\t/>\n\t\t\t\t<div className=\"extraText\">\n\t\t\t\t\t{this.state.extraText}\n\t\t\t\t</div>\n\t\t\t\t{this.renderRedirect()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Graph;","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nclass RadioContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //these variables tell me what symptoms I'm tracking\n      TrackGeneralFeeling: false,\n      TrackAppetite: false,\n      TrackNausea: false,\n      TrackBowelMovements: false,\n      TrackMotivation: false,\n      TrackPain: false,\n      TrackDizziness: false,\n      TrackExhaustion: false,\n      //these variables tell me what is the state of each symptom\n      GeneralFeeling: \"3\",\n      Appetite: \"3\",\n      Nausea: \"3\",\n      BowelMovements: \"3\",\n      Motivation: \"3\",\n      Pain: \"3\",\n      Dizziness: \"3\",\n      Exhaustion: \"3\",\n      //these variables are used in the creation of a new symptom tracking record\n      FirstName: '',\n      LastName: '',\n      UserId: '',\n      check: '',\n      currentDate: '',\n      currentTime: '',\n      conditions: '', \n      treatments: '',\n      //these variables are used in the redirection assosiated with the buttons at thye bottom of the page\n      redirectBack: false,\n      redirectNext: false,\n      redirectLogin: false\n    }\n    this.renderRedirect = this.renderRedirect.bind(this);\n    this.setRedirect = this.setRedirect.bind(this);\n    this.BackHandler = this.BackHandler.bind(this);\n    this.NextHandler = this.NextHandler.bind(this);\n    this.setGeneralFeeling = this.setGeneralFeeling.bind(this);\n    this.setAppetite = this.setAppetite.bind(this);\n    this.setNausea = this.setNausea.bind(this);\n    this.setBowelMovements = this.setBowelMovements.bind(this);\n    this.setMotivation = this.setMotivation.bind(this);\n    this.setPain = this.setPain.bind(this);\n    this.setDizziness = this.setDizziness.bind(this);\n    this.setExhaustion = this.setExhaustion.bind(this);\n    this.getStoredUser = this.getStoredUser.bind(this);\n    this.getCurrentDate = this.getCurrentDate.bind(this);\n    this.getCurrentTime = this.getCurrentTime.bind(this);\n  }\n\n  getCurrentDate(separator = '-') {\n\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date}`;\n  }\n\n  getCurrentTime(separator = ':') {\n\n    let newTime = new Date();\n    let hours = newTime.getHours();\n    let minutes = newTime.getMinutes();\n\n    return `${hours}${separator}${minutes}`;\n  }\n\n  //this function is for getting user data from server for an existing user in sessionStorage\n  async getStoredUser(id) {\n    console.log(\"getStoredUser\");\n    //await fetch('http://localhost:4000/fetch', {\n    await fetch('fetch', {  \n      method: \"post\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: id\n      })\n    }).then(response => {\n      return response.json();\n    }).then((data) => {\n      console.log(\"Setting State\");\n      if (data !== undefined) {\n        this.setState({\n          TrackGeneralFeeling: data.TrackingGeneralFeeling,\n          TrackAppetite: data.TrackingAppetite,\n          TrackNausea: data.TrackingNausea,\n          TrackBowelMovements: data.TrackingBowelMovements,\n          TrackMotivation: data.TrackingMotivation,\n          TrackPain: data.TrackingPain,\n          TrackDizziness: data.TrackingDizziness,\n          TrackExhaustion: data.TrackingExhaustion,\n          UserId: data._id,\n          FirstName: data.FirstName,\n          LastName: data.LastName,\n          check: '',\n          conditions: data.conditions, \n          treatments: data.treatments,\n          currentDate: this.getCurrentDate(),\n          currentTime: this.getCurrentTime()\n        });\n        console.log(\"Getting user data: \" + this.state.FirstName + \" \" + this.state.LastName + \" \" + this.state.currentDate + \" \" + this.state.currentTime);\n      }\n    }).catch(Error => {\n      console.log(\"Error with _ID from session: \" + Error)\n    })\n  }\n\n  setGeneralFeeling(event) {\n    //console.log(\"GeneralFeeling: \" + event.target.value);\n    this.setState({ GeneralFeeling: event.target.value })\n  }\n\n  setAppetite(event) {\n    //console.log(\"Appetite: \" + event.target.value);\n    this.setState({ Appetite: event.target.value })\n  }\n\n  setNausea(event) {\n    //console.log(\"Nausea: \" + event.target.value);\n    this.setState({ Nausea: event.target.value })\n  }\n\n  setBowelMovements(event) {\n    //console.log(\"BowelMovements: \" + event.target.value);\n    this.setState({ BowelMovements: event.target.value })\n  }\n\n  setMotivation(event) {\n    //console.log(\"Motivation: \" + event.target.value);\n    this.setState({ Motivation: event.target.value })\n  }\n\n  setPain(event) {\n    //console.log(\"Pain: \" + event.target.value);\n    this.setState({ Pain: event.target.value })\n  }\n\n  setDizziness(event) {\n    //console.log(\"Dizziness: \" + event.target.value);\n    this.setState({ Dizziness: event.target.value })\n  }\n\n  setExhaustion(event) {\n    //console.log(\"Exhaustion: \" + event.target.value);\n    this.setState({ Exhaustion: event.target.value })\n  }\n\n  //this is the initial check if we have a sessionStorage that holds a user\n  async componentWillMount() {\n    //First we'll check if the sessionStorage has a user id saved\n    let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n    console.dir(userFromSession);\n    //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n    if (userFromSession != null) {\n      console.log(\"there is a user saved in this session\");\n      this.state.UserId = userFromSession;\n      await this.getStoredUser(userFromSession);\n    }\n    //if I do not have sessionStorage then I redirect to the login page\n    else {\n      this.setState({ redirectLogin: true });\n      console.log(\"there is a NO user saved in this session\");\n    }\n  }\n\n  //this function is for setting the symptom tracking variables for the user in the DB\n  //once we pressed 'Next'\n  async WriteRecord(id) {\n    console.log(\"Update Symptom State\");\n    //await fetch('http://localhost:4000/set', {\n    await fetch('set', {  \n      method: \"put\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: id,\n        TrackGeneralFeeling: this.state.TrackGeneralFeeling,\n        TrackAppetite: this.state.TrackAppetite,\n        TrackNausea: this.state.TrackNausea,\n        TrackBowelMovements: this.state.TrackBowelMovements,\n        TrackMotivation: this.state.TrackMotivation,\n        TrackPain: this.state.TrackPain,\n        TrackDizziness: this.state.TrackDizziness,\n        TrackExhaustion: this.state.TrackExhaustion,\n        GeneralFeeling: this.state.GeneralFeeling,\n        Appetite: this.state.Appetite,\n        Nausea: this.state.Nausea,\n        BowelMovements: this.state.BowelMovements,\n        Motivation: this.state.Motivation,\n        Pain: this.state.Pain,\n        Dizziness: this.state.Dizziness,\n        Exhaustion: this.state.Exhaustion,\n        FirstName: this.state.FirstName,\n        LastName: this.state.LastName,\n        check: '',\n        currentDate: this.state.currentDate,\n        currentTime: this.state.currentTime,\n        conditions: this.state.conditions, \n        treatments: this.state.treatments\n      }),\n      success: (res) => {\n        console.log(res);\n        console.log(\"this is a WriteRecord success\");\n      }\n    })\n  }\n\n  BackHandler() {\n    this.setState({ redirectBack: true });\n  }\n\n  NextHandler() {\n    console.log(this.GeneralFeeling + \" \" + this.Appetite);\n    let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n    console.dir(userFromSession);\n    //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n    if (userFromSession != null) {\n      this.setState({ UserId: userFromSession });\n      this.WriteRecord(userFromSession);\n    }\n    this.setState({ redirectNext: true });\n  }\n\n  renderRedirect() {\n    if (this.state.redirectBack) {\n      console.log(\"renderRedirect Back\");\n      return <Redirect method=\"post\" to={\"/tracksymptoms\"}></Redirect>\n    }\n    if (this.state.redirectNext) {\n      console.log(\"renderRedirect Next\");\n      return <Redirect method=\"post\" to={\"/addText\"}></Redirect>\n    }\n    if (this.state.redirectLogin) {\n      console.log(\"renderRedirect Login\");\n      return <Redirect method=\"post\" to={\"/login\"}></Redirect>\n    }\n  }\n\n  setRedirect() {\n    console.log(\"setRedirect\");\n    this.setState({\n      redirect: true\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"pageContent\" id=\"pageContent\">\n        <React.Fragment>\n          <div onChange={event => this.setGeneralFeeling(event)} style={{ display: this.state.TrackGeneralFeeling ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your General Feeling </div><br />\n            <label><input type='radio' value='1' name='GeneralFeeling' checked={this.state.GeneralFeeling === '1'} onChange={this.setGeneralFeeling}  style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Feeling level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='GeneralFeeling' checked={this.state.GeneralFeeling === '2'} onChange={this.setGeneralFeeling} style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Feeling level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='GeneralFeeling' checked={this.state.GeneralFeeling === '3'} onChange={this.setGeneralFeeling} style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Feeling level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='GeneralFeeling' checked={this.state.GeneralFeeling === '4'} onChange={this.setGeneralFeeling} style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Feeling level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='GeneralFeeling' checked={this.state.GeneralFeeling === '5'} onChange={this.setGeneralFeeling} style={{ display: 'none' }}/>\n              <img src={(this.state.GeneralFeeling === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Feeling level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setAppetite(event)} style={{ display: this.state.TrackAppetite ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Appetite </div><br />\n            <label><input type='radio' value='1' name='Appetite' checked={this.state.Appetite === '1'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Appetite level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Appetite' checked={this.state.Appetite === '2'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Appetite level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Appetite' checked={this.state.Appetite === '3'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Appetite level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Appetite' checked={this.state.Appetite === '4'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Appetite level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Appetite' checked={this.state.Appetite === '5'} onChange={this.setAppetite} style={{ display: 'none' }}/>\n              <img src={(this.state.Appetite === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Appetite level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setNausea(event)} style={{ display: this.state.TrackNausea ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Nausea </div><br />\n            <label><input type='radio' value='1' name='Nausea' checked={this.state.Nausea === '1'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Nausea level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Nausea' checked={this.state.Nausea === '2'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Nausea level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Nausea' checked={this.state.Nausea === '3'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Nausea level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Nausea' checked={this.state.Nausea === '4'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Nausea level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Nausea' checked={this.state.Nausea === '5'} onChange={this.setNausea} style={{ display: 'none' }}/>\n              <img src={(this.state.Nausea === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Nausea level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setBowelMovements(event)} style={{ display: this.state.TrackBowelMovements ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Bowel Movements </div><br />\n            <label><input type='radio' value='1' name='BowelMovements' checked={this.state.BowelMovements === '1'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Bowel Movements level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='BowelMovements' checked={this.state.BowelMovements === '2'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Bowel Movements level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='BowelMovements' checked={this.state.BowelMovements === '3'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Bowel Movements level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='BowelMovements' checked={this.state.BowelMovements === '4'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Bowel Movements level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='BowelMovements' checked={this.state.BowelMovements === '5'} onChange={this.setBowelMovements} style={{ display: 'none' }}/>\n              <img src={(this.state.BowelMovements === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Bowel Movements level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setMotivation(event)} style={{ display: this.state.TrackMotivation ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Motivation </div><br />\n            <label><input type='radio' value='1' name='Motivation' checked={this.state.Motivation === '1'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Motivation level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Motivation' checked={this.state.Motivation === '2'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Motivation level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Motivation' checked={this.state.Motivation === '3'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Motivation level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Motivation' checked={this.state.Motivation === '4'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Motivation level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Motivation' checked={this.state.Motivation === '5'} onChange={this.setMotivation} style={{ display: 'none' }}/>\n              <img src={(this.state.Motivation === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Motivation level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setPain(event)} style={{ display: this.state.TrackPain ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Pain </div><br />\n            <label><input type='radio' value='1' name='Pain' checked={this.state.Pain === '1'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Pain level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Pain' checked={this.state.Pain === '2'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Pain level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Pain' checked={this.state.Pain === '3'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Pain level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Pain' checked={this.state.Pain === '4'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Pain level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Pain' checked={this.state.Pain === '5'} onChange={this.setPain} style={{ display: 'none' }}/>\n              <img src={(this.state.Pain === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Pain level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setDizziness(event)} style={{ display: this.state.TrackDizziness ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Dizziness </div><br />\n            <label><input type='radio' value='1' name='Dizziness' checked={this.state.Dizziness === '1'} onChange={this.setDizziness} style={{ display: 'none' }}/>\n              <img src={(this.state.Dizziness === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Dizziness level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Dizziness' checked={this.state.Dizziness === '2'} onChange={this.setDizziness} style={{ display: 'none' }}/>\n              <img src={(this.state.Dizziness === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Dizziness level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Dizziness' checked={this.state.Dizziness === '3'} onChange={this.setDizziness} style={{ display: 'none' }}/>\n              <img src={(this.state.Dizziness === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Dizziness level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Dizziness' checked={this.state.Dizziness === '4'} onChange={this.setDizziness} style={{ display: 'none' }}/>\n              <img src={(this.state.Dizziness === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Dizziness level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Dizziness' checked={this.state.Dizziness === '5'} onChange={this.setDizziness}style={{ display: 'none' }} />\n              <img src={(this.state.Dizziness === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Dizziness level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div onChange={event => this.setExhaustion(event)} style={{ display: this.state.TrackExhaustion ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Track Your Exhaustion </div><br />\n            <label><input type='radio' value='1' name='Exhaustion' checked={this.state.Exhaustion === '1'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '1') ? '../img/1s.png' : '../img/1w.png'} alt=\"Exhaustion level 1\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='2' name='Exhaustion' checked={this.state.Exhaustion === '2'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '2') ? '../img/2s.png' : '../img/2w.png'} alt=\"Exhaustion level 2\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='3' name='Exhaustion' checked={this.state.Exhaustion === '3'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '3') ? '../img/3s.png' : '../img/3w.png'} alt=\"Exhaustion level 3\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='4' name='Exhaustion' checked={this.state.Exhaustion === '4'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '4') ? '../img/4s.png' : '../img/4w.png'} alt=\"Exhaustion level 4\" style={{ marginRight: '10px' }}/></label>\n            <label><input type='radio' value='5' name='Exhaustion' checked={this.state.Exhaustion === '5'} onChange={this.setExhaustion} style={{ display: 'none' }}/>\n              <img src={(this.state.Exhaustion === '5') ? '../img/5s.png' : '../img/5w.png'} alt=\"Exhaustion level 5\" style={{ marginRight: '10px' }}/></label>\n          </div>\n          <div className=\"buttonArea\">\n            <input id=\"button\" className=\"button buttonBack\" type=\"submit\" name=\"button\" value=\"Back\"\n              onClick={(e) => this.BackHandler()} />\n            <input id=\"button\" className=\"button buttonNext\" type=\"submit\" name=\"button\" value=\"Next\"\n              onClick={(e) => this.NextHandler()} />\n            {this.renderRedirect()}\n          </div>\n        </React.Fragment>\n      </div>\n    )\n  }\n}\n\nexport default RadioContainer;","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nclass TextContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //these variables tell me what symptoms I'm tracking\n      TrackGeneralFeeling: false,\n      TrackAppetite: false,\n      TrackNausea: false,\n      TrackBowelMovements: false,\n      TrackMotivation: false,\n      TrackPain: false,\n      TrackDizziness: false,\n      TrackExhaustion: false,\n      //these variables are for the added text of each tracking record \n      GeneralFeelingText: '',\n      AppetiteText: '',\n      NauseaText: '',\n      BowelMovementsText: '',\n      MotivationText: '',\n      PainText: '',\n      DizzinessText: '',\n      ExhaustionText: '',      \n      //these variables are used in the redirection assosiated with the buttons at thye bottom of the page\n      UserId:'',\n      redirectBack: false,\n      redirectNext: false,\n      redirectLogin: false\n    }\n    this.renderRedirect = this.renderRedirect.bind(this);\n    this.setRedirect = this.setRedirect.bind(this);\n    this.BackHandler = this.BackHandler.bind(this);\n    this.NextHandler = this.NextHandler.bind(this);\n    this.setGeneralFeelingText = this.setGeneralFeelingText.bind(this);\n    this.setAppetiteText = this.setAppetiteText.bind(this);\n    this.setNauseaText = this.setNauseaText.bind(this);\n    this.setBowelMovementsText = this.setBowelMovementsText.bind(this);\n    this.setMotivationText = this.setMotivationText.bind(this);\n    this.setPainText = this.setPainText.bind(this);\n    this.setDizzinessText = this.setDizzinessText.bind(this);\n    this.setExhaustionText = this.setExhaustionText.bind(this);\n    this.getStoredUser = this.getStoredUser.bind(this);\n  }\n\n  //this function is for getting user data from server for an existing user in sessionStorage\n  async getStoredUser(id) {\n    console.log(\"getStoredUser\");\n    //await fetch('http://localhost:4000/fetch', {\n    await fetch('fetch', {  \n      method: \"post\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: id\n      })\n    }).then(response => {\n      return response.json();\n    }).then((data) => {\n      console.log(\"Setting State\");\n      if (data !== undefined) {\n        this.setState({\n          TrackGeneralFeeling: data.TrackingGeneralFeeling,\n          TrackAppetite: data.TrackingAppetite,\n          TrackNausea: data.TrackingNausea,\n          TrackBowelMovements: data.TrackingBowelMovements,\n          TrackMotivation: data.TrackingMotivation,\n          TrackPain: data.TrackingPain,\n          TrackDizziness: data.TrackingDizziness,\n          TrackExhaustion: data.TrackingExhaustion,\n          UserId: data._id,\n        });\n      }\n    }).catch(Error => {\n      console.log(\"Error with _ID from session: \" + Error)\n    })\n  }\n\n  setGeneralFeelingText(event) {\n    this.setState({ GeneralFeelingText: event.target.value })\n  }\n\n  setAppetiteText(event) {\n    this.setState({ AppetiteText: event.target.value })\n  }\n\n  setNauseaText(event) {\n    this.setState({ NauseaText: event.target.value })\n  }\n\n  setBowelMovementsText(event) {\n    this.setState({ BowelMovementsText: event.target.value })\n  }\n\n  setMotivationText(event) {\n    this.setState({ MotivationText: event.target.value })\n  }\n\n  setPainText(event) {\n    this.setState({ PainText: event.target.value })\n  }\n\n  setDizzinessText(event) {\n    this.setState({ DizzinessText: event.target.value })\n  }\n\n  setExhaustionText(event) {\n    this.setState({ ExhaustionText: event.target.value })\n  }\n\n  //this is the initial check if we have a sessionStorage that holds a user\n  async componentWillMount() {\n    //First we'll check if the sessionStorage has a user id saved\n    let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n    console.dir(userFromSession);\n    //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n    if (userFromSession != null) {\n      console.log(\"there is a user saved in this session\");\n      this.state.UserId = userFromSession;\n      await this.getStoredUser(userFromSession);\n    }\n    //if I do not have sessionStorage then I redirect to the login page\n    else {\n      this.setState({ redirectLogin: true });\n      console.log(\"there is a NO user saved in this session\");\n    }\n  }\n\n  //this function is for adding the text to the last appropriate record in user records\n  //once we pressed 'Next'\n  async WriteRecord(id) {\n    console.log(\"Update Symptom State\");\n    //await fetch('http://localhost:4000/addText', {\n    await fetch('addText', {  \n      method: \"put\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: id,\n        TrackGeneralFeeling: this.state.TrackGeneralFeeling,\n        TrackAppetite: this.state.TrackAppetite,\n        TrackNausea: this.state.TrackNausea,\n        TrackBowelMovements: this.state.TrackBowelMovements,\n        TrackMotivation: this.state.TrackMotivation,\n        TrackPain: this.state.TrackPain,\n        TrackDizziness: this.state.TrackDizziness,\n        TrackExhaustion: this.state.TrackExhaustion,\n        GeneralFeelingText: this.state.GeneralFeelingText,\n        AppetiteText: this.state.AppetiteText,\n        NauseaText: this.state.NauseaText,\n        BowelMovementsText: this.state.BowelMovementsText,\n        MotivationText: this.state.MotivationText,\n        PainText: this.state.PainText,\n        DizzinessText: this.state.DizzinessText,\n        ExhaustionText: this.state.ExhaustionText,\n      }),\n      success: (res) => {\n        console.log(res);\n        console.log(\"this is a WriteRecord success\");\n      }\n    })\n  }\n\n\n  BackHandler() {\n    this.setState({ redirectBack: true });\n  }\n\n  NextHandler() {\n    console.log(this.GeneralFeeling + \" \" + this.Appetite);\n    let userFromSession = JSON.parse(window.sessionStorage.getItem('id'));\n    console.dir(userFromSession);\n    //If I have a valid sessionStorage then I retrive the user data using the getStoredUser function \n    if (userFromSession != null) {\n      this.setState({ UserId: userFromSession });\n      this.WriteRecord(userFromSession);\n    }\n    this.setState({ redirectNext: true });\n  }\n\n  renderRedirect() {\n    if (this.state.redirectBack) {\n      console.log(\"renderRedirect Back\");\n      return <Redirect method=\"post\" to={\"/selectState\"}></Redirect>\n    }\n    if (this.state.redirectNext) {\n      console.log(\"renderRedirect Next\");\n      return <Redirect method=\"post\" to={\"/graph\"}></Redirect>\n    }\n    if (this.state.redirectLogin) {\n      console.log(\"renderRedirect Login\");\n      return <Redirect method=\"post\" to={\"/login\"}></Redirect>\n    }\n  }\n\n  setRedirect() {\n    console.log(\"setRedirect\");\n    this.setState({\n      redirect: true\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"pageContent\" id=\"pageContent\">\n        <React.Fragment>\n          <div onChange={event => this.setGeneralFeelingText(event)} style={{ display: this.state.TrackGeneralFeeling ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your General Feeling record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='GeneralFeelingText' onChange={this.setGeneralFeelingText}/>\n          </div>\n          <div onChange={event => this.setAppetiteText(event)} style={{ display: this.state.TrackAppetite ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Appetite record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='AppetiteText' onChange={this.setAppetiteText}/>\n          </div>\n          <div onChange={event => this.setNauseaText(event)} style={{ display: this.state.TrackNausea ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Nausea record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='NauseaText' onChange={this.setNauseaText}/>\n          </div>\n          <div onChange={event => this.setBowelMovementsText(event)} style={{ display: this.state.TrackBowelMovements ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Bowel Movements record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='BowelMovementsText' onChange={this.setBowelMovementsText}/>\n          </div>          \n          <div onChange={event => this.setMotivationText(event)} style={{ display: this.state.TrackMotivation ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Motivation record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='MotivationText' onChange={this.setMotivationText}/>\n          </div>  \n          <div onChange={event => this.setPainText(event)} style={{ display: this.state.TrackPain ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Pain record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='PainText' onChange={this.setPainText}/>\n          </div> \n          <div onChange={event => this.setDizzinessText(event)} style={{ display: this.state.TrackDizziness ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Dizziness record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='DizzinessText' onChange={this.setDizzinessText}/>\n          </div> \n          <div onChange={event => this.setExhaustionText(event)} style={{ display: this.state.TrackExhaustion ? 'block' : 'none' }}>\n            <div className=\"pageTopText\"> Add text to your Exhaustion record</div><br />\n            <textarea rows=\"4\" cols=\"30\" name='ExhaustionText' onChange={this.setExhaustionText}/>\n          </div> \n          <div className=\"buttonArea\">\n            <input id=\"button\" className=\"button buttonBack\" type=\"submit\" name=\"button\" value=\"Back\"\n              onClick={(e) => this.BackHandler()} />\n            <input id=\"button\" className=\"button buttonNext\" type=\"submit\" name=\"button\" value=\"Next\"\n              onClick={(e) => this.NextHandler()} />\n            {this.renderRedirect()}\n          </div>\n        </React.Fragment>\n      </div>\n    )\n  }\n}\n\nexport default TextContainer;","import React from \"react\";\n\nconst TextArea = props => (\n  <div className=\"form-area\">\n    <label className=\"form-label pageTopText\">{props.title}</label>\n    <textarea\n      className=\"form-control\"\n      name={props.name}\n      rows={props.rows}\n      cols={props.cols}\n      value={props.value}\n      onChange={props.onChange}\n      placeholder={props.placeholder}\n    />\n  </div>\n);\n\nexport default TextArea;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Input from \"../Commons/comon.Input\";\nimport TextArea from \"../Commons/comon.TextArea\";\nimport Button from \"../Commons/comon.Button\";\n\n//Form example taken from https://codesandbox.io/embed/x8omy0p9z\n\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        FirstName: \"\",\n        LastName: '', \n        userName: '', \n        mail: '', \n        password: '',\n        conditions: '',\n        treatments: '',\n        TrackingTime_1: '', \n        TrackingTime_2: '',\n        UserId:''\n      },\n      redirectBack: false,\n      redirectNext: false\n    }\n    this.renderRedirect = this.renderRedirect.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(e) {\n    //console.log(\"Inside handleInput\");\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          [name]: value\n        }\n      })//,\n      //() => console.log(this.state.newUser)\n    );\n  }\n\n  //this function is for getting user data from server for an new login user in login.js\n    //using the passed username and password the user entered in the login.js page\n    async loginHandler(SentUserName, SentPassword){\n      console.log(\"loginHandler\");\n      console.log(SentUserName);\n      //await fetch('http://localhost:4000/fetch', {\n      await fetch('fetch', {       \n          method: \"post\",\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n              username: SentUserName,\n              password: SentPassword\n          })\n      }).then(response => {\n          console.log(response);\n          return response.json();\n          }).then((data) => {\n              if (data !== undefined) {\n                  this.setState({ \n                      UserId: data._id});\n                  console.log(\"got data from registration: \" + data._id);\n                  //found registration user - write to sessionStorage\n                  window.sessionStorage.setItem('id', JSON.stringify(data._id));\n                  //user found and saved in session - go to tracksymptoms page next\n                  this.setState({ redirectNext: true });\n              }\n          }).catch(Error => {\n          console.log(\"Error with user + pass from registration: \" + Error)\n      })\n  }\n\n  async handleFormSubmit(e) {\n    e.preventDefault();\n    let userData = this.state.newUser;\n\n    console.log(\"Create New User\");\n    //await fetch('http://localhost:4000/newUser', {\n    await fetch('newUser', {  \n      method: \"put\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData),\n      // success: (res) => {\n      //   console.log(res);\n      //   console.log(\"this is a new user registration success\");\n      //   this.loginHandler(this.state.newUser.userName, this.state.newUser.password);\n      // }\n    }).then(response => {\n      console.log(response);\n      return response.json();\n      }).then((data) => {\n          if (data !== undefined) {\n            this.setState({\n              newUser: {\n                userName: data.value.userName, \n                password: data.value.password,\n                UserId: data.value._id\n              }\n            });\n            console.log(\"this is a new user registration success with UserId: \" + this.state.newUser.userName + \" \" + this.state.newUser.password);\n            this.loginHandler(this.state.newUser.userName, this.state.newUser.password);\n          }\n      }).catch(Error => {\n      console.log(\"Error with user + pass from registration: \" + Error)\n    })\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      newUser: {\n        FirstName: \"\",\n        LastName: '', \n        userName: '', \n        mail: '', \n        password: '',\n        conditions: '',\n        treatments: '',\n        TrackingTime_1: '', \n        TrackingTime_2: '',\n        UserId:''\n      }\n    });\n  }\n\n  renderRedirect() {\n    if (this.state.redirectNext) {\n      console.log(\"renderRedirect Next\");\n      return <Redirect method=\"post\" to={\"/tracksymptoms\"}></Redirect>\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"pageContent\" id=\"pageContent\">\n        <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n          {/* First Name */}\n          <Input typeinput={\"text\"} title={\"First Name:\"} name={\"FirstName\"}\n                 value={this.state.newUser.FirstName} placeholder={\"Enter your first name\"}\n                 onChange={this.handleInput} required/>{\" \"}\n          {/* Last Name */}\n          <Input typeinput={\"text\"} title={\"Last Name:\"} name={\"LastName\"}\n                 value={this.state.newUser.LastName} placeholder={\"Enter your last name\"}\n                 onChange={this.handleInput} required/>{\" \"} \n          {/* User Name */}\n          <Input typeinput={\"text\"} title={\"User Name:\"} name={\"userName\"}\n                 value={this.state.newUser.userName} placeholder={\"Enter your user name\"}\n                 onChange={this.handleInput} required/>{\" \"}                 \n          {/* Email */}\n          <Input typeinput={\"text\"} title={\"Email:\"} name={\"mail\"}\n                 value={this.state.newUser.mail} placeholder={\"Enter your email\"}\n                 onChange={this.handleInput} required/>{\" \"}\n          {/* Password */}\n          <Input typeinput={\"text\"} title={\"Password:\"} name={\"password\"}\n                 value={this.state.newUser.password} placeholder={\"Enter your password\"}\n                 onChange={this.handleInput} required/>{\" \"}\n          {/* conditions */}                 \n          <TextArea title={\"Conditions:\"} rows={4} value={this.state.newUser.conditions}\n                    name={\"conditions\"} onChange={this.handleInput}\n                    placeholder={\"Please enter all your current conditions seperated by a comma\"}\n               />\n          {/* treatments */}                 \n          <TextArea title={\"Treatments:\"} rows={4} value={this.state.newUser.treatments}\n                    name={\"treatments\"} onChange={this.handleInput}\n                    placeholder={\"Please enter all your current treatments seperated by a comma\"}\n               />\n          {/* Clear the form */}\n          <Button className=\"button\" action={this.handleClearForm} type={\"secondary\"} title={\"  Clear  \"} />{\" \"}\n          {/*Submit */}      \n          <Button className=\"button\" action={this.handleFormSubmit} type={\"primary\"} title={\"Submit\"} />{\" \"}\n        </form>\n        {this.renderRedirect()}\n      </div>\n    )\n  }\n}\n\nexport default RegistrationForm;","// import ReactDOM from 'react-dom';\nimport React from 'react';\n// import the CSS';\nimport '../index.css';\n\n/*Page is where I define the different pages */\nimport Page from '../Pages/page.Page';\n/*login is where the user initially logs in */\nimport login from '../Pages/page.login';\n/*Symptoms is where the user decides what symptoms to track*/\nimport Symptoms from '../Pages/page.symptoms';\n/*Graph is where I define the graph class */\nimport Graph from '../Pages/page.graph';\n/*SelectState is where I allow to select your current state (1-5) */\nimport SelectState from '../Pages/page.selectState';\n/*addText is where I add the extra text for each of the states you follow */\nimport addText from '../Pages/page.addText';\n/*RegistrationForm is where we register a new user */\nimport RegistrationForm from '../Pages/page.registration';\n/*BrowserRouter and so on are elements of react-router-dom to enable Routing  */\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\n\nclass Navbar extends React.Component {\n    render() {\n        let cName;\n        if (this.props.isMenuOpen) { cName = \"sidebarMenuShadow\" }\n        else { cName = \"\" }\n\n        return (\n            <Router>\n                <div>\n                    <div className=\"header\">\n                        <div className=\"headerText\"><span>IFEELU</span></div>\n                        <div className=\"logo\">\n                            <span>\n                            <a href=\"https://ifeelu-6133.nodechef.com/\">\n                                <img src=\"https://drive.google.com/uc?id=14MW9Z9pz9of-krcV5qLRLs_gvjmE1Sny\" alt=\"IFeelU Logo\" />\n                            </a>\n                            </span>\n                        </div>\n                    </div>\n                    <input type=\"checkbox\" className=\"openSidebarMenu\" id=\"openSidebarMenu\"\n                        /*setState changes the state and re-renders the page on changes */\n                        onClick={this.props.menuState} checked={this.props.isMenuOpen}\n                        onChange={this.props.menuState}/>\n                    <label htmlFor=\"openSidebarMenu\" className=\"sidebarIconToggle\">\n                        <div className=\"spinner diagonal part-1\"></div>\n                        <div className=\"spinner horizontal\"></div>\n                        <div className=\"spinner diagonal part-2\"></div>\n                    </label>\n                    {/* {console.log(this.state.isToggleOn + \" \" + cName)} */}\n                    <div id=\"sidebarMenu\" className={cName}>\n                        <ul className=\"sidebarMenuInner\">\n                            {/*<Link> changes the URL*/}\n                            <li onClick={this.props.menuState}>\n                                <Link to={`/`}>Barak Brudo <span>Web Developer</span></Link></li>\n                            <li onClick={this.props.menuState}>\n                                <Link to={`/graph`}>Graph</Link></li>\n                            <li onClick={this.props.menuState}>\n                               {/* <Route path='/login/:id' exact={true} component={login} /> */}\n                                <Link to={`/login`}>Login</Link></li>\n                            <li onClick={this.props.menuState}>\n                                <Link to={`/tracksymptoms`}>Tracking Symptoms</Link></li>\n                            <li onClick={this.props.menuState}>\n                                <Link to={`/selectState`}>Select State</Link></li>\n                            <li onClick={this.props.menuState}>\n                                <Link to={`/addText`}>Add Text</Link></li>\n                        </ul>\n                    </div>\n                    <div className='wrapper'>\n                        {/*<Route> changes the content of this div (wrapper) based onb the URL*/}\n                        <Route exact={true} path='/' component={login} />\n                        <Route exact={true} path='/login' component={login} />\n                        <Route exact={true} path='/tracksymptoms' component={Symptoms} />\n                        <Route exact={true} path='/selectState' component={SelectState} />\n                        <Route exact={true} path='/addText' component={addText} />\n                        <Route exact={true} path='/registration' component={RegistrationForm} />\n                        <Route path='/pages/:id' component={Page} />\n                        <Route exact={true} path='/graph' component={Graph} />  \n                        <Route exact={true} path='/graph/:id' component={Graph} /> \n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default Navbar;","//This is the main page f the app\n//Start this app by typing: 'npm start' in a terminal \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/*Navbar is the navbar for all pages */\nimport Navbar from './Commons/comon.navbar';\n\n/*PageWrap is the class encomassing all the pages wrapped in <Router>. \nThe Nav bar is always ther and under it are the various pages represented by\n<Route.. */\nclass PageWrap extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { isMenuOpen: false };\n    }\n\n    menuState = () => {\n        this.setState({ isMenuOpen: !this.state.isMenuOpen });\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar menuState={this.menuState} isMenuOpen={this.state.isMenuOpen}/>\n            </div>\n        );\n    }\n}\n\n\nfunction main() {\n    return (\n        <div id=\"App\">\n            <PageWrap pageWrapId={\"pageContent\"} outerContainerId={\"App\"} />\n        </div>\n    );\n}\n\nReactDOM.render(main(), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n//serviceWorker.register();"],"sourceRoot":""}